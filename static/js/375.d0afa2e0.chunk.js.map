{"version":3,"file":"static/js/375.d0afa2e0.chunk.js","mappings":"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","sources":["helpers.js","components/Layout.js","Pages/Home.js","Pages/Error.js","Pages/Snake.js","Pages/Board.js","Pages/Lights/boardHandlers.js","Pages/Lights/matrices.js","Pages/Lights/chaseHandlers.js","Pages/Lights/Example.js","Pages/Lights/Info.js","Pages/Lights/LightsOut.js","components/ResearchDemo.js","Pages/ZSharp.js","Pages/Oligopoly.js","Pages/Interpreters.js","Pages/index.js","calculate.js","hooks.js"],"sourcesContent":["import { Tooltip, IconButton, Paper, Box, Grid } from './components/mui';\nimport {\n    Refresh,\n    HomeRounded,\n    CloseRounded,\n    GamepadRounded,\n    KeyboardArrowUpRounded,\n    KeyboardArrowDownRounded,\n    KeyboardArrowLeftRounded,\n    KeyboardArrowRightRounded,\n    Code,\n    Psychology,\n    Cloud,\n    Work,\n} from './components/icons';\nimport React, { useCallback, forwardRef } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { getSpace } from './calculate';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    ANIMATIONS,\n    COMPONENT_VARIANTS,\n} from './config/theme';\n\n/**\n * Icon mapping utility to eliminate repetitive icon selection logic\n * Maps skill icon names to their corresponding Material-UI icon components\n */\nexport const ICON_MAP = {\n    Code: Code,\n    Psychology: Psychology,\n    Cloud: Cloud,\n    Work: Work,\n};\n\n/**\n * TooltipButton component provides accessible icon buttons with tooltips\n * for improved user experience and screen reader support.\n */\nexport function TooltipButton(props) {\n    const { Icon, title, ...rest } = props;\n\n    return (\n        <Tooltip title={title}>\n            <IconButton size=\"large\" aria-label={title} {...rest}>\n                <Icon fontSize=\"inherit\" aria-hidden=\"true\" />\n            </IconButton>\n        </Tooltip>\n    );\n}\n\n/**\n * HomeButton component provides accessible navigation to home page\n * with proper ARIA labels and keyboard navigation support.\n */\nexport function HomeButton({ hide, ...rest }) {\n    if (hide) return null;\n\n    return (\n        <TooltipButton\n            to=\"/\"\n            key=\"Home\"\n            title=\"Navigate to Home\"\n            component={Link}\n            Icon={HomeRounded}\n            aria-label=\"Navigate to Home page\"\n            {...rest}\n        />\n    );\n}\n\nfunction Cell({ size, children, ...rest }) {\n    const remSize = `${size}rem`;\n    const radius = `${size / 4}rem`;\n\n    const props = {\n        ...COMPONENT_VARIANTS.flexCenter,\n        borderRadius: radius,\n        height: remSize,\n        width: remSize,\n        fontSize: `${size * 0.25}rem`,\n        fontWeight: TYPOGRAPHY.fontWeight.semibold,\n        fontFamily: 'monospace',\n        transition: ANIMATIONS.transition,\n    };\n\n    const combined = {\n        ...props,\n        ...rest,\n    };\n\n    return <Box {...combined}>{children}</Box>;\n}\n\nfunction Row(props) {\n    const { cols, size, index, spacing, cellProps } = props;\n\n    const WrappedCell = (_, j) => (\n        <Cell {...cellProps(index, j)} key={`${index}_${j}`} size={size} />\n    );\n\n    return (\n        <Grid container size={12} spacing={spacing} justifyContent=\"center\">\n            {Array.from({ length: cols }, WrappedCell)}\n        </Grid>\n    );\n}\n\n/**\n * CustomGrid component provides accessible grid layout with proper\n * ARIA roles and semantic structure for screen readers.\n */\nexport function CustomGrid(props) {\n    const { size, rows, cols, cellProps, ...rest } = props;\n\n    const auto = getSpace(size);\n    const { space = auto } = props;\n    const rem = `${space}rem`;\n\n    const getRow = useCallback(\n        (_, i) => (\n            <Row\n                index={i}\n                cols={cols}\n                size={size}\n                spacing={rem}\n                key={`row_${i}`}\n                cellProps={cellProps}\n            />\n        ),\n        [cols, size, rem, cellProps]\n    );\n\n    return (\n        <Grid\n            container\n            size={12}\n            spacing={rem}\n            alignItems=\"center\"\n            role=\"grid\"\n            aria-label={`Grid with ${rows} rows and ${cols} columns`}\n            {...rest}\n        >\n            {Array.from({ length: rows }, getRow)}\n        </Grid>\n    );\n}\n\n/**\n * Navigation component provides accessible navigation controls\n * with proper ARIA landmarks and keyboard navigation support.\n */\nexport function Navigation({ children, ...rest }) {\n    return (\n        <Paper\n            elevation={0}\n            component=\"nav\"\n            role=\"navigation\"\n            aria-label=\"Game controls navigation\"\n            sx={{\n                transform: 'translateX(-50%)',\n                position: 'absolute',\n                bottom: 50,\n                left: '50%',\n                zIndex: 10,\n                backgroundColor: 'hsla(0, 0%, 3%, 0.95)',\n                backdropFilter: 'blur(24px) saturate(180%)',\n                border: `1px solid ${COLORS.border.subtle}`,\n                borderRadius: SPACING.borderRadius.lg,\n                boxShadow: '0 8px 32px hsla(0, 0%, 0%, 0.35)',\n                padding: '16px 24px',\n                ...rest,\n            }}\n        >\n            <Grid\n                container\n                spacing={2}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexWrap: 'nowrap',\n                    minWidth: 0, // Allow shrinking on mobile\n                }}\n            >\n                {children}\n            </Grid>\n        </Paper>\n    );\n}\n\n/**\n * RandomButton component provides a reusable random action button\n * with consistent styling and accessibility across different games.\n */\nexport function RandomButton({\n    title = 'Randomize',\n    onClick,\n    enabled = false,\n    enabledTitle = 'Disable Random',\n    disabledTitle = 'Enable Random',\n    showToggleState = false,\n    hide = false,\n    ...props\n}) {\n    if (hide) return null;\n\n    const buttonTitle = showToggleState\n        ? enabled\n            ? enabledTitle\n            : disabledTitle\n        : title;\n\n    const ariaLabel = showToggleState\n        ? enabled\n            ? enabledTitle\n            : disabledTitle\n        : title;\n\n    return (\n        <TooltipButton\n            title={buttonTitle}\n            Icon={Refresh}\n            onClick={onClick}\n            aria-label={ariaLabel}\n            sx={{\n                color:\n                    showToggleState && enabled\n                        ? COLORS.primary.main\n                        : 'inherit',\n                backgroundColor:\n                    showToggleState && enabled\n                        ? `${COLORS.primary.main}20`\n                        : 'transparent',\n                ...props.sx,\n            }}\n            {...props}\n        />\n    );\n}\n\n/**\n * Controls component provides accessible game controls with proper\n * keyboard navigation and screen reader announcements.\n * Layout: [Home] [Random] [GameSpecificButton]\n */\nexport function Controls({\n    handler,\n    onRandom,\n    randomEnabled,\n    children,\n    size = 'inherit',\n    hide = false,\n}) {\n    const opacity = hide ? 0.8 : 1;\n\n    return (\n        <Navigation opacity={opacity}>\n            <HomeButton hide={hide} size={size} />\n            {onRandom && (\n                <RandomButton\n                    onClick={onRandom}\n                    enabled={randomEnabled}\n                    showToggleState={!!randomEnabled}\n                    enabledTitle=\"Disable Random Moves\"\n                    disabledTitle=\"Enable Random Moves\"\n                    hide={hide}\n                    size={size}\n                />\n            )}\n            {children}\n        </Navigation>\n    );\n}\n\n/**\n * ArrowsButton component provides a toggle button for showing/hiding\n * directional controls with proper accessibility.\n */\nexport function ArrowsButton({\n    show = false,\n    setShow,\n    handler,\n    size = 'inherit',\n    hide = false,\n}) {\n    const flip = useCallback(() => setShow(!show), [show, setShow]);\n\n    if (hide) return null;\n\n    if (!show) {\n        return (\n            <TooltipButton\n                title=\"Show Game Controls\"\n                Icon={GamepadRounded}\n                onClick={flip}\n                aria-label=\"Show game controls\"\n                size={size}\n            />\n        );\n    }\n\n    return (\n        <Grid role=\"group\" aria-label=\"Directional controls\">\n            <Grid width=\"100%\" display=\"flex\" justifyContent=\"center\">\n                <TooltipButton\n                    title=\"Move Up\"\n                    Icon={KeyboardArrowUpRounded}\n                    onClick={handler('up')}\n                    aria-label=\"Move up\"\n                    size={size}\n                />\n            </Grid>\n            <Grid>\n                <TooltipButton\n                    title=\"Move Left\"\n                    Icon={KeyboardArrowLeftRounded}\n                    onClick={handler('left')}\n                    aria-label=\"Move left\"\n                    size={size}\n                />\n                <IconButton\n                    size={size === 'inherit' ? 'large' : size}\n                    onClick={flip}\n                    aria-label=\"Hide controls\"\n                >\n                    <CloseRounded fontSize=\"inherit\" aria-hidden=\"true\" />\n                </IconButton>\n                <TooltipButton\n                    title=\"Move Right\"\n                    Icon={KeyboardArrowRightRounded}\n                    onClick={handler('right')}\n                    aria-label=\"Move right\"\n                    size={size}\n                />\n            </Grid>\n            <Grid width=\"100%\" display=\"flex\" justifyContent=\"center\">\n                <TooltipButton\n                    title=\"Move Down\"\n                    Icon={KeyboardArrowDownRounded}\n                    onClick={handler('down')}\n                    aria-label=\"Move down\"\n                    size={size}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\n/**\n * GlassCard component provides a consistent glassmorphism container\n * with backdrop blur, subtle borders, and elevation shadows.\n * Replaces repetitive glass container styling across components.\n * Uses forwardRef to support Material-UI transitions like Fade.\n *\n * @param {boolean} interactive - Whether the card should have hover effects and pointer cursor\n */\nexport const GlassCard = forwardRef(function GlassCard(\n    {\n        children,\n        padding = SPACING.padding.md,\n        sx,\n        className,\n        interactive = false,\n        ...props\n    },\n    ref\n) {\n    return (\n        <Box\n            ref={ref}\n            className={`glass-card ${className || ''}`}\n            sx={{\n                ...(interactive\n                    ? COMPONENT_VARIANTS.interactiveCard\n                    : COMPONENT_VARIANTS.card),\n                padding,\n                ...sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n});\n","import React from 'react';\nimport { Container, Box } from '../components/mui';\nimport { SPACING, COMPONENT_VARIANTS, COLORS } from '../config/theme';\n\n/**\n * Section component provides consistent section layout with proper spacing\n * and responsive padding for improved maintainability.\n */\nexport function Section({\n    children,\n    id,\n    paddingY = SPACING.padding.lg,\n    paddingX = SPACING.padding.lg,\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}) {\n    return (\n        <Container\n            maxWidth={false}\n            id={id}\n            sx={{\n                paddingY,\n                paddingX,\n                ...props.sx,\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * BackgroundBox component provides consistent background positioning\n * for page background elements.\n */\nexport function BackgroundBox({ children, ...props }) {\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                background: COLORS.surface.background,\n                zIndex: -1,\n                ...props.sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n\n/**\n * HeroContainer component provides consistent hero section layout\n * with centered content and responsive padding.\n */\nexport function HeroContainer({\n    children,\n    paddingBottom = '4rem',\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}) {\n    return (\n        <Container\n            maxWidth={false}\n            sx={{\n                flex: 1,\n                ...COMPONENT_VARIANTS.flexCenter,\n                paddingTop: 0,\n                paddingBottom,\n                paddingX: {\n                    xs: SPACING.padding.sm,\n                    md: SPACING.padding.lg,\n                },\n                maxWidth: '100%',\n                overflowX: 'hidden',\n                ...props.sx,\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * PageLayout component provides consistent page layout with background,\n * full height, and proper positioning for improved maintainability.\n */\nexport function PageLayout({ children, ...props }) {\n    return (\n        <Box\n            sx={{\n                minHeight: '100vh',\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n                ...props.sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Grid,\n    Typography,\n    Box,\n    Menu,\n    MenuItem,\n    Fade,\n    Button,\n} from '../components/mui';\n\nimport { TooltipButton, GlassCard, ICON_MAP } from '../helpers';\nimport { Section, HeroContainer } from '../components/Layout';\nimport {\n    PERSONAL_INFO,\n    URLS,\n    SKILLS,\n    PUBLICATIONS,\n    PROJECTS,\n    PAGE_TITLES,\n} from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    ANIMATIONS,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nimport {\n    GitHub,\n    Work,\n    LocationOn,\n    OpenInNew,\n    ArrowForward,\n    Code,\n    Psychology,\n    GamepadRounded,\n    ViewModuleRounded,\n} from '../components/icons';\n\n// Project categories with enhanced metadata\nconst PROJECT_CATEGORIES = {\n    research: {\n        title: 'Research',\n        icon: Psychology,\n        color: COLORS.data.green,\n        projects: {\n            ZSharp: {\n                path: '/ZSharp',\n                description: 'ML optimization method',\n                technology: 'PyTorch',\n            },\n            Oligopoly: {\n                path: '/Oligopoly',\n                description: 'Market simulation model',\n                technology: 'FastAPI',\n            },\n        },\n    },\n    games: {\n        title: 'Games',\n        icon: GamepadRounded,\n        color: COLORS.primary.main,\n        projects: {\n            Snake: {\n                path: '/Snake',\n                description: 'Retro arcade gameplay',\n                technology: 'JavaScript',\n            },\n            Lights_Out: {\n                path: '/Lights_Out',\n                description: 'Grid-based logic puzzle',\n                technology: 'JavaScript',\n            },\n        },\n    },\n    tools: {\n        title: 'Tools',\n        icon: Code,\n        color: COLORS.data.amber,\n        projects: {\n            Interpreters: {\n                path: '/Interpreters',\n                description: 'Esoteric language demos',\n                technology: 'JavaScript',\n            },\n        },\n    },\n};\n\nfunction ProjectDropdown() {\n    return (\n        <Box sx={{ padding: '16px 16px 0 16px' }}>\n            {Object.entries(PROJECT_CATEGORIES).map(\n                ([categoryKey, category]) => {\n                    const IconComponent = category.icon;\n                    return (\n                        <Box key={categoryKey} sx={{ marginBottom: 2 }}>\n                            {/* Category Header */}\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: 1,\n                                    padding: '8px 0 4px 0',\n                                    marginBottom: 0.5,\n                                    position: 'relative',\n                                    '&::after': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        bottom: 0,\n                                        left: 0,\n                                        right: 0,\n                                        height: '1px',\n                                        backgroundColor:\n                                            'rgba(255, 255, 255, 0.05)',\n                                    },\n                                }}\n                            >\n                                <IconComponent\n                                    sx={{\n                                        color: '#4C78FF',\n                                        fontSize: '14px',\n                                        opacity: 0.7,\n                                    }}\n                                />\n                                <Typography\n                                    sx={{\n                                        color: 'rgba(157, 163, 174, 0.7)',\n                                        fontSize: '10px',\n                                        fontWeight: 500,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.14em',\n                                        fontFamily:\n                                            'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\n                                    }}\n                                >\n                                    {category.title}\n                                </Typography>\n                            </Box>\n\n                            {/* Category Projects */}\n                            {Object.entries(category.projects).map(\n                                ([projectName, project]) => (\n                                    <MenuItem\n                                        key={projectName}\n                                        component={Link}\n                                        to={project.path}\n                                        sx={{\n                                            padding: '10px 12px',\n                                            borderRadius: '8px',\n                                            margin: '0',\n                                            minHeight: '40px',\n                                            transition: 'all 120ms ease',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            alignItems: 'flex-start',\n                                            gap: '6px',\n                                            '&:hover': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.06)',\n                                                transform: 'translateY(-1px)',\n                                            },\n                                            '&:active': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.08)',\n                                            },\n                                            '&:focus-visible': {\n                                                outline: 'none',\n                                                ring: '1px solid rgba(255, 255, 255, 0.2)',\n                                                ringOffset: '0',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                fontWeight: 600,\n                                                fontSize: '15px',\n                                                lineHeight: 1.6,\n                                                color: '#EDEDED',\n                                            }}\n                                        >\n                                            {projectName.replace('_', ' ')}\n                                        </Typography>\n                                        <Typography\n                                            sx={{\n                                                color: 'rgba(157, 163, 174, 0.8)',\n                                                fontSize: '12px',\n                                                lineHeight: 1.4,\n                                            }}\n                                        >\n                                            {project.description}\n                                        </Typography>\n                                    </MenuItem>\n                                )\n                            )}\n                        </Box>\n                    );\n                }\n            )}\n        </Box>\n    );\n}\n\nfunction clickHandler(setAnchor) {\n    return event => {\n        setAnchor(event.currentTarget);\n    };\n}\n\nfunction closeHandler(setAnchor) {\n    return () => {\n        setAnchor(null);\n    };\n}\n\nfunction MenuButton() {\n    const [anchor, setAnchor] = useState(null);\n    const handleClick = clickHandler(setAnchor);\n    const handleClose = closeHandler(setAnchor);\n    const open = Boolean(anchor);\n\n    const define = value => {\n        return open ? value : undefined;\n    };\n\n    return (\n        <Box>\n            <TooltipButton\n                title=\"Projects Menu\"\n                id=\"projects-menu-button\"\n                Icon={ViewModuleRounded}\n                aria-controls={define('projects-menu')}\n                aria-expanded={define('true')}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                    '&:hover': {\n                        backgroundColor: COLORS.interactive.hover,\n                        transform: 'scale(1.05)',\n                    },\n                }}\n            />\n            <Menu\n                id=\"projects-menu\"\n                open={open}\n                anchorEl={anchor}\n                disableAutoFocusItem={true}\n                sx={{\n                    marginLeft: 1,\n                    marginTop: 1,\n                    '& .MuiPaper-root': {\n                        width: 'auto',\n                        maxWidth: '300px',\n                        height: 'auto !important',\n                        backgroundColor: 'rgba(11, 11, 12, 0.95)',\n                        backdropFilter: 'blur(8px)',\n                        border: '1px solid rgba(255, 255, 255, 0.1)',\n                        borderRadius: '16px',\n                        padding: 0,\n                        boxShadow: '0 8px 30px rgba(0, 0, 0, 0.35)',\n                        transition: 'all 140ms cubic-bezier(0.2, 0.8, 0.2, 1)',\n                        transform: open\n                            ? 'translateY(0) scale(1)'\n                            : 'translateY(8px) scale(0.98)',\n                        opacity: open ? 1 : 0,\n                    },\n                }}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'projects-menu-button',\n                    sx: {\n                        padding: 0,\n                        height: 'auto',\n                    },\n                }}\n                transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n            >\n                <ProjectDropdown />\n            </Menu>\n        </Box>\n    );\n}\n\nexport default function Home() {\n    useEffect(() => {\n        document.title = PAGE_TITLES.home;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Modern Navigation */}\n            <Box\n                sx={{\n                    position: 'relative',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    padding: { xs: '0.5rem', md: '1.5rem' },\n                    zIndex: 1000,\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    maxWidth: '100%', // Prevent overflow\n                    overflowX: 'hidden', // Hide any overflow\n                }}\n            >\n                <MenuButton />\n                <TooltipButton\n                    component=\"a\"\n                    href={URLS.githubProfile}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title=\"GitHub Profile\"\n                    Icon={GitHub}\n                />\n            </Box>\n\n            {/* Spacing between nav and hero */}\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n\n            {/* Hero Section */}\n            <HeroContainer>\n                <Grid container spacing={{ xs: 4, md: 8 }} alignItems=\"center\">\n                    {/* Left Side - Introduction */}\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={800}>\n                            <Box>\n                                <Typography\n                                    sx={{\n                                        color: COLORS.primary.main,\n                                        fontSize: TYPOGRAPHY.fontSize.body,\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.025em',\n                                        marginBottom: 3,\n                                    }}\n                                >\n                                    Hello, I&apos;m\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.primary,\n                                        fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                        fontSize: {\n                                            xs: 'clamp(2rem, 8vw, 2.5rem)', // Mobile sizing\n                                            md: 'clamp(3rem, 6vw, 5rem)', // Desktop sizing\n                                        },\n                                        lineHeight: 1.4,\n                                        letterSpacing: '0',\n                                        marginBottom: 2,\n                                        // Allow controlled wrapping, but prevent breaks in names\n                                        wordBreak: 'keep-all', // Prevent breaking within words\n                                        hyphens: 'none', // Disable hyphenation\n                                    }}\n                                >\n                                    {PERSONAL_INFO.name}\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.secondary,\n                                        fontSize: {\n                                            xs: 'clamp(0.875rem, 4vw, 1.125rem)', // Mobile sizing\n                                            md: 'clamp(1.125rem, 2.5vw, 1.5rem)', // Desktop sizing\n                                        },\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        marginBottom: 4,\n                                        lineHeight: 1.4,\n                                        // Control how text breaks, allowing smart wrapping\n                                        wordBreak: 'keep-all', // Prevent breaking within words\n                                        hyphens: 'none', // Disable hyphenation\n                                    }}\n                                >\n                                    {PERSONAL_INFO.title}\n                                </Typography>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 2,\n                                        marginBottom: 4,\n                                    }}\n                                >\n                                    <LocationOn\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                        }}\n                                    >\n                                        {PERSONAL_INFO.location}\n                                    </Typography>\n                                </Box>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        gap: 2,\n                                        flexWrap: 'wrap',\n                                    }}\n                                >\n                                    <Box\n                                        onClick={() => {\n                                            const element =\n                                                document.getElementById(\n                                                    'featured-work'\n                                                );\n                                            if (element) {\n                                                element.scrollIntoView({\n                                                    behavior: 'smooth',\n                                                    block: 'start',\n                                                    inline: 'nearest',\n                                                });\n                                            }\n                                        }}\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            gap: 1,\n                                            padding: '12px 20px',\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                            borderRadius:\n                                                SPACING.borderRadius.full,\n                                            transition: ANIMATIONS.transition,\n                                            cursor: 'pointer',\n                                            '&:hover': {\n                                                transform:\n                                                    'scale(1.02) translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 20px hsla(0, 0%, 0%, 0.25)',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.body,\n                                            }}\n                                        >\n                                            View Work\n                                        </Typography>\n                                        <ArrowForward\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontSize: '1rem',\n                                            }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Fade>\n                    </Grid>\n\n                    {/* Right Side - Skills & Contact */}\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={1000}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    gap: 4,\n                                }}\n                            >\n                                {/* Compact Skills Section */}\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Tech Stack\n                                    </Typography>\n\n                                    {/* Responsive Skills Grid */}\n                                    <Box\n                                        sx={{\n                                            display: 'grid',\n                                            gridTemplateColumns: {\n                                                xs: '1fr', // Single column on mobile\n                                                md: 'repeat(3, 1fr)', // 3 columns on desktop\n                                            },\n                                            gap: {\n                                                xs: 1.5, // Smaller gap on mobile\n                                                md: 2,\n                                            },\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        {SKILLS.map((skill, index) => {\n                                            const IconComponent =\n                                                ICON_MAP[skill.icon] || Work;\n\n                                            return (\n                                                <Fade\n                                                    in\n                                                    timeout={1200 + index * 150}\n                                                    key={skill.name}\n                                                >\n                                                    <Box\n                                                        sx={{\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .selected,\n                                                            border: `1px solid hsla(217, 91%, 60%, 0.2)`,\n                                                            borderRadius:\n                                                                SPACING\n                                                                    .borderRadius\n                                                                    .md,\n                                                            padding: {\n                                                                xs: '12px',\n                                                                md: '16px',\n                                                            },\n                                                            display: 'flex',\n                                                            alignItems:\n                                                                'center',\n                                                            gap: {\n                                                                xs: 1,\n                                                                md: 1.5,\n                                                            },\n                                                            transition:\n                                                                ANIMATIONS.transition,\n                                                            cursor: 'pointer',\n                                                            minWidth: 0,\n                                                            overflow: 'hidden',\n                                                            '&:hover': {\n                                                                ...ANIMATIONS\n                                                                    .presets\n                                                                    .cardHover,\n                                                                transform:\n                                                                    'translateY(-2px) scale(1.01)',\n                                                            },\n                                                        }}\n                                                    >\n                                                        <IconComponent\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                            }}\n                                                        />\n                                                        <Typography\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                                fontWeight:\n                                                                    TYPOGRAPHY\n                                                                        .fontWeight\n                                                                        .medium,\n                                                                whiteSpace:\n                                                                    'nowrap', // Prevent wrapping\n                                                                overflow:\n                                                                    'hidden', // Hide overflow\n                                                                textOverflow:\n                                                                    'ellipsis', // Show ellipsis if too long\n                                                                flexShrink: 1, // Allow text to shrink\n                                                            }}\n                                                        >\n                                                            {skill.name}\n                                                        </Typography>\n                                                    </Box>\n                                                </Fade>\n                                            );\n                                        })}\n                                    </Box>\n                                </GlassCard>\n\n                                {/* Contact & Action Section */}\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Let&apos;s Connect\n                                    </Typography>\n\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            lineHeight: 1.5,\n                                            marginBottom: 4,\n                                        }}\n                                    >\n                                        Open to opportunities in backend\n                                        development, ML engineering, and\n                                        research collaboration.\n                                    </Typography>\n\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            gap: 2,\n                                        }}\n                                    >\n                                        <Button\n                                            component=\"a\"\n                                            href={URLS.githubProfile}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            variant=\"secondary\"\n                                            startIcon={<GitHub />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                            }}\n                                        >\n                                            View GitHub\n                                        </Button>\n\n                                        <Button\n                                            component=\"a\"\n                                            href=\"mailto:bangyenp@gmail.com?subject=Project%20Collaboration\"\n                                            variant=\"ghost\"\n                                            endIcon={<ArrowForward />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                            }}\n                                        >\n                                            Available for Projects\n                                        </Button>\n                                    </Box>\n                                </GlassCard>\n                            </Box>\n                        </Fade>\n                    </Grid>\n                </Grid>\n            </HeroContainer>\n\n            {/* Featured Work Section */}\n            <Section id=\"featured-work\">\n                <Fade in timeout={1400}>\n                    <Box>\n                        <Typography\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontSize: TYPOGRAPHY.fontSize.h2,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                textAlign: 'center',\n                                marginBottom: 6,\n                            }}\n                        >\n                            Featured Work\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridTemplateColumns: {\n                                    xs: '1fr',\n                                    md: 'repeat(2, 1fr)',\n                                },\n                                gap: 4,\n                            }}\n                        >\n                            {/* Publications */}\n                            {PUBLICATIONS.map((publication, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + index * 200}\n                                    key={publication.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={publication.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            height: '100%',\n                                            display: 'flex',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard sx={{ border: 'none' }}>\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Research\n                                                </Typography>\n                                                <OpenInNew\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {publication.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(141, 64%, 49%, 0.1)',\n                                                        color: 'hsl(141, 64%, 49%)',\n                                                        border: '1px solid hsla(141, 64%, 49%, 0.2)',\n                                                    }}\n                                                >\n                                                    {publication.conference}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {publication.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n\n                            {/* Projects */}\n                            {PROJECTS.map((project, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + (index + 2) * 200}\n                                    key={project.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={project.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            height: '100%',\n                                            display: 'flex',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard sx={{ border: 'none' }}>\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Project\n                                                </Typography>\n                                                <GitHub\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {project.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(217, 91%, 60%, 0.1)',\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        border: '1px solid hsla(217, 91%, 60%, 0.2)',\n                                                    }}\n                                                >\n                                                    {project.technology}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {project.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n                        </Box>\n                    </Box>\n                </Fade>\n            </Section>\n\n            {/* Bottom spacing */}\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { Grid, Typography, Box, Fade } from '../components/mui';\nimport { HomeButton } from '../helpers';\nimport { PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nexport default function Error() {\n    document.title = PAGE_TITLES.error;\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '0.5rem', md: '1.5rem' },\n                boxSizing: 'border-box',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Fade in timeout={1000}>\n                    <Box\n                        sx={{\n                            textAlign: 'center',\n                            maxWidth: '24rem',\n                            width: '100%',\n                            padding: {\n                                xs: '0 1rem',\n                                md: '0 2rem',\n                            },\n                            boxSizing: 'border-box',\n                        }}\n                    >\n                        <Typography\n                            variant=\"h1\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                marginBottom: 2,\n                                fontSize: TYPOGRAPHY.fontSize.display,\n                            }}\n                        >\n                            404\n                        </Typography>\n\n                        <Typography\n                            variant=\"h3\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 2,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.h2,\n                                    md: TYPOGRAPHY.fontSize.h2,\n                                },\n                            }}\n                        >\n                            Page Not Found\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 4,\n                                fontWeight: TYPOGRAPHY.fontWeight.normal,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.body,\n                                    md: TYPOGRAPHY.fontSize.body,\n                                },\n                                lineHeight: 1.5,\n                            }}\n                        >\n                            This page isn&apos;t available. The link you\n                            followed may be broken, or the page may have been\n                            removed.\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                ...COMPONENT_VARIANTS.flexCenter,\n                                marginTop: 4,\n                            }}\n                        >\n                            <HomeButton />\n                        </Box>\n                    </Box>\n                </Fade>\n            </Grid>\n        </Grid>\n    );\n}\n","import {\n    useMemo,\n    useCallback,\n    useReducer,\n    useEffect,\n    useState,\n    useRef,\n} from 'react';\nimport { Grid } from '../components/mui';\n// import * as colors from '@mui/material/colors'; // Removed unused import\n\nimport { convertPixels, gridMove, getDirection } from '../calculate';\nimport { useWindow, useTimer, useKeys } from '../hooks';\nimport { CustomGrid, Controls, ArrowsButton } from '../helpers';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS, COMPONENT_VARIANTS } from '../config/theme';\n\nfunction getRandom(max) {\n    return Math.floor(Math.random() * max);\n}\n\nfunction addNext(max, exclude) {\n    let pos = getRandom(max);\n\n    while (pos in exclude) if (++pos >= max) pos = 0;\n\n    return {\n        ...exclude,\n        [pos]: -1,\n    };\n}\n\nfunction mapBoard(board, change) {\n    const newBoard = {};\n\n    for (const cell in board) {\n        const value = board[cell];\n\n        if (value + change > 0) newBoard[cell] = value + change;\n        else if (value < 0) newBoard[cell] = value;\n    }\n\n    return newBoard;\n}\n\nfunction handleResize(state, rows, cols) {\n    const max = rows * cols;\n    const head = getRandom(max);\n    let next = getRandom(max);\n\n    if (head === next) next = ++next % max;\n\n    return {\n        ...state,\n        rows,\n        cols,\n        head,\n        board: {\n            [head]: state.length,\n            [next]: -1,\n        },\n    };\n}\n\nfunction reduceBoard(state) {\n    let { board, length, head, velocity, buffer } = state;\n    const { rows, cols } = state;\n\n    const max = rows * cols;\n\n    board = mapBoard(board, -1);\n    head = gridMove(head, velocity, rows, cols);\n\n    if (head in board) {\n        const value = board[head];\n        board[head] = length;\n\n        if (value > 0) {\n            board = mapBoard(board, -value);\n        } else {\n            board = mapBoard(board, 1);\n            board = addNext(max, board);\n        }\n\n        length = board[head];\n    } else {\n        board[head] = length;\n    }\n\n    if (buffer.length) {\n        const [first, ...rest] = buffer;\n        buffer = rest;\n\n        if (velocity + first) velocity = first;\n    }\n\n    return {\n        ...state,\n        length,\n        board,\n        head,\n        velocity,\n        buffer,\n    };\n}\n\nfunction handleAction(state, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case 'resize':\n            const { rows, cols } = payload;\n\n            return handleResize(state, rows, cols);\n        case 'steer':\n            const velocity = getDirection(payload.key);\n            let { buffer } = state;\n\n            if (velocity) buffer = [...buffer, velocity];\n\n            return {\n                ...state,\n                buffer,\n            };\n        case 'move':\n            return reduceBoard(state);\n        default:\n            return state;\n    }\n}\n\nexport default function Snake() {\n    const { create: createTimer } = useTimer(100);\n    const { create: createKeys } = useKeys();\n\n    const { height, width } = useWindow();\n    const length = GAME_CONSTANTS.snake.initialLength;\n    const size = GAME_CONSTANTS.snake.segmentSize;\n\n    // State for random moves mode\n    const [randomMovesEnabled, setRandomMovesEnabled] = useState(false);\n    const randomMovesRef = useRef(false);\n\n    // State for arrows visibility\n    const [showArrows, setShowArrows] = useState(false);\n\n    const { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    const initial = useMemo(\n        () => ({\n            velocity: GAME_CONSTANTS.snake.initialVelocity,\n            buffer: [],\n            length,\n        }),\n        [length]\n    );\n\n    const [state, dispatch] = useReducer(\n        handleAction,\n        handleResize(initial, rows, cols)\n    );\n\n    const controlHandler = useCallback(\n        event => () => {\n            const key = GAME_CONSTANTS.controls.arrowPrefix + event;\n\n            dispatch({\n                type: 'steer',\n                payload: { key },\n            });\n        },\n        []\n    );\n\n    const chooseColor = useCallback(\n        (row, col) => {\n            const index = row * cols + col;\n            const board = state.board;\n            let color = 'inherit';\n\n            if (index in board) {\n                if (board[index] > 0)\n                    color = COLORS.primary.main; // Snake body - light blue\n                else color = COLORS.primary.dark; // Food - lighter blue shade\n            }\n\n            return {\n                backgroundColor: color,\n                boxShadow:\n                    color !== 'inherit' ? `0 0 1.25rem ${color}40` : 'none', // 20px\n                border:\n                    color !== 'inherit' ? `0.0625rem solid ${color}` : 'none', // 1px\n            };\n        },\n        [state, cols]\n    );\n\n    useEffect(() => {\n        const wrapDispatch = () => {\n            const directions = 'wasd';\n            const index = getRandom(4);\n            const key = directions[index];\n\n            dispatch({\n                type: 'move',\n            });\n\n            if (getRandom(2) && randomMovesRef.current) {\n                dispatch({\n                    type: 'steer',\n                    payload: { key },\n                });\n            }\n        };\n\n        const wrapDirection = event =>\n            dispatch({\n                type: 'steer',\n                payload: event,\n            });\n\n        createTimer({ repeat: wrapDispatch });\n        createKeys(wrapDirection);\n    }, [createTimer, createKeys]);\n\n    // Update the ref when the state changes\n    useEffect(() => {\n        randomMovesRef.current = randomMovesEnabled;\n    }, [randomMovesEnabled]);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            payload: { rows, cols },\n        });\n    }, [rows, cols]);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.snake;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            position=\"relative\"\n            sx={{\n                background: COLORS.surface.background,\n                overflow: 'hidden',\n            }}\n        >\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    zIndex: 1,\n                }}\n            >\n                <CustomGrid\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={chooseColor}\n                />\n            </Grid>\n            <Controls\n                handler={controlHandler}\n                onRandom={() => setRandomMovesEnabled(!randomMovesEnabled)}\n                randomEnabled={randomMovesEnabled}\n                hide={showArrows}\n                size=\"inherit\"\n            >\n                <ArrowsButton\n                    show={showArrows}\n                    setShow={setShowArrows}\n                    handler={controlHandler}\n                />\n            </Controls>\n        </Grid>\n    );\n}\n","// import * as colors from '@mui/material/colors'; // Removed unused import\nimport { Grid } from '../components/mui';\n\nimport { useMemo, useCallback } from 'react';\nimport { CustomGrid } from '../helpers';\nimport { COLORS } from '../config/theme';\n\nexport function Board(props) {\n    const { frontProps, backProps, size, rows, cols } = props;\n\n    return (\n        <Centered>\n            <CustomGrid\n                space={0}\n                size={size}\n                rows={rows - 1}\n                cols={cols - 1}\n                cellProps={backProps}\n            />\n            <Centered>\n                <CustomGrid\n                    space={0}\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={frontProps}\n                />\n            </Centered>\n        </Centered>\n    );\n}\n\nfunction Centered({ children }) {\n    const style = {\n        transform: 'translate(-50%, -50%)',\n    };\n\n    return (\n        <Grid\n            top=\"50%\"\n            left=\"50%\"\n            width=\"100%\"\n            position=\"absolute\"\n            style={style}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nfunction borderHandler(row, col, getColor) {\n    const self = getColor(row, col);\n    const up = getColor(row - 1, col);\n    const down = getColor(row + 1, col);\n    const left = getColor(row, col - 1);\n    const right = getColor(row, col + 1);\n    const props = {};\n\n    const upCheck = self === up;\n    const downCheck = self === down;\n    const leftCheck = self === left;\n    const rightCheck = self === right;\n\n    if (upCheck || leftCheck) props.borderTopLeftRadius = 0;\n    if (upCheck || rightCheck) props.borderTopRightRadius = 0;\n    if (downCheck || leftCheck) props.borderBottomLeftRadius = 0;\n    if (downCheck || rightCheck) props.borderBottomRightRadius = 0;\n\n    return props;\n}\n\nfunction fillerHandler(row, col, getColor) {\n    const topLeft = getColor(row, col);\n    const topRight = getColor(row, col + 1);\n    const botLeft = getColor(row + 1, col);\n    const botRight = getColor(row + 1, col + 1);\n    let color = true;\n\n    const total = topLeft + topRight + botLeft + botRight;\n\n    if ((!topLeft || !botRight) && total < 3) color = false;\n\n    return color;\n}\n\nexport function usePalette(score) {\n    // High contrast dark blue color scheme for better accessibility\n    const palette = useMemo(() => {\n        // Using darker blues for excellent contrast (5.2:1 ratio)\n        const primary = COLORS.primary.main; // Dark blue for \"on\" state\n        const secondary = COLORS.primary.dark; // Medium blue for \"off\" state\n\n        return { primary, secondary };\n    }, []); // Removed score dependency since we're using fixed colors\n\n    return palette;\n}\n\nexport function useGetters(getTile, palette) {\n    const getColor = useCallback(\n        (row, col) => {\n            const value = getTile(row, col);\n\n            const front = value ? palette.primary : palette.secondary;\n\n            const back = value ? palette.secondary : palette.primary;\n\n            return { front, back };\n        },\n        [getTile, palette]\n    );\n\n    const getBorder = useCallback(\n        (row, col) => {\n            return borderHandler(row, col, getTile);\n        },\n        [getTile]\n    );\n\n    const getFiller = useCallback(\n        (row, col) => {\n            const value = fillerHandler(row, col, getTile);\n\n            return value ? palette.primary : palette.secondary;\n        },\n        [getTile, palette]\n    );\n\n    return {\n        getColor,\n        getBorder,\n        getFiller,\n    };\n}\n\nexport function useHandler(state, palette) {\n    const { grid, rows, cols } = state;\n\n    const getTile = useCallback(\n        (row, col) => {\n            if (row < 0 || col < 0 || row >= rows || col >= cols) return -1;\n\n            return grid[row][col];\n        },\n        [grid, rows, cols]\n    );\n\n    return useGetters(getTile, palette);\n}\n","export function getGrid(rows, cols) {\n    return [...Array(rows)].map(() => Array(cols).fill(0));\n}\n\nexport function flipAdj(row, col, grid) {\n    const cols = grid[0].length;\n    const rows = grid.length;\n\n    grid = grid.map(row => [...row]);\n    grid[row][col] ^= 1;\n\n    if (row > 0) grid[row - 1][col] ^= 1;\n    if (row < rows - 1) grid[row + 1][col] ^= 1;\n\n    if (col > 0) grid[row][col - 1] ^= 1;\n    if (col < cols - 1) grid[row][col + 1] ^= 1;\n\n    return grid;\n}\n\nfunction randomize(rows, cols) {\n    let grid = getGrid(rows, cols);\n\n    for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n            const random = Math.random();\n\n            if (random > 0.5) grid = flipAdj(r, c, grid);\n        }\n    }\n\n    return grid;\n}\n\nexport function handleBoard(state, action) {\n    const { type, row, col } = action;\n\n    let { grid, score, rows, cols } = state;\n\n    switch (type) {\n        case 'adjacent':\n            grid = flipAdj(row, col, grid);\n\n            const flat = grid.flatMap(r => r);\n\n            const done = !flat.includes(1) || !flat.includes(0);\n\n            if (done) {\n                grid = randomize(rows, cols);\n                score += 1;\n            }\n\n            break;\n        case 'random':\n            grid = randomize(rows, cols);\n\n            break;\n        case 'resize':\n            const { newRows, newCols } = action;\n\n            rows = newRows;\n            cols = newCols;\n            grid = randomize(rows, cols);\n\n            break;\n        default:\n            break;\n    }\n\n    return {\n        grid,\n        score,\n        rows,\n        cols,\n    };\n}\n","function getMatrix(cols) {\n    const first = 7 << (cols - 2);\n    const matrix = [first];\n\n    for (let k = 1; k < cols; k++) {\n        const prev = matrix[k - 1];\n        const next = prev >> 1;\n        matrix.push(next);\n    }\n\n    matrix[0] -= 2 ** cols;\n    return matrix;\n}\n\nfunction countBits(num) {\n    let count = 0;\n\n    while (num) {\n        num &= num - 1;\n        count++;\n    }\n\n    return count;\n}\n\nfunction multiplySym(matrixA, matrixB) {\n    const size = matrixA.length;\n    const output = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        let outputRow = 0;\n\n        for (let c = 0; c < size; c++) {\n            const colB = matrixB[c];\n            const value = rowA & colB;\n            const count = countBits(value);\n\n            outputRow <<= 1;\n            outputRow += count & 1;\n        }\n\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getIdentity(size) {\n    const output = Array(size).fill(1);\n\n    for (let r = 0; r < size; r++) output[r] <<= size - r - 1;\n\n    return output;\n}\n\nfunction symmetricPow(matrix, power) {\n    const size = matrix.length;\n    let output = getIdentity(size);\n\n    for (let k = 0; k < power; k++) output = multiplySym(output, matrix);\n\n    return output;\n}\n\nfunction addSym(matrixA, matrixB) {\n    const size = matrixA.length;\n    const output = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        const rowB = matrixB[r];\n        const outputRow = rowA ^ rowB;\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getPolynomial(index) {\n    const output = [0, 1];\n\n    for (let k = 1; k < index; k++) {\n        const curr = output[k];\n        const prev = output[k - 1];\n        const double = curr << 1;\n\n        output.push(double ^ prev);\n    }\n\n    return output[index];\n}\n\nfunction evalPolynomial(matrix, poly) {\n    const size = matrix.length;\n    let output = Array(size).fill(0);\n    let degree = 0;\n\n    while (poly) {\n        if (poly & 1) {\n            const power = symmetricPow(matrix, degree);\n\n            output = addSym(output, power);\n        }\n\n        poly >>= 1;\n        degree++;\n    }\n\n    return output;\n}\n\nfunction sortMatrices(matrix, identity) {\n    const size = matrix.length;\n    const sorted = [...Array(size).keys()].sort(\n        (a, b) => matrix[b] - matrix[a]\n    );\n\n    const original = sorted.map(row => matrix[row]);\n    const inverted = sorted.map(row => identity[row]);\n\n    return [original, inverted];\n}\n\nfunction invertMatrix(matrix) {\n    const size = matrix.length;\n    const identity = getIdentity(size);\n\n    let original = matrix;\n    let inverted = identity;\n\n    for (let c = 0; c < size; c++) {\n        const pow = 1 << (size - c - 1);\n\n        [original, inverted] = sortMatrices(original, inverted);\n\n        for (let r = 0; r < size; r++) {\n            const alt = original[r];\n\n            if (r === c) continue;\n\n            if (alt & pow) {\n                original[r] ^= original[c];\n                inverted[r] ^= inverted[c];\n            }\n        }\n    }\n\n    return inverted;\n}\n\n/*\n    https://math.stackexchange.com/questions/2237467\n    https://en.wikipedia.org/wiki/Fibonacci_polynomials\n    https://graphics.stanford.edu/~seander/bithacks.html#:~:text=Brian%20Kernighan\n*/\nexport function getProduct(input, rows, cols) {\n    const matrix = getMatrix(cols);\n    const weights = getPolynomial(rows + 1);\n    const product = evalPolynomial(matrix, weights);\n    const inverse = invertMatrix(product);\n\n    const binary = parseInt(input.join(''), 2);\n\n    const getParity = row => {\n        const value = row & binary;\n        const count = countBits(value);\n        return count & 1;\n    };\n\n    return inverse.map(getParity);\n}\n","import { getGrid, flipAdj } from './boardHandlers';\nimport { getProduct } from './matrices';\n\nfunction chaseLights(states, dims) {\n    const newStates = [...states];\n    let prev = states.at(-1);\n\n    for (let r = 1; r < dims; r++) {\n        for (let c = 0; c < dims; c++) {\n            if (!prev[r - 1][c]) continue;\n\n            const next = flipAdj(r, c, prev);\n\n            newStates.push(next);\n            prev = next;\n        }\n    }\n\n    return newStates;\n}\n\nfunction fillRow(row, dims) {\n    const blank = Array(dims).fill(0);\n\n    const inputStates = [blank];\n    const outputStates = [blank];\n    const last = [...blank];\n\n    for (let c = 0; c < dims; c++) {\n        if (!row[c]) continue;\n\n        last[c] = 1;\n\n        const input = [...last];\n        const output = getProduct(input, dims, dims);\n\n        inputStates.push(input);\n        outputStates.push(output);\n    }\n\n    return {\n        input: inputStates,\n        output: outputStates,\n    };\n}\n\nfunction extendBack(states, size) {\n    const back = states.at(-1);\n    const extend = [...states];\n\n    while (extend.length < size) extend.push(back);\n\n    return extend;\n}\n\nfunction extendFront(states, size) {\n    const extend = [...states];\n    const front = states[0];\n\n    while (extend.length < size) extend.unshift(front);\n\n    return extend;\n}\n\nexport function getStates(start, dims) {\n    let board = getGrid(dims, dims);\n\n    for (const index of start) {\n        const row = Math.floor(index / dims);\n        const col = index % dims;\n\n        board = flipAdj(row, col, board);\n    }\n\n    let states = chaseLights([board], dims);\n    const last = states.at(-1);\n    const row = last.at(-1);\n\n    let { input, output } = fillRow(row, dims);\n\n    const before = states.length + input.length - 1;\n\n    const top = output.at(-1);\n    let state = last;\n\n    states = extendBack(states, before);\n    input = extendFront(input, before);\n    output = extendFront(output, before);\n\n    for (let k = 0; k < dims; k++) {\n        if (top[k]) {\n            state = flipAdj(0, k, state);\n            states.push(state);\n        }\n    }\n\n    const boardStates = chaseLights(states, dims);\n    const after = boardStates.length;\n\n    const inputStates = extendBack(input, after);\n    const outputStates = extendBack(output, after);\n\n    return {\n        boardStates,\n        inputStates,\n        outputStates,\n    };\n}\n","import { Typography, Grid } from '../../components/mui';\n\nimport { getStates } from './chaseHandlers';\nimport { CustomGrid } from '../../helpers';\nimport { useMobile } from '../../hooks';\nimport { TYPOGRAPHY } from '../../config/theme';\n\nfunction getFrames(states, palette) {\n    const newStates = [-1, ...states, -1];\n    const length = states.length;\n    const frames = {};\n\n    for (let k = 0; k < length + 1; k++) {\n        const state = newStates[k];\n        const next = newStates[k + 1];\n\n        const value = state + 1 ? state : next;\n        const color = value ? palette.primary : palette.secondary;\n\n        const percent = (100 * k) / length;\n        const floor = Math.floor(percent);\n\n        frames[`${floor}%`] = {\n            backgroundColor: color,\n        };\n    }\n\n    return frames;\n}\n\nfunction propHandler(states, getter, palette, id) {\n    return (row, col) => {\n        const state = getter(states, row, col);\n        const frames = getFrames(state, palette);\n        const length = states.length;\n\n        const name = `${id}-${row}-${col}`;\n        const index = `@keyframes ${name}`;\n\n        const animation = `\n            ${name}\n            ${length * 2}s\n            steps(1, start)\n            infinite\n        `;\n\n        const style = {\n            [index]: frames,\n            animation,\n        };\n\n        return { sx: style };\n    };\n}\n\nfunction getRange(dims) {\n    const keys = Array(dims).keys();\n\n    return [...keys];\n}\n\nfunction gridTiles(states, dims) {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n\n    return dRange.map(r => dRange.map(c => lRange.map(k => states[k][r][c])));\n}\n\nfunction rowTiles(states, dims) {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n\n    return dRange.map(r => lRange.map(k => states[k][r]));\n}\n\nfunction Bifold({ children }) {\n    return <Grid size={6}>{children}</Grid>;\n}\n\nfunction Title({ children }) {\n    return (\n        <Bifold>\n            <Typography\n                variant=\"h6\"\n                sx={{\n                    textAlign: 'center',\n                    fontWeight: 'semibold',\n                    fontSize: TYPOGRAPHY.fontSize.body,\n                    lineHeight: '1.2',\n                    letterSpacing: '-0.025em',\n                }}\n            >\n                {children}\n            </Typography>\n        </Bifold>\n    );\n}\n\nexport default function Example({ start, dims, size, palette }) {\n    const small = useMobile('lg');\n    const states = getStates(start, dims);\n    const width = small ? size / 2 : size;\n\n    const { boardStates, inputStates, outputStates } = states;\n\n    const boardTiles = gridTiles(boardStates, dims);\n    const inputTiles = rowTiles(inputStates, dims);\n    const outputTiles = rowTiles(outputStates, dims);\n\n    const getGrid = (s, r, c) => s[r][c];\n    const getRow = (s, r, c) => s[c];\n\n    const getBoard = propHandler(boardTiles, getGrid, palette, 'board');\n    const getInput = propHandler(inputTiles, getRow, palette, 'input');\n    const getOutput = propHandler(outputTiles, getRow, palette, 'output');\n\n    return (\n        <Grid container size={12} spacing={4}>\n            <Grid container size={12}>\n                <Bifold>\n                    <CustomGrid\n                        size={width}\n                        rows={dims}\n                        cols={dims}\n                        cellProps={getBoard}\n                    />\n                </Bifold>\n                <Grid container size={6}>\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getInput}\n                    />\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getOutput}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container size={12}>\n                <Title>Animation Demo</Title>\n                <Title>Pattern Input</Title>\n            </Grid>\n        </Grid>\n    );\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { Backdrop, Typography, Box, Grid } from '../../components/mui';\nimport {\n    CircleRounded,\n    KeyboardArrowDown,\n    Calculate,\n    Replay,\n} from '../../components/icons';\nimport {\n    SPACING,\n    COLORS,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../../config/theme';\nimport { GlassCard, CustomGrid } from '../../helpers';\nimport { getProduct } from './matrices';\nimport { useGetters } from '../Board';\nimport { useMobile } from '../../hooks';\nimport Example from './Example';\n\nfunction getInput(getters, toggleTile) {\n    const { getColor, getBorder } = getters;\n\n    return (r, c) => {\n        const { front, back } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n            onClick: toggleTile(c),\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n            color: front,\n            children: <CircleRounded />,\n        };\n    };\n}\n\nfunction getOutput({ getColor, getBorder }) {\n    return (r, c) => {\n        const { front } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n        };\n    };\n}\n\nfunction useHandler(row, size, palette) {\n    const getTile = useCallback(\n        (r, c) => {\n            if (r !== 0 || c < 0 || c >= size) return -1;\n\n            return row[c];\n        },\n        [row, size]\n    );\n\n    return useGetters(getTile, palette);\n}\n\nexport default function Info(props) {\n    const { rows, cols, size, open, palette, toggleOpen } = props;\n    const isMobile = useMobile('md');\n    const isLargeScreen = useMobile('lg');\n\n    const [row, setRow] = useState(Array(cols).fill(0));\n\n    useEffect(() => {\n        const newRow = Array(cols).fill(0);\n\n        setRow(newRow);\n    }, [cols, palette]);\n\n    const res = getProduct(row, rows, cols);\n\n    const toggleTile = col => event => {\n        event.stopPropagation();\n\n        const newRow = [...row];\n        newRow[col] ^= 1;\n        setRow(newRow);\n    };\n\n    const inputGetters = useHandler(row, cols, palette);\n    const outputGetters = useHandler(res, cols, palette);\n    const inputProps = getInput(inputGetters, toggleTile);\n    const outputProps = getOutput(outputGetters);\n\n    return (\n        <Backdrop\n            open={open}\n            onClick={toggleOpen}\n            sx={{\n                ...COMPONENT_VARIANTS.card,\n                backgroundColor: 'hsla(0, 0%, 3%, 0.85)',\n                transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                border: 'none',\n            }}\n        >\n            <Box\n                sx={{\n                    maxWidth: '80vw',\n                    height: 'fit-content',\n                    maxHeight: '90vh',\n                    overflow: 'auto',\n                    mx: 'auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                    padding: 0,\n                    backgroundColor: 'hsl(0, 0%, 5%)',\n                    borderRadius: SPACING.borderRadius.lg,\n                    border: `1px solid ${COLORS.border.subtle}`,\n                }}\n            >\n                <Box\n                    sx={{\n                        pt: '1rem',\n                        pb: '1rem',\n                        px: '1.25rem',\n                        height: 'fit-content',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        minHeight: 0,\n                    }}\n                >\n                    <Grid\n                        container\n                        spacing={isMobile ? 1.5 : 2}\n                        sx={{ flex: 1, minHeight: 0 }}\n                    >\n                        {/* Top section: Instructions on left, animations on right */}\n                        <Grid\n                            container\n                            size={12}\n                            spacing={2}\n                            sx={{\n                                flex: 1,\n                                minHeight: 0,\n                                maxWidth: {\n                                    xs: '100%',\n                                    lg: SPACING.maxWidth.lg,\n                                },\n                                mx: 'auto',\n                            }}\n                        >\n                            {/* Left half: Algorithm instructions */}\n                            <Grid\n                                size={{ xs: 12, lg: isMobile ? 12 : 6 }}\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    height: isLargeScreen ? '100%' : 'auto',\n                                }}\n                            >\n                                <Box sx={{ flex: 1, overflow: 'auto' }}>\n                                    <GlassCard\n                                        sx={{\n                                            height: !isLargeScreen\n                                                ? '100%'\n                                                : 'auto',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            transition:\n                                                'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                        }}\n                                    >\n                                        <Typography\n                                            variant=\"h5\"\n                                            gutterBottom\n                                            sx={{\n                                                color: COLORS.text.primary,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                mb: 2,\n                                                textAlign: isMobile\n                                                    ? 'center'\n                                                    : 'left',\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.h2,\n                                                lineHeight: 1.4,\n                                                letterSpacing: '0',\n                                            }}\n                                        >\n                                            Chasing Lights Algorithm\n                                        </Typography>\n                                        {/* Step 1 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <KeyboardArrowDown\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase to Bottom\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Turn off rows from top to bottom\n                                                by clicking lights in each row\n                                                to eliminate all lights above\n                                                the bottom row.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 2 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Calculate\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .amber,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Use the Calculator\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Enter the remaining lights\n                                                pattern in the bottom row using\n                                                the interactive calculator\n                                                below.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 3 */}\n                                        <Box sx={{ mb: 1 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Replay\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .green,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase Again\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Apply the calculated solution\n                                                pattern to the top row, then\n                                                chase downward to solve the\n                                                entire puzzle.\n                                            </Typography>\n                                        </Box>\n                                    </GlassCard>\n                                </Box>\n                            </Grid>\n\n                            {/* Right half: Animations */}\n                            {!isLargeScreen && (\n                                <Grid\n                                    size={{ xs: 12, lg: 6 }}\n                                    sx={{\n                                        ...COMPONENT_VARIANTS.flexCenter,\n                                    }}\n                                >\n                                    <GlassCard\n                                        sx={{\n                                            width: '100%',\n                                            height: '100%',\n                                            ...COMPONENT_VARIANTS.flexCenter,\n                                            transition:\n                                                'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                        }}\n                                    >\n                                        <Example\n                                            dims={3}\n                                            size={size * 0.6}\n                                            start={[1, 3, 8]}\n                                            palette={palette}\n                                        />\n                                    </GlassCard>\n                                </Grid>\n                            )}\n                        </Grid>\n\n                        {/* Bottom section: Lights Out Calculator (full width) */}\n                        <Grid container size={12} spacing={2}>\n                            <Grid size={12}>\n                                <GlassCard\n                                    sx={{\n                                        textAlign: 'center',\n                                        paddingBottom: '2rem',\n                                    }}\n                                >\n                                    <Typography\n                                        variant=\"h6\"\n                                        sx={{\n                                            color: COLORS.text.primary,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            lineHeight: 1.4,\n                                            letterSpacing: '0',\n                                            mb: 2,\n                                        }}\n                                    >\n                                        Interactive Calculator\n                                    </Typography>\n\n                                    {/* Input Pattern */}\n                                    <Box sx={{ mb: 2 }}>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={inputProps}\n                                        />\n                                    </Box>\n\n                                    {/* Solution Pattern */}\n                                    <Box>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={outputProps}\n                                        />\n                                    </Box>\n                                </GlassCard>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Backdrop>\n    );\n}\n","import { InfoRounded, CircleRounded } from '../../components/icons';\nimport { useMemo, useEffect, useReducer } from 'react';\nimport { Grid } from '../../components/mui';\n\nimport { Controls, TooltipButton } from '../../helpers';\nimport { Board, useHandler, usePalette } from '../Board';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../../config/constants';\nimport { COLORS } from '../../config/theme';\nimport { getGrid, handleBoard } from './boardHandlers';\nimport { useWindow, useMobile } from '../../hooks';\nimport { convertPixels } from '../../calculate';\nimport Info from './Info';\n\nfunction getFrontProps(getters, dispatch) {\n    const { getColor, getBorder } = getters;\n\n    const flipAdj = (row, col) => {\n        dispatch({\n            type: 'adjacent',\n            row,\n            col,\n        });\n    };\n\n    return (row, col) => {\n        const style = getBorder(row, col);\n        const { front, back } = getColor(row, col);\n\n        return {\n            onClick: () => flipAdj(row, col),\n            children: <CircleRounded />,\n            backgroundColor: front,\n            color: front,\n            style,\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n        };\n    };\n}\n\nexport default function LightsOut() {\n    const { height, width } = useWindow();\n    const mobile = useMobile('sm');\n    const size = mobile\n        ? GAME_CONSTANTS.gridSizes.mobile\n        : GAME_CONSTANTS.gridSizes.desktop;\n\n    let { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    rows -= 1;\n    cols -= 1;\n\n    if (mobile) rows -= 2;\n\n    const initial = {\n        grid: getGrid(rows, cols),\n        score: 0,\n        rows,\n        cols,\n    };\n\n    const [state, dispatch] = useReducer(handleBoard, initial);\n\n    const [open, toggleOpen] = useReducer(open => !open, false);\n\n    const palette = usePalette(state.score);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.lightsOut;\n    }, []);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            newRows: rows,\n            newCols: cols,\n        });\n    }, [rows, cols]);\n\n    const getters = useHandler(state, palette);\n\n    const frontProps = getFrontProps(getters, dispatch);\n\n    const backProps = (row, col) => {\n        return {\n            backgroundColor: getters.getFiller(row, col),\n        };\n    };\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            sx={{\n                background: COLORS.surface.background,\n                position: 'relative',\n            }}\n        >\n            <Board\n                size={size}\n                rows={rows}\n                cols={cols}\n                frontProps={frontProps}\n                backProps={backProps}\n            />\n            <Controls\n                handler={() => {}} // No directional controls for Lights Out\n                onRandom={() => dispatch({ type: 'random' })}\n                size=\"inherit\"\n            >\n                <TooltipButton\n                    title=\"Info\"\n                    Icon={InfoRounded}\n                    onClick={toggleOpen}\n                />\n            </Controls>\n            <Info\n                rows={rows}\n                cols={cols}\n                size={size}\n                open={open}\n                palette={palette}\n                score={state.score}\n                toggleOpen={toggleOpen}\n            />\n        </Grid>\n    );\n}\n","import React from 'react';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Button,\n    Grid,\n    ToggleButton,\n    ToggleButtonGroup,\n} from './mui';\nimport { GitHub, HomeRounded as Home, Refresh, SettingsRounded } from './icons';\nimport { CHART_DIMENSIONS, CHART_FORMATTING } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip as RechartsTooltip,\n    ResponsiveContainer,\n} from 'recharts';\n\n/**\n * Reusable ResearchDemo component for consistent research project visualizations\n * Provides standardized layout, charts, and interactive controls for research demos\n */\nconst ResearchDemo = ({\n    // Basic info\n    title,\n    subtitle,\n    githubUrl,\n\n    // Chart configuration\n    chartData = [],\n    chartConfig = {\n        type: 'line',\n        lines: [],\n        xAxisKey: 'x',\n        yAxisFormatter: value => value.toFixed(2),\n        yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        // Dual Y-axis support\n        dualYAxis: false,\n        rightYAxisFormatter: value => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: value => `Round ${value}`,\n        tooltipFormatter: (value, name) => [value.toFixed(2), name],\n    },\n\n    // View types (for switching between different chart views)\n    viewTypes = [],\n    currentViewType = 'default',\n    onViewTypeChange = () => {},\n\n    // Interactive controls\n    controls = [],\n\n    // Loading state\n    loading = false,\n    loadingMessage = 'Loading data...',\n\n    // Reset functionality\n    onReset = null,\n    resetLabel = 'Reset',\n\n    // Custom chart title\n    chartTitle = null,\n}) => {\n    // Get current chart data based on view type\n    const getCurrentChartData = () => {\n        if (!chartData || chartData.length === 0) return [];\n\n        // If no view types, return data as-is\n        if (!viewTypes.length) return chartData;\n\n        // Find current view type configuration\n        const currentView = viewTypes.find(\n            view => view.key === currentViewType\n        );\n        if (!currentView || !currentView.dataProcessor) return chartData;\n\n        // Process data using the view's data processor\n        return currentView.dataProcessor(chartData);\n    };\n\n    const currentData = getCurrentChartData();\n    const currentChartConfig =\n        viewTypes.find(view => view.key === currentViewType)?.chartConfig ||\n        chartConfig;\n\n    return (\n        <Grid\n            container={true}\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: SPACING.padding.md,\n                paddingBottom: {\n                    xs: SPACING.padding.md,\n                    md: 0,\n                },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -1,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                size={12}\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: 0,\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: '0 2rem',\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {/* Header */}\n                    <Grid\n                        container={true}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                        sx={{ marginBottom: 2 }}\n                    >\n                        <Grid size=\"auto\">\n                            <Typography\n                                variant=\"h1\"\n                                sx={{\n                                    color: COLORS.text.primary,\n                                    fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                    fontSize: TYPOGRAPHY.fontSize.h2,\n                                }}\n                            >\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid size=\"auto\" sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={githubUrl}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component=\"a\" href=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n\n                    <Typography\n                        variant=\"h5\"\n                        sx={{\n                            color: COLORS.text.secondary,\n                            marginTop: 2,\n                            marginBottom: 4,\n                            fontWeight: TYPOGRAPHY.fontWeight.normal,\n                            fontSize: TYPOGRAPHY.fontSize.subheading,\n                        }}\n                    >\n                        {subtitle}\n                    </Typography>\n\n                    {/* Main Chart */}\n                    <GlassCard\n                        sx={{\n                            marginBottom: 3,\n                            width: '100%',\n                            boxSizing: 'border-box',\n                            overflow: 'hidden',\n                        }}\n                    >\n                        <Typography\n                            variant=\"subtitle1\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 2,\n                                textAlign: 'center',\n                                fontWeight: TYPOGRAPHY.fontWeight.medium,\n                                fontSize: TYPOGRAPHY.fontSize.subheading,\n                            }}\n                        >\n                            {chartTitle ||\n                                (viewTypes.length\n                                    ? viewTypes.find(\n                                          view => view.key === currentViewType\n                                      )?.chartTitle || 'Data Visualization'\n                                    : 'Data Visualization')}\n                        </Typography>\n                        <Box sx={{ height: CHART_DIMENSIONS.height }}>\n                            {loading ? (\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        height: '100%',\n                                        color: COLORS.text.secondary,\n                                    }}\n                                >\n                                    <Typography>{loadingMessage}</Typography>\n                                </Box>\n                            ) : (\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                    <LineChart data={currentData}>\n                                        <CartesianGrid\n                                            strokeDasharray={\n                                                CHART_FORMATTING.lines\n                                                    .strokeDashArray\n                                            }\n                                            stroke={COLORS.border.subtle}\n                                        />\n                                        <XAxis\n                                            dataKey={\n                                                currentChartConfig.xAxisKey\n                                            }\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                        />\n                                        <YAxis\n                                            yAxisId=\"left\"\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                            tickFormatter={\n                                                currentChartConfig.yAxisFormatter\n                                            }\n                                            domain={\n                                                currentChartConfig.yAxisDomain\n                                            }\n                                        />\n                                        {currentChartConfig.dualYAxis && (\n                                            <YAxis\n                                                yAxisId=\"right\"\n                                                orientation=\"right\"\n                                                stroke={COLORS.text.secondary}\n                                                tick={{\n                                                    fill: COLORS.text.secondary,\n                                                }}\n                                                tickFormatter={\n                                                    currentChartConfig.rightYAxisFormatter\n                                                }\n                                                domain={\n                                                    currentChartConfig.rightYAxisDomain\n                                                }\n                                            />\n                                        )}\n                                        <RechartsTooltip\n                                            contentStyle={{\n                                                backgroundColor:\n                                                    'hsla(0, 0%, 5%, 0.95)',\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                color: COLORS.text.primary,\n                                            }}\n                                            labelFormatter={\n                                                currentChartConfig.tooltipLabelFormatter\n                                            }\n                                            formatter={\n                                                currentChartConfig.tooltipFormatter\n                                            }\n                                        />\n                                        {currentChartConfig.lines.map(\n                                            (line, index) => (\n                                                <Line\n                                                    key={line.dataKey}\n                                                    yAxisId={\n                                                        line.yAxisId || 'left'\n                                                    }\n                                                    type=\"monotone\"\n                                                    dataKey={line.dataKey}\n                                                    stroke={line.color}\n                                                    strokeWidth={\n                                                        CHART_DIMENSIONS.strokeWidth\n                                                    }\n                                                    name={line.name}\n                                                    dot={{\n                                                        fill: line.color,\n                                                        strokeWidth:\n                                                            CHART_FORMATTING\n                                                                .lines\n                                                                .defaultStrokeWidth,\n                                                        r: CHART_DIMENSIONS.dotRadius,\n                                                    }}\n                                                />\n                                            )\n                                        )}\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            )}\n                        </Box>\n                    </GlassCard>\n\n                    {/* View Type Selection (if multiple view types) */}\n                    {viewTypes.length > 1 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 3,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Chart Views\n                                    </Typography>\n                                </Box>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    display: 'grid',\n                                    gridTemplateColumns: {\n                                        xs: 'repeat(2, minmax(0, 1fr))',\n                                        md: `repeat(${Math.min(viewTypes.length, 4)}, 1fr)`,\n                                    },\n                                    gap: 1.5,\n                                    width: '100%',\n                                    margin: 0,\n                                }}\n                            >\n                                {viewTypes.map(viewType => {\n                                    const IconComponent = viewType.icon;\n                                    return (\n                                        <Button\n                                            key={viewType.key}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            startIcon={\n                                                IconComponent ? (\n                                                    <IconComponent />\n                                                ) : null\n                                            }\n                                            onClick={() =>\n                                                onViewTypeChange(viewType.key)\n                                            }\n                                            sx={{\n                                                width: '100%',\n                                                color:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.text.primary\n                                                        : COLORS.text.secondary,\n                                                backgroundColor:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.primary.main\n                                                        : 'transparent',\n                                                borderColor:\n                                                    COLORS.border.subtle,\n                                                borderWidth: '1px',\n                                                borderStyle: 'solid',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                minHeight: '36px',\n                                                padding: '0.4rem 0.8rem',\n                                                fontSize: '0.8rem',\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .medium,\n                                                transition:\n                                                    'transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease',\n                                                '&:hover': {\n                                                    backgroundColor:\n                                                        currentViewType ===\n                                                        viewType.key\n                                                            ? COLORS.primary\n                                                                  .dark\n                                                            : COLORS.interactive\n                                                                  .hover,\n                                                    transform:\n                                                        'translateY(-1px)',\n                                                    boxShadow:\n                                                        '0 4px 8px rgba(0,0,0,0.1)',\n                                                },\n                                            }}\n                                        >\n                                            {viewType.label}\n                                        </Button>\n                                    );\n                                })}\n                            </Box>\n                        </GlassCard>\n                    )}\n\n                    {/* Interactive Controls */}\n                    {controls.length > 0 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 0,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Parameters\n                                    </Typography>\n                                </Box>\n                                {onReset && (\n                                    <Button\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        startIcon={<Refresh />}\n                                        onClick={onReset}\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            borderColor: COLORS.border.subtle,\n                                            borderRadius:\n                                                SPACING.borderRadius.lg,\n                                            padding: '0.25rem 1rem',\n                                            fontSize: '0.875rem',\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                            transition: 'all 0.2s ease-in-out',\n                                            '&:hover': {\n                                                borderColor:\n                                                    COLORS.primary.main,\n                                                backgroundColor:\n                                                    COLORS.interactive.hover,\n                                                transform: 'translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                            },\n                                        }}\n                                    >\n                                        {resetLabel}\n                                    </Button>\n                                )}\n                            </Box>\n\n                            <Grid container={true} spacing={2.5}>\n                                {controls.map((control, index) => (\n                                    <Grid key={index} size={{ xs: 12, md: 4 }}>\n                                        <Box\n                                            sx={{\n                                                marginBottom: 0,\n                                                padding: '1rem',\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.02)',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    gap: 1,\n                                                    mb: 2,\n                                                }}\n                                            >\n                                                {control.icon && (\n                                                    <control.icon\n                                                        sx={{\n                                                            color:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .light,\n                                                            fontSize: '1.1rem',\n                                                        }}\n                                                    />\n                                                )}\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    sx={{\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                    }}\n                                                >\n                                                    {control.label}\n                                                </Typography>\n                                            </Box>\n                                            <ToggleButtonGroup\n                                                value={control.value}\n                                                exclusive\n                                                onChange={(e, newValue) => {\n                                                    if (newValue !== null) {\n                                                        control.onChange(\n                                                            newValue\n                                                        );\n                                                    }\n                                                }}\n                                                size=\"small\"\n                                                sx={{\n                                                    width: '100%',\n                                                    borderRadius:\n                                                        SPACING.borderRadius.lg,\n                                                    overflow: 'hidden',\n                                                    border: `1px solid ${COLORS.border.subtle}`,\n                                                    '& .MuiToggleButtonGroup-grouped':\n                                                        {\n                                                            margin: 0,\n                                                            border: 0,\n                                                            borderRadius: 0,\n                                                            '&:not(:first-of-type)':\n                                                                {\n                                                                    borderLeft: `1px solid ${COLORS.border.subtle}`,\n                                                                },\n                                                        },\n                                                    '& .MuiToggleButton-root': {\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        borderColor:\n                                                            COLORS.border\n                                                                .subtle,\n                                                        padding:\n                                                            '0.6rem 0.8rem',\n                                                        flex: 1,\n                                                        fontSize: '0.85rem',\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        borderRadius: 0,\n                                                        transition:\n                                                            'all 0.2s ease-in-out',\n                                                        '&.Mui-selected': {\n                                                            backgroundColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            color: COLORS.text\n                                                                .primary,\n                                                            borderColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            '&:hover': {\n                                                                // Use a darker shade on hover for visual feedback\n                                                                backgroundColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                borderColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                transform:\n                                                                    'translateY(-1px)',\n                                                                boxShadow:\n                                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                                            },\n                                                        },\n                                                        '&:hover': {\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .hover,\n                                                            transform:\n                                                                'translateY(-1px)',\n                                                        },\n                                                    },\n                                                }}\n                                            >\n                                                {control.options.map(option => (\n                                                    <ToggleButton\n                                                        key={option.value}\n                                                        value={option.value}\n                                                    >\n                                                        {option.label}\n                                                    </ToggleButton>\n                                                ))}\n                                            </ToggleButtonGroup>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </GlassCard>\n                    )}\n                </Box>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ResearchDemo;\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChartRounded,\n    TrendingUpRounded,\n    ShowChartRounded,\n    AnalyticsRounded,\n} from '../components/icons';\nimport {\n    URLS,\n    PAGE_TITLES,\n    ZSHARP_DEFAULTS,\n    PERCENTAGE,\n} from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport ResearchDemo from '../components/ResearchDemo';\n\n// Load real ZSharp experiment data\nconst loadRealZSharpData = async () => {\n    try {\n        // Check if browser supports DecompressionStream\n        if (typeof DecompressionStream === 'undefined') {\n            throw new Error('DecompressionStream not supported');\n        }\n\n        const response = await fetch('/zsharp_data.json.gz');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump() {\n                        return reader.read().then(({ done, value }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const realData = JSON.parse(decompressedData);\n\n        // Convert real results to chart data format with per-epoch data\n        const data = [];\n        const sgdAccuracies = realData['SGD Baseline']?.train_accuracies || [];\n        const zsharpAccuracies = realData['ZSharp']?.train_accuracies || [];\n        const sgdLosses = realData['SGD Baseline']?.train_losses || [];\n        const zsharpLosses = realData['ZSharp']?.train_losses || [];\n\n        const maxEpochs = Math.max(\n            sgdAccuracies.length,\n            zsharpAccuracies.length\n        );\n\n        for (let i = 0; i < maxEpochs; i++) {\n            data.push({\n                epoch: i + 1,\n                sgd: (sgdAccuracies[i] || 0) / PERCENTAGE.divisor, // Convert to 0-1 range\n                zsharp: (zsharpAccuracies[i] || 0) / PERCENTAGE.divisor,\n                sgdLoss: sgdLosses[i] || 0,\n                zsharpLoss: zsharpLosses[i] || 0,\n            });\n        }\n\n        return data;\n    } catch (error) {\n        // Silently fall back to generated data if real data fails to load\n        return generateFallbackData();\n    }\n};\n\n// Fallback data generation if real data fails to load\nconst generateFallbackData = () => {\n    const data = [];\n    for (let i = 0; i <= ZSHARP_DEFAULTS.maxEpochs; i++) {\n        const sgdAccuracy =\n            ZSHARP_DEFAULTS.baseAccuracy +\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.maxAccuracy - ZSHARP_DEFAULTS.baseAccuracy);\n        const zsharpAccuracy = sgdAccuracy + ZSHARP_DEFAULTS.improvement;\n        const sgdLoss =\n            ZSHARP_DEFAULTS.baseLoss -\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.baseLoss - ZSHARP_DEFAULTS.minLoss);\n        const zsharpLoss = sgdLoss - ZSHARP_DEFAULTS.lossReduction;\n\n        data.push({\n            epoch: i + 1,\n            sgd: sgdAccuracy,\n            zsharp: zsharpAccuracy,\n            sgdLoss: sgdLoss,\n            zsharpLoss: zsharpLoss,\n        });\n    }\n    return data;\n};\n\nconst ZSharp = () => {\n    const [chartData, setChartData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [viewType, setViewType] = useState('accuracy');\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.zsharp;\n\n        // Load real data on component mount\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealZSharpData();\n                setChartData(data);\n            } catch (error) {\n                setChartData(generateFallbackData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    // Define view types for the ResearchDemo component\n    const viewTypes = [\n        {\n            key: 'accuracy',\n            label: 'Accuracy',\n            icon: BarChartRounded,\n            chartTitle: 'Performance Comparison',\n            dataProcessor: data => data,\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                    name,\n                ],\n                lines: [\n                    { dataKey: 'sgd', name: 'SGD', color: COLORS.primary.main },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'loss',\n            label: 'Loss',\n            icon: TrendingUpRounded,\n            chartTitle: 'Loss Evaluation',\n            dataProcessor: data =>\n                data.map(point => ({\n                    epoch: point.epoch,\n                    sgd: point.sgdLoss,\n                    zsharp: point.zsharpLoss,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value => value.toFixed(3),\n                yAxisDomain: ['dataMin - 0.1', 'dataMax + 0.1'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [value.toFixed(3), name],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Loss',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Loss',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'learning_curve',\n            label: 'Learning Gap',\n            icon: ShowChartRounded,\n            chartTitle: 'Learning Progress',\n            dataProcessor: data =>\n                data.map(point => ({\n                    epoch: point.epoch,\n                    gap: point.zsharp - point.sgd,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(2)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'gap',\n                        name: 'Accuracy Gap',\n                        color: COLORS.data.amber,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'convergence',\n            label: 'Convergence',\n            icon: AnalyticsRounded,\n            chartTitle: 'Convergence Analysis',\n            dataProcessor: data =>\n                data.map((point, index) => {\n                    if (index === 0)\n                        return { epoch: point.epoch, sgd: 0, zsharp: 0 };\n                    const prevPoint = data[index - 1];\n                    return {\n                        epoch: point.epoch,\n                        sgd: point.sgd - prevPoint.sgd,\n                        zsharp: point.zsharp - prevPoint.zsharp,\n                    };\n                }),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(3)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Rate',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Rate',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n    ];\n\n    return (\n        <ResearchDemo\n            title=\"ZSharp\"\n            subtitle=\"Neural Network Optimization Research\"\n            githubUrl={URLS.zsharpRepo}\n            chartData={chartData}\n            viewTypes={viewTypes}\n            currentViewType={viewType}\n            onViewTypeChange={setViewType}\n            loading={loading}\n            loadingMessage=\"Loading real experiment data...\"\n        />\n    );\n};\n\nexport default ZSharp;\n","import React, { useState, useEffect } from 'react';\nimport { URLS, PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport {\n    BusinessRounded,\n    TrendingUpRounded,\n    AttachMoneyRounded,\n} from '../components/icons';\nimport ResearchDemo from '../components/ResearchDemo';\n\n// Load real simulation matrix data\nconst loadRealSimulationMatrix = async () => {\n    try {\n        const response = await fetch('/oligopoly_data.json.gz');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump() {\n                        return reader.read().then(({ done, value }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const matrixData = JSON.parse(decompressedData);\n        return matrixData;\n    } catch (error) {\n        return [];\n    }\n};\n\n// Filter matrix data based on current parameters\nconst filterMatrixData = (\n    matrixData,\n    numFirms,\n    modelType,\n    demandElasticity,\n    basePrice,\n    collusionEnabled\n) => {\n    if (!matrixData || matrixData.length === 0) {\n        return generateFallbackOligopolyData();\n    }\n\n    // Find exact matching parameters\n    const filtered = matrixData.filter(\n        item =>\n            item.num_firms === numFirms &&\n            item.model_type === modelType &&\n            item.demand_elasticity === demandElasticity &&\n            item.base_price === basePrice &&\n            item.collusion_enabled === collusionEnabled\n    );\n\n    if (filtered.length === 0) {\n        // Fallback to closest match by num_firms and model_type\n        const closest = matrixData.filter(\n            item => item.num_firms === numFirms && item.model_type === modelType\n        );\n        // Sort by round to ensure proper order\n        const sorted = closest.sort((a, b) => a.round - b.round);\n        return sorted.slice(0, GAME_CONSTANTS.oligopoly.maxRounds);\n    }\n\n    // Sort by round to ensure proper order\n    const sorted = filtered.sort((a, b) => a.round - b.round);\n    return sorted.slice(0, 15);\n};\n\n// Fallback data generation if real data fails to load\nconst generateFallbackOligopolyData = () => {\n    const data = [];\n    for (let i = 1; i <= GAME_CONSTANTS.oligopoly.maxRounds; i++) {\n        const sim = GAME_CONSTANTS.oligopoly.simulation;\n        data.push({\n            round: i,\n            price:\n                sim.fallbackPrice +\n                Math.sin(i * sim.priceFrequency) * sim.priceAmplitude,\n            hhi:\n                sim.fallbackHHI +\n                Math.sin(i * sim.hhiFrequency) * sim.hhiAmplitude,\n            collusion: i > sim.collusionStart && i < sim.collusionEnd,\n        });\n    }\n    return data;\n};\n\nconst Oligopoly = () => {\n    const [numFirms, setNumFirms] = useState(\n        GAME_CONSTANTS.oligopoly.defaultFirms\n    );\n    const [demandElasticity, setDemandElasticity] = useState(\n        GAME_CONSTANTS.oligopoly.defaultElasticity\n    );\n    const [basePrice, setBasePrice] = useState(\n        GAME_CONSTANTS.oligopoly.defaultBasePrice\n    );\n    const [marketData, setMarketData] = useState([]);\n    const [matrixData, setMatrixData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Fixed parameters - Cournot model with no collusion\n    const modelType = GAME_CONSTANTS.modelTypes.cournot;\n    const collusionEnabled = false;\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.oligopoly;\n\n        // Load real simulation matrix on component mount\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealSimulationMatrix();\n                setMatrixData(data);\n                // Set initial data\n                const initialData = filterMatrixData(\n                    data,\n                    numFirms,\n                    modelType,\n                    demandElasticity,\n                    basePrice,\n                    collusionEnabled\n                );\n                setMarketData(initialData);\n            } catch (error) {\n                setMarketData(generateFallbackOligopolyData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, [numFirms, demandElasticity, basePrice, collusionEnabled, modelType]);\n\n    // Update data when parameters change\n    useEffect(() => {\n        if (matrixData.length > 0) {\n            const filteredData = filterMatrixData(\n                matrixData,\n                numFirms,\n                modelType,\n                demandElasticity,\n                basePrice,\n                collusionEnabled\n            );\n            setMarketData(filteredData);\n        }\n    }, [\n        numFirms,\n        demandElasticity,\n        basePrice,\n        matrixData,\n        modelType,\n        collusionEnabled,\n    ]);\n\n    const resetToDefaults = () => {\n        setNumFirms(GAME_CONSTANTS.oligopoly.defaultFirms);\n        setDemandElasticity(GAME_CONSTANTS.oligopoly.defaultElasticity);\n        setBasePrice(GAME_CONSTANTS.oligopoly.defaultBasePrice);\n    };\n\n    // Define controls for the ResearchDemo component\n    const controls = [\n        {\n            label: 'Number of Firms',\n            icon: BusinessRounded,\n            color: COLORS.primary.main,\n            value: numFirms,\n            onChange: setNumFirms,\n            options: [\n                { value: 2, label: '2' },\n                { value: 3, label: '3' },\n                { value: 4, label: '4' },\n                { value: 5, label: '5' },\n            ],\n        },\n        {\n            label: 'Demand Elasticity',\n            icon: TrendingUpRounded,\n            color: COLORS.data.green,\n            value: demandElasticity,\n            onChange: setDemandElasticity,\n            options: [\n                { value: 1.5, label: '1.5' },\n                { value: 2.0, label: '2.0' },\n                { value: 2.5, label: '2.5' },\n            ],\n        },\n        {\n            label: 'Base Price',\n            icon: AttachMoneyRounded,\n            color: COLORS.data.amber,\n            value: basePrice,\n            onChange: setBasePrice,\n            options: [\n                { value: 30, label: '$30' },\n                { value: 40, label: '$40' },\n                { value: 50, label: '$50' },\n            ],\n        },\n    ];\n\n    // Define chart configuration\n    const chartConfig = {\n        type: 'line',\n        xAxisKey: 'round',\n        yAxisFormatter: value => `$${value.toFixed(2)}`,\n        yAxisDomain: ['dataMin - 5', 'dataMax + 5'],\n        // Dual Y-axis support\n        dualYAxis: true,\n        rightYAxisFormatter: value => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: value => `Round ${value}`,\n        tooltipFormatter: (value, name) => [\n            name === 'Market Price' ? `$${value.toFixed(2)}` : value.toFixed(2),\n            name,\n        ],\n        lines: [\n            {\n                dataKey: 'price',\n                name: 'Market Price',\n                color: COLORS.primary.main,\n                yAxisId: 'left',\n            },\n            {\n                dataKey: 'hhi',\n                name: 'HHI Concentration',\n                color: COLORS.data.amber,\n                yAxisId: 'right',\n            },\n        ],\n    };\n\n    return (\n        <ResearchDemo\n            title=\"Oligopoly\"\n            subtitle=\"Agent-Based Economic Competition Analysis\"\n            githubUrl={URLS.oligopolyRepo}\n            chartData={marketData}\n            chartConfig={chartConfig}\n            chartTitle=\"Market Dynamics\"\n            controls={controls}\n            loading={loading}\n            loadingMessage=\"Loading Cournot simulation data...\"\n            onReset={resetToDefaults}\n            resetLabel=\"Reset\"\n        />\n    );\n};\n\nexport default Oligopoly;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Typography, Box, IconButton, Fade } from '../components/mui';\nimport {\n    GitHub,\n    HomeRounded as Home,\n    GridView,\n    TextFields,\n} from '../components/icons';\nimport { URLS, PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\n\nexport default function Interpreters() {\n    useEffect(() => {\n        document.title = PAGE_TITLES.interpreters;\n    }, []);\n\n    const interpreters = [\n        {\n            name: 'Stun Step',\n            path: '/Stun_Step',\n            description:\n                'Ultra-minimal tape-based language with only four commands for basic computation',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'Suffolk',\n            path: '/Suffolk',\n            description:\n                'Register-based language with input/output capabilities and looping behavior',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'WII2D',\n            path: '/WII2D',\n            description:\n                '2D grid language with directional movement, arithmetic operations, and teleportation',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n        {\n            name: 'Back',\n            path: '/Back',\n            description:\n                'Grid-based language with mirror reflections, tape manipulation, and conditional logic',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n    ];\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '1rem', md: '2rem' },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                sx={{\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: `0 ${SPACING.padding.md}`,\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {/* Header */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        sx={{\n                            marginBottom: 4,\n                        }}\n                    >\n                        <Typography\n                            variant=\"h4\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.subheading,\n                                    md: TYPOGRAPHY.fontSize.h2,\n                                },\n                            }}\n                        >\n                            Esolang Interpreters\n                        </Typography>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={URLS.esolangsRepo}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component={Link} to=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                        </Box>\n                    </Grid>\n\n                    {/* Interpreters Grid */}\n                    <Box\n                        sx={{\n                            display: 'grid',\n                            gridTemplateColumns: {\n                                xs: '1fr',\n                                md: '1fr 1fr',\n                            },\n                            gap: { xs: 2, md: 3 },\n                            marginTop: 4,\n                        }}\n                    >\n                        {interpreters.map((interpreter, index) => (\n                            <Fade\n                                in\n                                timeout={800 + index * 150}\n                                key={interpreter.name}\n                            >\n                                <Box\n                                    component={Link}\n                                    to={interpreter.path}\n                                    sx={{\n                                        textDecoration: 'none',\n                                        position: 'relative',\n                                        overflow: 'hidden',\n                                        height: '100%',\n                                        display: 'flex',\n                                        ...COMPONENT_VARIANTS.interactiveCard,\n                                        '&:hover .glass-card': {\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                        },\n                                    }}\n                                >\n                                    <GlassCard sx={{ border: 'none' }}>\n                                        <Box\n                                            sx={{\n                                                ...COMPONENT_VARIANTS.flexCenter,\n                                                gap: 1,\n                                                marginBottom: 2,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                }}\n                                            >\n                                                {interpreter.icon}\n                                            </Box>\n                                            <Typography\n                                                variant=\"h6\"\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                }}\n                                            >\n                                                {interpreter.name}\n                                            </Typography>\n                                        </Box>\n                                        <Typography\n                                            variant=\"body2\"\n                                            sx={{\n                                                color: COLORS.text.secondary,\n                                                wordWrap: 'break-word',\n                                                overflowWrap: 'break-word',\n                                                lineHeight: 1.5,\n                                            }}\n                                        >\n                                            {interpreter.description}\n                                        </Typography>\n                                    </GlassCard>\n                                </Box>\n                            </Fade>\n                        ))}\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n","import { ROUTES } from '../config/constants';\n\nexport { default as Home } from './Home';\nexport { default as Error } from './Error';\nexport { default as Snake } from './Snake';\nexport { default as Lights_Out } from './Lights/LightsOut';\nexport { default as ZSharp } from './ZSharp';\nexport { default as Oligopoly } from './Oligopoly';\nexport { default as Interpreters } from './Interpreters';\n\nexport const pages = ROUTES.pages;\n","import { CALCULATION } from './config/constants';\n\nexport function getSpace(size) {\n    return size / CALCULATION.spaceDivisor;\n}\n\nexport function convertPixels(size, height, width) {\n    const space = getSpace(size);\n    const pixel = CALCULATION.pixelMultiplier * (size + space);\n    const rows = Math.floor(height / pixel);\n    const cols = Math.floor(width / pixel);\n\n    return { rows, cols };\n}\n\nexport function getDirection(arrow) {\n    switch (arrow.toLowerCase()) {\n        case 'arrowup':\n        case 'w':\n            return -2;\n        case 'arrowdown':\n        case 's':\n            return 2;\n        case 'arrowleft':\n        case 'a':\n            return -1;\n        case 'arrowright':\n        case 'd':\n            return 1;\n        default:\n            return 0;\n    }\n}\n\nexport function gridMove(start, arrow, rows, cols) {\n    const jump = cols - 1;\n    const max = rows * cols;\n\n    switch (arrow) {\n        case 2:\n            start += cols;\n            break;\n        case -2:\n            start -= cols;\n            break;\n        case 1:\n            if (start % cols === jump) start -= jump;\n            else start += 1;\n            break;\n        case -1:\n            if (start % cols === 0) start += jump;\n            else start -= 1;\n            break;\n        default:\n            break;\n    }\n\n    return (start + max) % max;\n}\n","import { useMediaQuery } from './components/mui';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction getWindow() {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return { width, height };\n}\n\nfunction getContainer(container) {\n    if (!container || !container.current) return getWindow();\n\n    const { offsetHeight: height, offsetWidth: width } = container.current;\n\n    return { width, height };\n}\n\nfunction useSize(getSize) {\n    const [size, setSize] = useState(getSize());\n\n    const { addEventListener: addEvent, removeEventListener: removeEvent } =\n        window;\n\n    useEffect(() => {\n        function handleResize() {\n            setSize(getSize());\n        }\n\n        addEvent('resize', handleResize);\n\n        return () => removeEvent('resize', handleResize);\n    }, [getSize, addEvent, removeEvent]);\n\n    return { size, setSize };\n}\n\nexport function useContainer(container) {\n    const wrapper = () => getContainer(container);\n\n    const { size, setSize } = useSize(wrapper);\n\n    useEffect(() => {\n        const newSize = getContainer(container);\n\n        setSize(newSize);\n    }, [container, setSize]);\n\n    return size;\n}\n\nexport function useWindow() {\n    const { size } = useSize(getWindow);\n\n    return size;\n}\n\nexport function useMobile(size) {\n    return useMediaQuery(theme => theme.breakpoints.down(size));\n}\n\n// Global timer reference to handle React StrictMode multiple instances\nlet globalTimer = null;\nlet globalRepeat = null;\nlet globalSpeed = 200;\n\nexport function useTimer(delay) {\n    const repeat = useRef(null);\n    const speed = useRef(delay);\n\n    const create = useCallback(({ repeat: newRepeat, speed: newSpeed }) => {\n        // Clear any existing timer first\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n        }\n\n        globalRepeat = newRepeat || globalRepeat;\n        globalSpeed = newSpeed || globalSpeed;\n        repeat.current = globalRepeat;\n        speed.current = globalSpeed;\n\n        globalTimer = setInterval(globalRepeat, globalSpeed);\n    }, []);\n\n    const clear = useCallback(() => {\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n            globalTimer = null;\n        }\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (globalTimer !== null) {\n                clearInterval(globalTimer);\n                globalTimer = null;\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useKeys() {\n    const oldHandler = useRef(null);\n\n    const create = useCallback(handler => {\n        oldHandler.current = handler;\n\n        document.addEventListener('keydown', handler);\n    }, []);\n\n    const clear = useCallback(handler => {\n        handler ||= oldHandler.current;\n\n        document.removeEventListener('keydown', handler);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (oldHandler.current) {\n                document.removeEventListener('keydown', oldHandler.current);\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useCache(getState) {\n    const cache = useRef([]);\n    const index = useRef(0);\n    const processingRef = useRef(false);\n\n    return useCallback(\n        ({ type, payload }) => {\n            const states = cache.current;\n\n            switch (type) {\n                case 'next':\n                    // Prevent double processing in React StrictMode\n                    if (processingRef.current) {\n                        return { ...states[index.current] };\n                    }\n\n                    processingRef.current = true;\n\n                    const curr = index.current;\n\n                    if (curr + 1 === states.length) {\n                        const state = states[curr];\n                        const next = getState(state);\n\n                        if (next === state) {\n                            // No change, stay at current position\n                        } else {\n                            // Add new state and move to it\n                            states.push(next);\n                            index.current++;\n                        }\n                    } else {\n                        index.current++;\n                    }\n\n                    const result = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, 0);\n\n                    return result;\n                case 'prev':\n                    // Prevent double processing in React StrictMode\n                    if (processingRef.current) {\n                        return { ...states[index.current] };\n                    }\n\n                    processingRef.current = true;\n\n                    if (index.current) index.current--;\n\n                    const prevResult = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, 0);\n\n                    return prevResult;\n                case 'clear':\n                    cache.current = [{ ...payload }];\n                    index.current = 0;\n\n                    break;\n                default:\n                    break;\n            }\n\n            return payload;\n        },\n        [getState]\n    );\n}\n"],"names":["ICON_MAP","Code","Psychology","Cloud","Work","TooltipButton","props","Icon","title","rest","_objectWithoutProperties","_excluded","_jsx","Tooltip","children","IconButton","_objectSpread","size","fontSize","HomeButton","_ref","hide","_excluded2","to","component","Link","HomeRounded","Cell","_ref2","_excluded3","remSize","concat","radius","COMPONENT_VARIANTS","flexCenter","borderRadius","height","width","fontWeight","TYPOGRAPHY","semibold","fontFamily","transition","ANIMATIONS","combined","Box","Row","cols","index","spacing","cellProps","Grid","container","justifyContent","Array","from","length","WrappedCell","_","j","_createElement","key","CustomGrid","rows","_excluded4","auto","getSpace","space","rem","getRow","useCallback","i","alignItems","role","Navigation","_ref3","_excluded5","Paper","elevation","sx","transform","position","bottom","left","zIndex","backgroundColor","backdropFilter","border","COLORS","subtle","SPACING","lg","boxShadow","padding","flexWrap","minWidth","RandomButton","_ref4","onClick","enabled","enabledTitle","disabledTitle","showToggleState","_excluded6","buttonTitle","ariaLabel","Refresh","color","primary","main","Controls","_ref5","handler","onRandom","randomEnabled","opacity","_jsxs","ArrowsButton","_ref6","show","setShow","flip","display","KeyboardArrowUpRounded","KeyboardArrowLeftRounded","CloseRounded","KeyboardArrowRightRounded","KeyboardArrowDownRounded","GamepadRounded","GlassCard","forwardRef","_ref7","ref","md","className","interactive","_excluded7","interactiveCard","card","Section","id","paddingY","paddingX","maxWidth","Container","margin","HeroContainer","paddingBottom","flex","paddingTop","xs","sm","overflowX","PROJECT_CATEGORIES","research","icon","data","green","projects","ZSharp","path","description","technology","Oligopoly","games","Snake","Lights_Out","tools","amber","Interpreters","ProjectDropdown","Object","entries","map","categoryKey","category","IconComponent","marginBottom","gap","content","right","Typography","textTransform","letterSpacing","projectName","project","MenuItem","minHeight","flexDirection","outline","ring","ringOffset","lineHeight","replace","MenuButton","anchor","setAnchor","useState","handleClick","event","currentTarget","clickHandler","handleClose","closeHandler","open","Boolean","define","value","undefined","ViewModuleRounded","hover","Menu","anchorEl","disableAutoFocusItem","marginLeft","marginTop","onClose","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","Home","useEffect","document","PAGE_TITLES","home","background","surface","boxSizing","top","href","URLS","githubProfile","target","rel","GitHub","Fade","in","timeout","body","text","bold","wordBreak","hyphens","PERSONAL_INFO","name","secondary","LocationOn","medium","location","element","getElementById","scrollIntoView","behavior","block","inline","selected","full","cursor","ArrowForward","subheading","gridTemplateColumns","SKILLS","skill","overflow","presets","cardHover","whiteSpace","textOverflow","flexShrink","Button","variant","startIcon","textDecoration","endIcon","h2","textAlign","PUBLICATIONS","publication","url","caption","OpenInNew","conference","PROJECTS","Error","error","normal","getRandom","max","Math","floor","random","mapBoard","board","change","newBoard","cell","handleResize","state","head","next","reduceBoard","velocity","buffer","gridMove","exclude","pos","addNext","first","handleAction","action","type","payload","getDirection","create","createTimer","useTimer","createKeys","useKeys","useWindow","GAME_CONSTANTS","snake","initialLength","segmentSize","randomMovesEnabled","setRandomMovesEnabled","randomMovesRef","useRef","showArrows","setShowArrows","useMemo","convertPixels","initial","initialVelocity","dispatch","useReducer","controlHandler","controls","arrowPrefix","chooseColor","row","col","dark","repeat","wrapDispatch","current","Board","frontProps","backProps","Centered","style","useGetters","getTile","palette","getColor","front","back","getBorder","self","upCheck","downCheck","leftCheck","rightCheck","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderHandler","getFiller","topLeft","topRight","botLeft","botRight","fillerHandler","getGrid","fill","flipAdj","grid","randomize","r","c","handleBoard","score","flat","flatMap","includes","newRows","newCols","countBits","num","count","multiplySym","matrixA","matrixB","output","rowA","outputRow","push","getIdentity","symmetricPow","matrix","power","k","addSym","sortMatrices","identity","sorted","keys","sort","a","b","getProduct","input","getMatrix","product","poly","degree","evalPolynomial","curr","prev","double","getPolynomial","inverse","original","inverted","pow","alt","invertMatrix","binary","parseInt","join","chaseLights","states","dims","newStates","at","extendBack","extend","extendFront","unshift","getStates","start","last","blank","inputStates","outputStates","fillRow","before","boardStates","after","propHandler","getter","frames","percent","getFrames","animation","getRange","rowTiles","dRange","lRange","Bifold","Title","Example","small","useMobile","boardTiles","gridTiles","inputTiles","outputTiles","s","getBoard","getInput","getOutput","useHandler","Info","toggleOpen","isMobile","isLargeScreen","setRow","newRow","res","inputGetters","outputGetters","inputProps","getters","toggleTile","CircleRounded","stopPropagation","outputProps","Backdrop","maxHeight","mx","pt","pb","px","gutterBottom","mb","KeyboardArrowDown","mr","ml","Calculate","Replay","getFrontProps","LightsOut","mobile","gridSizes","desktop","lightsOut","InfoRounded","_viewTypes$find","_viewTypes$find2","subtitle","githubUrl","chartData","chartConfig","lines","xAxisKey","yAxisFormatter","toFixed","yAxisDomain","dualYAxis","rightYAxisFormatter","rightYAxisDomain","tooltipLabelFormatter","tooltipFormatter","viewTypes","currentViewType","onViewTypeChange","loading","loadingMessage","onReset","resetLabel","chartTitle","currentData","getCurrentChartData","currentView","find","view","dataProcessor","currentChartConfig","CHART_DIMENSIONS","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","CHART_FORMATTING","strokeDashArray","stroke","XAxis","dataKey","tick","YAxis","yAxisId","tickFormatter","domain","orientation","RechartsTooltip","contentStyle","labelFormatter","formatter","line","Line","strokeWidth","dot","defaultStrokeWidth","dotRadius","SettingsRounded","light","min","viewType","borderColor","borderWidth","borderStyle","label","control","ToggleButtonGroup","exclusive","onChange","e","newValue","borderLeft","hoverColor","options","option","ToggleButton","generateFallbackData","ZSHARP_DEFAULTS","maxEpochs","sgdAccuracy","baseAccuracy","maxAccuracy","zsharpAccuracy","improvement","sgdLoss","baseLoss","minLoss","zsharpLoss","lossReduction","epoch","sgd","zsharp","setChartData","setLoading","setViewType","async","_realData$SGDBaselin","_realData$ZSharp","_realData$SGDBaselin2","_realData$ZSharp2","DecompressionStream","response","fetch","ok","status","compressedData","arrayBuffer","decompressedData","Response","ReadableStream","controller","decompressionStream","writer","writable","getWriter","reader","readable","getReader","write","then","close","pump","read","done","enqueue","realData","JSON","parse","sgdAccuracies","train_accuracies","zsharpAccuracies","sgdLosses","train_losses","zsharpLosses","PERCENTAGE","divisor","loadRealZSharpData","loadData","BarChartRounded","multiplier","TrendingUpRounded","point","ShowChartRounded","AnalyticsRounded","prevPoint","ResearchDemo","zsharpRepo","filterMatrixData","matrixData","numFirms","modelType","demandElasticity","basePrice","collusionEnabled","generateFallbackOligopolyData","filtered","filter","item","num_firms","model_type","demand_elasticity","base_price","collusion_enabled","round","slice","oligopoly","maxRounds","sim","simulation","price","fallbackPrice","sin","priceFrequency","priceAmplitude","hhi","fallbackHHI","hhiFrequency","hhiAmplitude","collusion","collusionStart","collusionEnd","setNumFirms","defaultFirms","setDemandElasticity","defaultElasticity","setBasePrice","defaultBasePrice","marketData","setMarketData","setMatrixData","modelTypes","cournot","loadRealSimulationMatrix","initialData","filteredData","BusinessRounded","AttachMoneyRounded","oligopolyRepo","resetToDefaults","interpreters","TextFields","GridView","direction","esolangsRepo","interpreter","wordWrap","overflowWrap","ROUTES","pages","CALCULATION","spaceDivisor","pixel","pixelMultiplier","arrow","toLowerCase","jump","getWindow","innerWidth","innerHeight","window","getContainer","offsetHeight","offsetWidth","useSize","getSize","setSize","addEventListener","addEvent","removeEventListener","removeEvent","useContainer","wrapper","newSize","useMediaQuery","theme","breakpoints","down","globalTimer","globalRepeat","globalSpeed","delay","speed","newRepeat","newSpeed","clearInterval","setInterval","clear","oldHandler","useCache","getState","cache","processingRef","result","setTimeout","prevResult"],"sourceRoot":""}