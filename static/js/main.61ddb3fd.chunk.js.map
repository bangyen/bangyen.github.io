{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Interpreters/WII2D.js","Components/Snake.js","Components/Home.js","Components/Error.js","Components/Videos.js","index.js"],"names":["button","sym","func","title","className","type","onClick","style","fontSize","lineHeight","home","to","resize","str","arr","split","map","val","length","col","Math","max","move","obj","pos","vel","old","size","wrap","quo","mod","floor","bind","num","lim","Grid","props","changeColor","changeText","changeSize","state","start","grid","repeat","select","breaks","text","edit","document","this","name","addEventListener","clearInterval","timerID","removeEventListener","mode","clean","setState","run","temp","setInterval","end","includes","e","value","key","toLowerCase","filter","p","push","substring","cell","v","trimEnd","Array","fill","len","join","css","empty","keys","i","row","changeGrid","target","placeholder","onChange","onPaste","rows","cols","minWidth","minHeight","cellSize","table","x","j","bgcolor","chooseColor","maxHeight","maxWidth","toString","link","href","runCode","tape","ind","color","out","reg","acc","getTable","getInfo","getButtons","getTape","getOutput","getRegister","React","Component","Back","code","alert","back","c","a","b","outer","reset","handleChange","event","prog","ptr","getProgram","input","Suffolk","inp","prompt","charCodeAt","String","fromCharCode","StunStep","error","res","dist","y","diff","abs","close","warp","k","sort","comp","dir","indexOf","rnd","random","WII2D","createArr","window","innerHeight","innerWidth","_","Snake","updateDim","changeDir","buff","s","n","randomPos","height","width","borderSpacing","cursor","borderRadius","marginBottom","Home","padding","action","display","Error","getVideo","embedId","src","frameBorder","allowFullScreen","Videos","id","changeNum","changeWidth","getWidth","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAEO,SAASA,EAAOC,EAAKC,EAAMC,GAC9B,OAAO,wBAAQC,UAAU,SACbC,KAAK,SACLC,QAASJ,EACTC,MAAOA,EAHZ,SAIC,qBAAKI,MAAO,CACJC,SAAU,oBACVC,WAAY,OAFpB,SAIKR,MAKV,SAASS,IACZ,OAAO,cAAC,IAAD,CAAMC,GAAG,IAAT,SACH,wBAAQP,UAAU,SACVC,KAAK,SACLF,MAAM,OAFd,SAGI,qBAAKI,MAAO,CACJC,SAAU,oBACVC,WAAY,OAFpB,oCAUL,SAASG,EAAOC,GACnB,IAAMC,EAAMD,EAAIE,MAAM,MACjBC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,EAAMC,KAAKC,IAAL,MAAAD,KAAI,YAAQN,IAGtB,MAAO,CAFGA,EAAII,OAEDC,GAGV,SAASG,EAAKC,GACjB,IACIC,EAGAD,EAHAC,IAAKC,EAGLF,EAHKE,IAAKC,EAGVH,EAHUG,IADd,EAIIH,EAFAI,YAFJ,MAEWD,EAFX,IAIIH,EADAK,YAHJ,SAMA,cAAiBH,EAAjB,GAAKI,EAAL,KAAUC,EAAV,KAYA,OAXAD,GAAOT,KAAKW,MAAMP,EAAME,GACxBI,GAAON,EAAME,EAETE,GACAC,GAAOA,EAAMF,GAAQA,EACrBG,GAAOA,EAAMH,GAAQA,IAErBE,EAAMG,EAAKH,EAAKF,GAChBG,EAAME,EAAKF,EAAKH,IAGbE,EAAMF,EAAOG,EAGxB,SAASE,EAAKC,EAAKC,GAMf,OALID,GAAOC,EACPD,EAAMC,EAAM,EACPD,EAAM,IACXA,EAAM,GAEHA,E,kDC9DUE,E,kDACjB,WAAYC,GAAe,IAAD,uBACtB,cAAMA,IAEDC,YAAc,EAAKA,YAAYL,KAAjB,gBACnB,EAAKM,WAAa,EAAKA,WAAWN,KAAhB,gBAClB,EAAKO,WAAa,EAAKA,WAAWP,KAAhB,gBALI,OAQtB,EAAKQ,MAAL,2BACO,EAAKJ,MAAMK,OADlB,IAEIC,KAAM,IAAIC,OAAOhB,IACjBA,KALS,EAMTiB,OAAQ,KACRpB,IAAQ,KACRqB,OAAQ,GACRC,MAAM,EACNC,MAAM,IAhBY,E,qDAoB1B,WACIC,SAAS7C,MAAQ8C,KAAKb,MAAMc,KACtB,yBACNF,SAASG,iBACL,UACAF,KAAKX,YACL,K,kCAGR,WACIc,cAAcH,KAAKI,SACnBL,SAASM,oBACL,UACAL,KAAKX,YACL,K,qBAGR,SAAQiB,GACJ,OAAO,WAAY,IAAD,OACd,GAAIN,KAAKT,MAAMO,KACXE,KAAKO,aAEF,GAAIP,KAAKT,MAAMM,KAClBG,KAAKQ,SAAS,CAACX,MAAM,QADlB,CAKP,GAAuB,OAAnBG,KAAKT,MAAMhB,IAAc,CACzB,MAAqByB,KAAKT,MAAnBE,EAAP,EAAOA,KAAMf,EAAb,EAAaA,KACb,EAAqBsB,KAAKb,MAAnBsB,EAAP,EAAOA,IAAKjB,EAAZ,EAAYA,MAQZ,GAPAQ,KAAK/C,KAAOwD,EAAIhB,EAAMf,GAEtBsB,KAAKQ,SAAL,2BACOhB,GADP,IAEIG,OAAQ,QAGC,QAATW,EACA,OAIR,IAAII,EAEJ,GAHAP,cAAcH,KAAKI,SAGN,QAATE,EAAgB,CAUhBN,KAAKI,QAAUO,aATF,WACT,EAAKH,SAAS,EAAKvD,QACnB,MACM,EAAKsC,MADJhB,EAAP,EAAOA,IAAKqC,EAAZ,EAAYA,KAAZ,EAAiBhB,OAGNiB,SAAStC,IAAQqC,IACxBT,cAAc,EAAKC,WAGM,UAEjCM,EADgB,SAATJ,EACAN,KAAK/C,OAEL+C,KAAK/C,MAAK,GAGrB+C,KAAKQ,SAASE,KAChB3B,KAAKiB,Q,wBAGX,SAAWc,GACP,MAA6Bd,KAAKT,MAA7BI,EAAL,EAAKA,OAAQC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,KAErB,GAAe,OAAXF,IAAoBE,EAAM,CAC1B,IAEIkB,EAFAnD,EAAMoC,KAAKT,MAAME,KACff,EAAOd,EAAIK,OAGjB,GAA4B,MAAxB6C,EAAEE,IAAIC,cAQN,OAPIrB,EAAOiB,SAASlB,GAChBC,EAASA,EAAOsB,QAAO,SAAAC,GAAC,OACpBA,IAAMxB,KAEVC,EAAOwB,KAAKzB,QAEhBK,KAAKQ,SAAS,CAACZ,WAEZ,GAAqB,IAAjBkB,EAAEE,IAAI/C,OACb8C,EAAQD,EAAEE,QACP,CAIH,IAAIxC,EAJD,GAAc,cAAVsC,EAAEE,KACQ,WAAVF,EAAEE,IAEN,OAAIF,EAAEE,IAAIH,SAAS,UAGlBC,EAAEE,IAAIH,SAAS,QACfrC,EAAM,CAAC,GAAI,GACNsC,EAAEE,IAAIH,SAAS,SACpBrC,EAAM,CAAC,EAAG,GACLsC,EAAEE,IAAIH,SAAS,MACpBrC,EAAM,EAAE,EAAG,GACNsC,EAAEE,IAAIH,SAAS,UACpBrC,EAAM,CAAC,EAAG,IAEdmB,EAAStB,EAAK,CACVE,IAAKoB,EACLlB,IAAKC,EACLF,aAGJwB,KAAKQ,SAAS,CAACb,iBAGf,EAtBAoB,EAAQ,IAyBZnD,EAAMA,EAAIyD,UAAU,EAAG1B,GACjBoB,EACAnD,EAAIyD,UAAU1B,EAAS,GAC7BK,KAAKQ,SAAS,CAACf,KAAM7B,O,yBAI7B,SAAYW,GACR,OAAO,WACH,IAAIoB,EAASK,KAAKT,MAAMI,OACxBA,EAASA,IAAWpB,EACd,KAAOA,EACbyB,KAAKQ,SAAS,CAACb,YACjBZ,KAAKiB,Q,yBAGX,SAAYsB,GACR,MACMtB,KAAKT,MADJI,EAAP,EAAOA,OAAQpB,EAAf,EAAeA,IAAKqB,EAApB,EAAoBA,OAGpB,OAAI0B,IAAS3B,EACF,OACF2B,IAAS/C,EACP,MACFqB,EAAOiB,SAASS,GACd,SAEJ,U,mBAGX,WACI,MAAqBtB,KAAKT,MAAnBE,EAAP,EAAOA,KAAMf,EAAb,EAAaA,KACTV,EAAMyB,EACL3B,MAAM,MACNC,KAAI,SAAAwD,GAAC,OAAIA,EAAEC,aACXN,QAAO,SAAAK,GAAC,MAAU,KAANA,KAEZvD,EAAIC,SACLD,EAAMyD,MAAM/C,GACPgD,KAAK,IAAIhC,OAAOhB,KAKzB,IAHA,IAAMN,EAAMD,KAAKC,IAAL,MAAAD,KAAI,CAAKH,EAAIC,QAAT,mBACTD,EAAID,KAAI,SAAAwD,GAAC,OAAIA,EAAEtD,aAEfD,EAAIC,OAASG,GAChBJ,EAAIoD,KAAK,IAEbpD,EAAMA,EAAID,KAAI,SAAAwD,GACV,IAAMI,EAAMJ,EAAEtD,OAOd,OALI0D,EAAMvD,EACNmD,GAAK,IAAI7B,OAAOtB,EAAMuD,GAEtBJ,EAAIA,EAAEF,UAAU,EAAGjD,GAEhBmD,KAGXvB,KAAKQ,SAAL,2BACOR,KAAKb,MAAMK,OADlB,IAEIC,KAAMzB,EAAI4D,KAAK,IACflD,KAAMN,EACNG,IAAK,KACLoB,OAAQ,KACRE,MAAM,EACNC,MAAM,O,sBAId,WAAY,IAAD,OACD+B,EAAM,oBACZ,EAA2B7B,KAAKT,MAAzBE,EAAP,EAAOA,KAAMf,EAAb,EAAaA,KAAMoB,EAAnB,EAAmBA,KAEnB,GAAIE,KAAKT,MAAMM,KAAM,CACjB,IAAIkB,EAAQ,GAEZ,GAAIjB,EACAiB,EAAQtB,OAER,GAAIA,IAAS,IAAIC,OAAOhB,EAAOA,GAQ3B,IAPA,IAAMoD,EAAQ,IAAIpC,OAAOhB,GACnBZ,EAAQ,YAAI2D,MAAM/C,GAAMqD,QACzBhE,KAAI,SAAAwD,GAAC,OAAI9B,EAAK4B,UACX3C,EAAO6C,EAAG7C,GAAQ6C,EAAI,OACzBL,QAAO,SAAAK,GAAC,OAAIA,IAAMO,KACjBH,EAAM7D,EAAMG,OAET+D,EAAI,EAAGA,EAAIL,EAAKK,IACrBjB,GAASjD,EAAMkE,GAAGR,UAEdQ,EAAI,IAAML,IACVZ,GAAS,MAKzB,MACMpD,EAAOoD,GADb,mBAAOkB,EAAP,KAAY/D,EAAZ,KAEMgE,EAAa,SAACpB,GAAD,OACf,EAAKN,SAAS,CACVf,KAAMqB,EAAEqB,OAAOpB,MACfjB,MAAM,KAGd,OAAO,+BACH,gCACI,0BACIiB,MAAOA,EACPqB,YAAY,wBACZC,SAAUH,EACVI,QAASJ,EACTK,KAAMN,EAAKO,KAAMtE,EACjBZ,MAAO,CACHmF,SAAS,QAAD,OAAUZ,EAAV,KACRa,UAAU,QAAD,OAAUb,EAAV,gBAY7B,IALA,IAGItD,EAHAoE,EAAQ,eAAWd,EAAX,YAAkBnD,GAC1BkE,EAAQ,YAAInB,MAAM/C,IACjBX,KAAI,SAAA8E,GAAC,OAAIpB,MAAM/C,MAGXsD,EAAI,EAAGA,EAAItD,EAAMsD,IACtB,IAAK,IAAIc,EAAI,EAAGA,EAAIpE,EAAMoE,IACtBvE,EAAMG,EAAOsD,EAAIc,EACjBF,EAAMZ,GAAGc,GAAK,oBACN3F,UAAU,cACVE,QAAS2C,KAAKZ,YAAYb,GAC1BwE,QAAS/C,KAAKgD,YAAYzE,GAC1BjB,MAAO,CACH2F,UAAWN,EACXO,SAAUP,GANR,SAQV,uCACWlD,EAAKlB,GADhB,WARU,UAAYA,IAelC,OAAO,uBAAOpB,UAAU,OAAjB,SACH,gCACKyF,EAAM7E,KAAI,SAACF,EAAKoE,GAAN,OACP,6BACKpE,GADIoE,EAAIkB,qB,qBAQ7B,WACI,MAAmBnD,KAAKb,MAAnBc,EAAL,EAAKA,KAAMmD,EAAX,EAAWA,KAIX,OAHAA,EAAO,8BACAA,GAAcnD,GAEd,qBAAI3C,MAAO,CAACC,SAAU,OAAtB,UACC,0DACK,OAAOmC,OAAO,MACnB,8DACA,8DACA,8DACA,+BACKO,EADL,wBAEI,mBAAGoD,KAAMD,EAAT,kBACC,OAAO1D,OAAO,W,wBAK/B,SAAWV,GACP,MAGIgB,KAAKT,MAFLE,EADJ,EACIA,KAAMf,EADV,EACUA,KACNiB,EAFJ,EAEIA,OAAQE,EAFZ,EAEYA,KAGZ,OAAO,WACH,GAAKb,IAAOa,EAAZ,CAGAM,cAAcH,KAAKI,SACnB,IAAIvC,EAAM,GAEK,OAAX8B,IACAA,EAAStB,EAAK,CACVE,IAAKoB,EACLnB,IAAK,CAAC,EAAG,GACTC,IAAKC,EACLA,KAAMM,EACNL,MAAM,KAGd,IAAK,IAAIqD,EAAI,EAAGA,EAAIhD,EAAKgD,IACrB,IAAK,IAAIc,EAAI,EAAGA,EAAI9D,EAAK8D,IAEjBjF,GADAmE,EAAItD,GAAQoE,EAAIpE,EACTe,EAAKf,EAAOsD,EAAIc,GAEhB,IAEnB9C,KAAKQ,SAAL,2BACOR,KAAKb,MAAMK,OADlB,IAEIC,KAAM5B,EACNa,KAAMM,EACNT,IAAK,KACLoB,cAENZ,KAAKiB,Q,wBAGX,WAAc,IAAD,OACT,EAA2BA,KAAKT,MAAzBb,EAAP,EAAOA,KAAMmB,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAEnB,OAAQ,gCACC/C,EAAO,SAAKiD,KAAKsD,QAAQ,OAAQ,OACjCvG,EAAO,iBAAaiD,KAAKsD,QAAQ,QAAS,YAC1CvG,EAAO,iBAAaiD,KAAKsD,QAAQ,QAAS,QAC1CvG,EAAO,UAAK,WACL,EAAKwC,MAAMM,OAGfM,cAAc,EAAKC,SACnB,EAAKI,SAAL,2BACO,EAAKrB,MAAMK,OADlB,IAEIjB,IAAK,WAEV,QACH,uBACCxB,EAAO,eAAWiD,KAAKV,WAAWZ,EAAO,GAAI,UAC7C3B,EAAO,eAAWiD,KAAKV,WAAWZ,EAAO,GAAI,UAC7C3B,EAAO,sBACJ,WACIoD,cAAc,EAAKC,SAEfN,EACA,EAAKS,QAEL,EAAKC,SAAS,CACVb,OAAQ,KACRE,MAAOA,MACd,cACRpC,S,qBAIb,WAAW,IAAD,OACN,IAAKuC,KAAKb,MAAMoE,KACZ,OAAQ,KAEZ,IACM1D,EADOG,KAAKT,MAAMgE,KACNxF,KAAI,SAACC,EAAKwF,GACxB,IAAMC,EAAQ,EAAKlE,MAAM+B,OAASkC,EAC5B,MAAQ,QACd,OAAO,uBACMlG,MAAO,CAACmG,SADd,iBAEQzF,IAFGwF,EAAIL,eAM1B,OAAO,qBAAKhG,UAAU,SAAf,SACC,yCACU0C,S,uBAKtB,WACI,OAAIG,KAAKb,MAAMuE,IACJ,qBAAKvG,UAAU,SAAf,SACC,2CAEwB,KAAnB6C,KAAKT,MAAMmE,IACN,GAAK,IACV1D,KAAKT,MAAMmE,SAIpB,O,yBAGZ,WACI,OAAI1D,KAAKb,MAAMwE,IACJ,qBAAKxG,UAAU,SAAf,SACC,8CACe6C,KAAKT,MAAMqE,SAI9B,O,oBAGZ,WACI,OACI,yBAAQzG,UAAU,aAAlB,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACK6C,KAAK6D,eAGd,qBAAK1G,UAAU,cAAf,SACI,sBAAKA,UAAU,WACPG,MAAO,CAACC,SAAU,kBAD1B,UAEI,iDACCyC,KAAK8D,UACL9D,KAAK+D,aACN,uBACC/D,KAAKgE,UACLhE,KAAKiE,YACLjE,KAAKkE,0B,GA3bIC,IAAMC,WC2EzB,SAASC,IACpB,IAAI/F,EAAM,CACNC,IAAK,EACLqC,KAAK,EACL2C,KAAM,CAAC,GACPjC,KAAM,GAGNb,EAtFR,SAAenC,GA2EX,OA1EA,SAAagG,EAAM5F,GACV4F,EAAKzD,SAAS,MACf0D,MAAM,iCAEV,IAAI/F,EAAM,CAAC,EAAG,GACVX,EAAM,CAACS,GACPkF,EAAM,EAEV,SAAS7E,EAAKJ,GACV,OAAOF,EAAK,CACRE,MACAC,MACAC,IAAKC,IAIb,OAAO,WAAwB,IAAf8F,EAAc,wDACtBjF,EAAQ1B,EAAIA,EAAII,OAAS,GAY7B,GAVIuG,EACIhB,IACAA,GAAO,GAEPjE,EAAMqB,IACN/C,EAAM,CAACS,GAEPkF,GAAO,EAGXA,EAAM3F,EAAII,OACV,OAAOJ,EAAI2F,GAEf,MAA6BjE,EAAxBgE,EAAL,EAAKA,KAAMjC,EAAX,EAAWA,KAAMV,EAAjB,EAAiBA,IAAKrC,EAAtB,EAAsBA,IAClBkG,EAAIH,EAAK/F,GACb,EAAaC,EAAb,mBAAKkG,EAAL,KAAQC,EAAR,KAGA,GAFApB,EAAI,YAAOA,GAED,OAANkB,EACAjG,EAAM,CAACmG,EAAGD,QACP,GAAU,MAAND,EACPjG,EAAM,EAAEmG,GAAID,QACT,GAAU,MAAND,GAAanD,EACpBA,GAAQ,OACL,GAAU,MAANmD,GACPnD,GAAQ,KACKiC,EAAKtF,QACdsF,EAAKnC,KAAK,QACX,GAAU,MAANqD,EACPlB,EAAKjC,IAAS,OACX,GAAU,MAANmD,GAAclB,EAAKjC,GAKb,MAANmD,IACP7D,GAAM,EACNrC,EAAM,WANN,GACIA,EAAMI,EAAKJ,GACXkG,EAAIH,EAAK/F,UACH,WAAWsC,SAAS4D,IAiBlC,OAXY,OAARlG,IACAA,EAAMI,EAAKJ,IAEfgB,EAAQ,CACJhB,MACAgF,OACAjC,OACAV,OAGJ/C,EAAIuD,KAAK7B,GACFA,IAeLqF,CAAMtG,GAChB,OAAO,cAAC,EAAD,CACH2B,KAAK,OACLT,MAAOlB,EACPmC,IAAKA,EACL8C,MAAM,I,YC3FOrE,E,kDACjB,WAAYC,GAAe,IAAD,8BACtB,cAAMA,IAEDI,MAAL,2BACO,EAAKJ,MAAMK,OADlB,IAEIuB,MAAO,GACPuD,KAAM,GACNO,OAAO,EACPjE,KAAK,IAGT,EAAK3D,KAAO,kBAAM,EAAKsC,OACvB,EAAKuF,aACC,EAAKA,aAAa/F,KAAlB,gBAbgB,E,qDAgB1B,WACIgB,SAAS7C,MAAQ8C,KAAKb,MAAMc,KACtB,2B,kCAGV,WACIE,cAAcH,KAAKI,W,qBAGvB,SAAQE,GACJ,OAAO,WAAY,IAAD,OACd,EAA4BN,KAAKT,MAA1BwB,EAAP,EAAOA,MAAO8D,EAAd,EAAcA,MAAOjE,EAArB,EAAqBA,IACrB,EAAqBZ,KAAKb,MAAnBK,EAAP,EAAOA,MAAOiB,EAAd,EAAcA,IAEd,IAAIG,IACAZ,KAAK/C,KAAOwD,EAAIM,GAChBf,KAAKQ,SAAShB,GAED,QAATc,GAAmBuE,GAJ3B,CASA,IAAItF,EAEJ,GAHAY,cAAcH,KAAKI,SAGN,QAATE,EAAgB,CAQhBN,KAAKI,QAAUO,aAPF,WACT,EAAKH,SAAS,EAAKvD,QAEf,EAAKsC,MAAMqB,KACXT,cAAc,EAAKC,WAGM,UAEjCb,EADgB,SAATe,EACCN,KAAK/C,MAAK,GAEV+C,KAAK/C,OAGjB+C,KAAKQ,SAAL,aACIqE,OAAO,GACJtF,MAETR,KAAKiB,Q,0BAGX,SAAa+E,GACT,IAAM/G,EAAM+G,EAAM5C,OAAOpB,MAEzB,GAAI/C,IAAQgC,KAAKT,MAAMwB,MAAO,CAC1B,IAAMuD,EACAtE,KAAKb,MAAMoB,MAAMvC,GAEvBgC,KAAKQ,SAAL,2BACOR,KAAKb,MAAMK,OADlB,IAEIoB,KAAK,EACLG,MAAO/C,EACPsG,a,wBAKZ,WAAc,IAAD,OACHA,EAAOtE,KAAKT,MAAM+E,KAClBU,EAAO,YAAIV,GAAMvG,KAAI,SAACC,EAAKwF,GAC7B,IAAMC,EAAQ,EAAKlE,MAAMiE,MAAQA,EAC3B,MAAQ,QACd,OAAO,sBACMlG,MAAO,CAACmG,SADd,SAEEzF,GAFSwF,EAAIL,eAItBtD,EAAO,WAKX,OAHImF,EAAK/G,SACL4B,GAAQ,KAEL,qBAAK1C,UAAU,SAAf,SACC,iCACK0C,EAAMmF,S,qBAKvB,WAAW,IAAD,OACN,IAAKhF,KAAKb,MAAMoE,KACZ,OAAQ,KAEZ,IACM1D,EADOG,KAAKT,MAAMgE,KACNxF,KAAI,SAACC,EAAKwF,GACxB,IAAMC,EAAQ,EAAKlE,MAAM0F,MAAQzB,EAC3B,MAAQ,QACd,OAAO,uBACMlG,MAAO,CAACmG,SADd,iBAEQzF,IAFGwF,EAAIL,eAK1B,OAAO,qBAAKhG,UAAU,SAAf,SACC,yCACU0C,S,uBAKtB,WACI,OAAIG,KAAKb,MAAMuE,IACJ,qBAAKvG,UAAU,SAAf,SACC,2CAEwB,KAAnB6C,KAAKT,MAAMmE,IACN,GAAK,IACV1D,KAAKT,MAAMmE,SAIpB,O,yBAGZ,WACI,OAAI1D,KAAKb,MAAMwE,IACJ,qBAAKxG,UAAU,SAAf,SACC,8CACe6C,KAAKT,MAAMqE,SAI9B,O,oBAGZ,WAAU,IAAD,OACL,EAAmB5D,KAAKb,MAAnBc,EAAL,EAAKA,KAAMmD,EAAX,EAAWA,KACXA,EAAO,8BACAA,GAAcnD,GAErB,IAAM4B,EAAM,oBACZ,EACMlE,EAAOqC,KAAKT,MAAMwB,OADxB,mBAAOkB,EAAP,KAAY/D,EAAZ,KAGA,OACI,yBAAQf,UAAU,aACVG,MAAO,CAACC,SAAU,kBAD1B,UAEI,qBAAKJ,UAAU,aAAf,SACI,sBAAKA,UAAU,WAAf,UACI,+BACK8C,IAEL,qBAAI3C,MAAO,CAACC,SAAU,OAAtB,UACI,8DACA,sDAEI,mBAAG8F,KAAMD,EAAT,kBACC,OAAO1D,OAAO,SAGvB,+BACI,gCACI,0BACIqB,MAAOf,KAAKT,MAAMwB,MAClBsB,SAAUrC,KAAK8E,aACfxC,QAAStC,KAAK8E,aACdvC,KAAMN,EAAKO,KAAMtE,EACjBZ,MAAO,CACHmF,SAAS,QAAD,OAAUZ,EAAV,KACRa,UAAU,QAAD,OAAUb,EAAV,gBAKxB9E,EAAO,SAAKiD,KAAKsD,QAAQ,OAAQ,OACjCvG,EAAO,SAAKiD,KAAKsD,QAAQ,QAAS,YAClCvG,EAAO,SAAKiD,KAAKsD,QAAQ,QAAS,QAClCvG,EAAO,UAAK,WACToD,cAAc,EAAKC,SACnB,EAAKI,SAAL,2BACO,EAAKrB,MAAMK,OADlB,IAEIqF,OAAO,EACPjE,KAAK,OAEV,QACFnD,SAGT,qBAAKN,UAAU,cAAf,SACI,sBAAKA,UAAU,WAAf,UACK6C,KAAKkF,aACLlF,KAAKgE,UACLhE,KAAKiE,YACLjE,KAAKkE,0B,GA5MIC,IAAMC,WCDxC,SAAS7D,EAAM4E,GACX,IADkB,EACdb,EAAO,GADO,cAGJa,GAHI,IAGlB,gCAASV,EAAT,QACQ,QAAQ5D,SAAS4D,KACjBH,GAAQG,IALE,8BAOlB,OAAOH,EA2EI,SAASc,IACpB,IAAI9G,EAAM,CACNiF,KAAM,CAAC,GACPK,IAAK,EACLJ,IAAK,EACLyB,IAAK,EACLvB,IAAK,GACL9C,KAAK,GAGLH,EAlFR,SAAenC,GAqEX,OApEA,SAAa6G,GACT,IAAMb,EAAO/D,EAAM4E,GACbxD,EAAM2C,EAAKrG,OACbJ,EAAM,CAACS,GACPU,EAAM,EAEV,OAAO,WAAyB,IAAfwF,EAAc,wDACvBjF,EAAQ1B,EAAIA,EAAII,OAAS,GACzBwG,EAAIH,EAAKtF,EAAM2C,GACdf,EAAOrB,EAAPqB,IAcL,GAZI4D,EACIxF,IACAA,GAAO,IAEXA,GAAO,GAEG2C,IAAQ,EACdf,GAAM,EACDrB,EAAMqB,MACXA,GAAM,GAGV5B,EAAMnB,EAAII,OACV,OAAOJ,EAAImB,GAEf,MAA4BO,EAAvBgE,EAAL,EAAKA,KAAMK,EAAX,EAAWA,IAAKqB,EAAhB,EAAgBA,IAAKvB,EAArB,EAAqBA,IACjBF,EAAMxE,EAAM2C,EAGhB,GAFA4B,EAAI,YAAOA,GAED,MAANkB,GACAQ,GAAO,KACK1B,EAAKtF,QACbsF,EAAKnC,KAAK,QACX,GAAU,MAANqD,EACPb,GAAOL,EAAK0B,GACZA,EAAM,OACH,GAAU,MAANR,EACPlB,EAAK0B,IAAQrB,EAAM,EAEfL,EAAK0B,GAAO,IACZ1B,EAAK0B,GAAO,GAEhBrB,EAAM,EACNqB,EAAM,OACH,GAAU,MAANR,EAAW,CAGlB,IAFA,IAAIY,EAAM,IAEFA,EAAIpH,QACRoH,EAAMC,OAAO,WAEjB1B,EAAMyB,EAAIE,WAAW,QAEjB3B,EAAM,IACNF,GAAO8B,OACFC,aAAa7B,EAAM,IAShC,OANArE,EAAQ,CACJgE,OAAMK,MAAKJ,MACXyB,MAAMvB,MAAK9C,OAGf/C,EAAIuD,KAAK7B,GACFA,IAiBLqF,CAAMtG,GAChB,OAAO,cAAC,EAAD,CACH2B,KAAK,UACLT,MAAOlB,EACPmC,IAAKA,EACLF,MAAOA,EACPgD,MAAM,EACNG,KAAK,EACLC,KAAK,ICpGb,SAASpD,EAAM4E,GACX,IADkB,EACdb,EAAO,GADO,cAGJa,GAHI,IAGlB,gCAASV,EAAT,QACQ,OAAO5D,SAAS4D,KAChBH,GAAQG,IALE,8BAOlB,OAAOH,EAqEI,SAASoB,IACpB,IAAIpH,EAAM,CACNiF,KAAM,CAAC,GACPC,IAAK,EACLyB,IAAK,EACLrE,KAAK,GAGLH,EA1ER,SAAenC,GA+DX,OA9DA,SAAa6G,GACT,IAAMb,EAAO/D,EAAM4E,GACbxD,EAAM2C,EAAKrG,OACbJ,EAAM,CAACS,GACPU,EAAM,EAEV,OAAO,WAAyB,IAAfwF,EAAc,wDACvBjF,EAAQ1B,EAAIA,EAAII,OAAS,GAC7B,EAAuBsB,EAAlBgE,EAAL,EAAKA,KAAM0B,EAAX,EAAWA,IAAKrE,EAAhB,EAAgBA,IACZ6D,EAAIH,EAAKtF,EAAM2C,GAoBnB,GAlBI6C,EACIxF,IACAA,GAAO,IAEXA,GAAO,GAEG2C,IAAQ,EACdf,GAAM,EACCrB,EAAMqB,MACT2C,EAAK0B,GACLrE,GAAM,GAEN/C,EAAM,CAACS,GACPU,EAAM,IAKdA,EAAMnB,EAAII,OACV,OAAOJ,EAAImB,GAEf,IAAIwE,EAAMxE,EAAM2C,EA0BhB,OAzBA4B,EAAI,YAAOA,GAED,MAANkB,EACAlB,EAAK0B,IAAQ,EACN1B,EAAK0B,KACF,MAANR,EACAlB,EAAK0B,IAAQ,EACA,MAANR,GACPQ,GAAO,KAEK1B,EAAKtF,QACbsF,EAAKnC,KAAK,GACP6D,IACPA,GAAO,IAIf1F,EAAQ,CACJgE,OACAC,MACAyB,MACArE,OAGJ/C,EAAIuD,KAAK7B,GACFA,IAeLqF,CAAMtG,GAChB,OAAO,cAAC,EAAD,CACH2B,KAAK,YACLmD,KAAK,YACL5D,MAAOlB,EACPmC,IAAKA,EACLF,MAAOA,EACPgD,MAAM,IC1Fd,SAASqB,EAAMtG,GACX,SAASqH,EAAM/H,GACX2G,MAAM3G,+BAGN,IAAIgI,EAAM,CAAChF,KAAK,GAGhB,OAFAtC,EAAIC,IAAM,KAEH,kBAAMqH,GAGjB,SAASC,EAAKhD,EAAGiD,EAAGpH,GAChB,IAAIqH,EAAO5H,KAAK6H,IAAInD,EAAIiD,GAIxB,OAHU3H,KAAKW,MAAMiH,EAAOrH,GAClBqH,EAAOrH,EAWrB,SAASuH,EAAM1H,EAAKV,GAChB,IAAIa,EAAOb,EAAII,OACXiI,EAAO,GAEX,IAAK,IAAIC,KAAKtI,EACK,MAAXA,EAAIsI,IACJD,EAAK9E,KAAK+E,GAGlB,OADAD,EAAKE,KAdT,SAAc7H,EAAKG,GACf,OAAO,SAACmE,EAAGiD,GAAJ,OACHD,EAAKtH,EAAKsE,EAAGnE,GACbmH,EAAKtH,EAAKuH,EAAGpH,IAWP2H,CAAK9H,EAAKG,IACbwH,EAAKjI,OAAS,EACfiI,EAAK,GAAK3H,EAGpB,IAAIX,EAAM,OACN0I,EAAM,CACN,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,IA0FR,OAvFA,SAAahC,EAAM5F,GACfJ,EAAIC,IAAM,KACV,IAAIC,EAAM8H,EAAI,GACVzI,EAAM,CAACS,GACPkF,EAAM,EAEV,IAAKc,EAAKzD,SAAS,KACf,OAAO8E,EAAM,MAGjB,IAAK,IAAIQ,KAAK7B,EACV,GAAgB,MAAZA,EAAK6B,GAAY,CACjB,GAAgB,OAAZ7H,EAAIC,IACJ,OAAOoH,EAAM,cAEjBrH,EAAIC,IAAM4H,EAGlB,SAASxH,EAAKJ,GACV,OAAOF,EAAK,CACRE,MACAC,MACAC,IAAKC,IAIb,OAAO,WAAwB,IAAf8F,EAAc,wDACtBjF,EAAQ1B,EAAIA,EAAII,OAAS,GAY7B,GAVIuG,EACIhB,IACAA,GAAO,GAEPjE,EAAMqB,IACN/C,EAAM,CAACS,GAEPkF,GAAO,EAGXA,EAAM3F,EAAII,OACV,OAAOJ,EAAI2F,GAEf,MAA2BjE,EAAtBhB,EAAL,EAAKA,IAAKqC,EAAV,EAAUA,IAAK8C,EAAf,EAAeA,IAAKE,EAApB,EAAoBA,IAChBa,EAAIH,EAAK/F,GAEb,GAAIX,EAAIiD,SAAS4D,GACbjG,EAAM8H,EAAI1I,EAAI2I,QAAQ9B,SACnB,GAAU,MAANA,EACPjG,EAAM,EAAEA,EAAI,IAAKA,EAAI,SAClB,GAAU,MAANiG,EACPlG,EAAM0H,EAAM1H,EAAK+F,IACjB/F,GAAOG,GAEG,IACNH,GAAOG,EAAOA,QACf,IAAK+F,EACRb,GAAOa,OACJ,GAAU,MAANA,EACPb,GAAO,OACJ,GAAU,MAANa,EACPb,GAAO,OACJ,GAAU,MAANa,EACPb,GAAO,OACJ,GAAU,MAANa,EACPb,GAAYA,OACT,GAAU,MAANa,EACPb,EAAMzF,KAAKW,MAAM8E,EAAM,QACpB,GAAU,MAANa,EACPf,GAAO8B,OAAOC,aAAa7B,QACxB,GAAU,MAANa,EAAW,CAClB,IAAI+B,EAAsB,EAAhBrI,KAAKsI,SACfjI,EAAM8H,EAAInI,KAAKW,MAAM0H,QACR,MAAN/B,IACPlG,EAAM,KACNqC,GAAM,GASV,OANY,OAARrC,GAAsB,MAANkG,IAChBlG,EAAMI,EAAKJ,IAEfgB,EAAQ,CAAChB,MAAKqC,MAAK8C,MAAKE,OACxB/F,EAAIuD,KAAK7B,GAEFA,IAOJ,SAASmH,IACpB,IAAIpI,EAAM,CACNC,IAAK,KACLqC,KAAK,EACL8C,IAAK,GACLE,IAAK,GAGLnD,EAAMmE,EAAMtG,GAChB,OAAO,cAAC,EAAD,CACH2B,KAAK,QACLT,MAAOlB,EACPmC,IAAKA,EACLiD,KAAK,EACLC,KAAK,ICtJb,SAASgD,IACL,IAAI9D,EAAI+D,OAAOC,YACXf,EAAIc,OAAOE,WAEfjE,EAAI1E,KAAKW,MAAM+D,EAAI,IACnBiD,EAAI3H,KAAKW,MAAMgH,EAAI,IACnB,IAAMjI,EAAM,YAAI4D,MAAMoB,IACjB9E,KAAI,SAAAgJ,GAAC,OAAItF,MAAMqE,GAAGpE,KAAK,MAEtBgD,EAAIvG,KAAKW,MAAMX,KAAKsI,SAAW5D,GAC/B8B,EAAIxG,KAAKW,MAAMX,KAAKsI,SAAWX,GAGrC,OAFAjI,EAAI6G,GAAGC,IAAM,EAEN9G,E,IAGUmJ,E,kDACjB,WAAY7H,GAAe,IAAD,uBACtB,cAAMA,IAED8H,UACD,EAAKA,UACAlI,KADL,gBAEJ,EAAKmI,UACD,EAAKA,UACAnI,KADL,gBAGJ,IAAMlB,EAAM8I,IAVU,OAWtB,EAAKpH,MAAQ,CACT0C,IAAKpE,EAAII,OACTC,IAAKL,EAAI,GAAGI,OACZ0D,IAAK,EACLpD,IAAK,CAAC,EAAG,GACTC,IAAK,CAAC,EAAG,GACTH,MAAM,EACN8I,KAAM,KACNtJ,OAnBkB,E,6CAuB1B,WACI,IAGIgF,EAAGiD,EAHDjI,EAAG,YAAOmC,KAAKT,MAAM1B,KACrBoE,EAAMjC,KAAKT,MAAM0C,IACjB/D,EAAM8B,KAAKT,MAAMrB,IAGvB,GACI2E,EAAI1E,KAAKW,MAAMX,KAAKsI,SAAWxE,GAC/B6D,EAAI3H,KAAKW,MAAMX,KAAKsI,SAAWvI,SAC1BL,EAAIgF,GAAGiD,IAEhBjI,EAAIgF,GAAGiD,IAAM,EACb9F,KAAKQ,SAAS,CAAC3C,U,uBAGnB,WACI,IAAMA,EAAM8I,IAEZ3G,KAAKQ,SAAS,CACVyB,IAAKpE,EAAII,OACTC,IAAKL,EAAI,GAAGI,OACZJ,U,uBAGR,SAAUiD,GACN,IAEItC,EAFE4I,EAAItG,EAAEE,IAAIC,cACVxC,EAAMuB,KAAKT,MAAMf,IAGvB,GAAU,cAAN4I,GAA2B,MAANA,EACrB5I,EAAM,CAAC,GAAI,QACV,GAAU,eAAN4I,GAA4B,MAANA,EAC3B5I,EAAM,CAAC,EAAG,QACT,GAAU,YAAN4I,GAAyB,MAANA,EACxB5I,EAAM,EAAE,EAAG,OACV,IAAU,cAAN4I,GAA2B,MAANA,EAG1B,OAFA5I,EAAM,CAAC,EAAG,GAIVC,EAAI,GAAKD,EAAI,IACTC,EAAI,KAAOD,EAAI,KACfwB,KAAKT,MAAMlB,KACX2B,KAAKQ,SAAS,CACVnC,MAAM,EACNG,QAEJwB,KAAKQ,SAAS,CACV2G,KAAM3I,O,+BAGtB,WAAqB,IAAD,OAChBwB,KAAKI,QAAUO,aACX,kBAAM,EAAKtC,SAAQ,KACvB0B,SAAS7C,MAAQ,kBACjB6C,SAASG,iBACL,UACAF,KAAKkH,WACL,GACJlH,KAAKiH,YACLL,OAAO1G,iBACH,SAAUF,KAAKiH,a,kCAGvB,WACI9G,cAAcH,KAAKI,SACnBL,SAASM,oBACL,UACAL,KAAKkH,WACL,GACJN,OAAOvG,oBACH,SAAUL,KAAKiH,a,kBAGvB,WACI,kBAAajH,KAAKT,MAAMhB,IAAxB,GAAKsE,EAAL,KAAQiD,EAAR,KACA,cAAe9F,KAAKT,MAAMf,IAA1B,GAAOkG,EAAP,KAAUC,EAAV,KACA,EAAmB3E,KAAKT,MAAjB0C,EAAP,EAAOA,IAAK/D,EAAZ,EAAYA,IACRL,EAAMmC,KAAKT,MAAM1B,IAChBE,KAAI,SAAA2G,GAAC,OAAIA,EAAE3G,KACR,SAAAsJ,GAAC,OAAIA,EAAI,EAAIA,EAAI,EAAIA,QAM7B,GAFAvB,GAAKA,EAAInB,EAAIzG,GAAOA,EAEhBL,EAHJgF,GAAKA,EAAI6B,EAAIzC,GAAOA,GAGT6D,GAAK,EAAG,CACf,IAAM9G,EAAMnB,EAAIgF,GAAGiD,GACnB9F,KAAKQ,SAAS,CAACmB,IAAK3B,KAAKT,MAAMoC,IAAM3C,IACrCnB,EAAMA,EAAIE,KAAI,SAAA2G,GAAC,OAAIA,EAAE3G,KACjB,SAAAsJ,GAAC,OAAIA,EAAIrI,EAAMqI,EAAIrI,IAAQqI,EAAI,cAC5BxJ,EAAIgF,GAAGiD,GAAK,IACnB9F,KAAKQ,SAAS,CAACmB,IAAK3B,KAAKT,MAAMoC,IAAM,IACrC3B,KAAKsH,YACLzJ,EAAMmC,KAAKT,MAAM1B,IAAIE,KAAI,SAAA2G,GAAC,OAAIA,EAAE3G,KAC5B,SAAAsJ,GAAC,OAAIA,EAAI,EAAIA,EAAI,IAAMA,EAAI,UAGnCxJ,EAAIgF,GAAGiD,GAAK9F,KAAKT,MAAMoC,IACvB,IAAMwF,EAAOnH,KAAKT,MAAM4H,KACpBA,GACAnH,KAAKQ,SAAS,CACV2G,KAAM,KACN3I,IAAK2I,IAEbnH,KAAKQ,SAAS,CACVnC,MAAO8I,EACP5I,IAAK,CAACsE,EAAGiD,GACTjI,U,oBAIR,WACI,OACI,yBAAQV,UAAU,aAAlB,UACI,uBAAOG,MAAO,CACFiK,OAAQ,OACRC,MAAO,OACPC,cAAe,SAEnBtK,UAAU,OALlB,SAMI,gCACK6C,KAAKT,MAAM1B,IAAIE,KAAI,SAAC2G,EAAGzC,GAAJ,OACf,6BACGyC,EAAE3G,KAAI,SAACC,EAAKE,GAAN,OACN,oBACQf,UAAU,cACV4F,QACI/E,EAAM,EAAI,QACVA,EAAM,EAAI,MAAQ,QAEtBV,MAAO,CACHoK,OAAQ,UACRC,aAAc,OAR1B,SAUI,wCAVJ,UAAY1F,EAAZ,YAAmB/D,QAFb+D,EAAIkB,mBAkB1B,qBAAK7F,MAAO,CAACsK,aAAc,QAA3B,SACKnK,a,GAtKc0G,IAAMC,WChB1B,SAASyD,IACpB9H,SAAS7C,MAAQ,iBACjB,IAAMI,EAAQ,CACVkK,MAAO,OACPD,OAAQ,OACRO,QAAS,eACT5E,SAAU,KAGd,OACI,yBAAQ/F,UAAU,oBAAlB,UACI,gCACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,SACVG,MAAOA,EADf,0BAIA,sBAAKH,UAAU,mBAAf,UACI,cAAC,IAAD,CAAMO,GAAG,QAAT,kBAGA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBAGA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBAGA,cAAC,IAAD,CAAMA,GAAG,SAAT,yBAKR,cAAC,IAAD,CAAMA,GAAG,UAAT,SACI,wBAAQP,UAAU,SACVC,KAAK,SACLE,MAAOA,EAFf,sBAMJ,cAAC,IAAD,CAAMI,GAAG,SAAT,SACI,wBAAQP,UAAU,SACVC,KAAK,SACLE,MAAOA,EAFf,qBAMJ,sBAAMyK,OAAO,6BACLzK,MAAO,CAAC0K,QAAS,gBADzB,SAEI,uBAAO5K,KAAK,SACR2D,MAAM,SACN5D,UAAU,SACVG,MAAOA,SAGnB,oBAAIH,UAAU,OAAd,wBCtDG,SAAS8K,IAEpB,OADAlI,SAAS7C,MAAQ,2BAEb,yBAAQC,UAAU,aAAlB,UACI,iCACI,sBAAMG,MAAO,CAACwK,QAAS,QAAvB,0CAIHrK,OCTb,SAASyK,EAASC,EAASlI,EAAMuH,GAC7B,OAAO,8BACH,wBACIA,MAAOA,EACPD,OAAQC,EAAQ,GAAK,EACrBY,IAAG,wCAAmCD,GACtCE,YAAY,IACZC,iBAAe,EACfpL,MAAO+C,M,IAKEsI,E,kDACjB,WAAYpJ,GAAe,IAAD,8BACtB,cAAMA,IAEDqJ,GAAK,CACN,CAAC,uBAAwB,eACzB,CAAC,UAAW,eACZ,CAAC,iBAAkB,eACnB,CAAC,eAAgB,gBAGrB,EAAKC,UACC,EAAKA,UAAU1J,KAAf,gBACN,EAAK2J,YACC,EAAKA,YAAY3J,KAAjB,gBAEN,EAAKQ,MAAQ,CACTiI,MAAO,EAAKmB,WACZ3J,IAAK,GAjBa,E,qDAqB1B,WACIe,SAAS7C,MAAQ,mBACjB0J,OAAO1G,iBACH,SAAUF,KAAK0I,e,kCAGvB,WACI9B,OAAOvG,oBACH,SAAUL,KAAK0I,e,sBAGvB,WACI,IAAMnB,EAASX,OAAOC,YAClBW,EAAQZ,OAAOE,WAOnB,OALI,IAAMS,EAASC,EACfA,GAAgB,GAEhBA,GAAgB,EAEbA,I,yBAGX,WACI,IAAMA,EAAQxH,KAAK2I,WACnB3I,KAAKQ,SAAS,CAACgH,Y,uBAGnB,SAAUxJ,GAAM,IAAD,OACL2D,EAAM3B,KAAKwI,GAAGvK,OACbe,EAAOgB,KAAKT,MAAZP,IAGP,OAFAhB,EAAMgB,EAAMhB,EAAM2D,EAEX,WACH,EAAKnB,SAAS,CACVxB,IAAKhB,EAAM2D,O,oBAKvB,WACI,MAAqB3B,KAAKT,MAAnBP,EAAP,EAAOA,IAAKwI,EAAZ,EAAYA,MACZ,cAAmBxH,KAAKwI,GAAGxJ,GAA3B,GAAOiB,EAAP,KAAauI,EAAb,KAEA,OACI,yBAAQrL,UAAU,aAAlB,UACI,oBAAIG,MAAO,CAACC,SAAU,kBAAtB,SACI,iCACI,+BACK0C,QAIZiI,EAASM,EAAIvI,EAAMuH,GACpB,gCACKzK,EAAO,SACJiD,KAAKyI,WAAW,GAChB,YACHhL,IACAV,EAAO,SACJiD,KAAKyI,UAAU,GACf,kB,GAnFYtE,IAAMC,W,kBCM1C,SAASwE,IACL,OACI,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC1E,EAAD,MAEJ,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,aAAlB,SACI,cAACrD,EAAD,MAEJ,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC3D,EAAD,MAEJ,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,SAAlB,SACI,cAACrC,EAAD,MAEJ,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,UAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAClB,EAAD,MAEJ,cAAC,IAAD,UACI,cAACI,EAAD,aAQxBe,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACN,EAAD,MAEJ7I,SAASoJ,eAAe,W","file":"static/js/main.61ddb3fd.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nexport function button(sym, func, title) {\r\n    return <button className='custom'\r\n                type='button'\r\n                onClick={func}\r\n                title={title}>\r\n            <div style={{\r\n                    fontSize: 'min(1.5vh, 1.5vw)',\r\n                    lineHeight: '1em'\r\n                }}>\r\n                {sym}\r\n            </div>\r\n        </button>;\r\n}\r\n\r\nexport function home() {\r\n    return <Link to='/'>\r\n        <button className='custom'\r\n                type='button'\r\n                title='Home'>\r\n            <div style={{\r\n                    fontSize: 'min(1.5vh, 1.5vw)',\r\n                    lineHeight: '1em'\r\n                }}>\r\n                🏠&#xfe0e;\r\n            </div>\r\n        </button>\r\n    </Link>;\r\n}\r\n\r\nexport function resize(str) {\r\n    const arr = str.split('\\n')\r\n        .map(val => val.length);\r\n    let col = Math.max(...arr);\r\n    let row = arr.length;\r\n\r\n    return [row, col];\r\n}\r\n\r\nexport function move(obj) {\r\n    const {\r\n        pos, vel, old,\r\n        size = old,\r\n        wrap = true\r\n    } = obj;\r\n\r\n    let [quo, mod] = vel;\r\n    quo += Math.floor(pos / old);\r\n    mod += pos % old;\r\n\r\n    if (wrap) {\r\n        quo = (quo + size) % size;\r\n        mod = (mod + size) % size;\r\n    } else {\r\n        quo = bind(quo, size);\r\n        mod = bind(mod, size);\r\n    }\r\n\r\n    return quo * size + mod;\r\n}\r\n\r\nfunction bind(num, lim) {\r\n    if (num >= lim)\r\n        num = lim - 1;\r\n    else if (num < 0)\r\n        num = 0;\r\n\r\n    return num;\r\n}","import {\r\n    button, home,\r\n    resize, move\r\n} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText = this.changeText.bind(this);\r\n        this.changeSize = this.changeSize.bind(this);\r\n        const size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: ' '.repeat(size * size),\r\n            size,\r\n            select: null,\r\n            pos:    null,\r\n            breaks: [],\r\n            text: false,\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.edit) {\r\n                this.clean();\r\n                return;\r\n            } else if (this.state.text) {\r\n                this.setState({text: false});\r\n                return;\r\n            }\r\n\r\n            if (this.state.pos === null) {\r\n                const {grid, size} = this.state;\r\n                const {run, start} = this.props;\r\n                this.func = run(grid, size);\r\n\r\n                this.setState({\r\n                    ...start,\r\n                    select: null,\r\n                });\r\n\r\n                if (mode !== 'run')\r\n                    return;\r\n            }\r\n\r\n            clearInterval(this.timerID);\r\n            let temp;\r\n\r\n            if (mode === 'run') {\r\n                const move = () => {\r\n                    this.setState(this.func());\r\n                    const {pos, end, breaks}\r\n                        = this.state;\r\n\r\n                    if (breaks.includes(pos) || end)\r\n                        clearInterval(this.timerID);\r\n                };\r\n\r\n                this.timerID = setInterval(move, 200);\r\n            } else if (mode === 'next') {\r\n                temp = this.func();\r\n            } else {\r\n                temp = this.func(true);\r\n            }\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks, text} = this.state;\r\n\r\n        if (select !== null && !text) {\r\n            let str = this.state.grid;\r\n            const size = str.length;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (breaks.includes(select))\r\n                    breaks = breaks.filter(p =>\r\n                        p !== select);\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                let vel;\r\n\r\n                if (e.key.includes('Left'))\r\n                    vel = [0, -1];\r\n                else if (e.key.includes('Right'))\r\n                    vel = [0, 1];\r\n                else if (e.key.includes('Up'))\r\n                    vel = [-1, 0];\r\n                else if (e.key.includes('Down'))\r\n                    vel = [1, 0];\r\n\r\n                select = move({\r\n                    pos: select,\r\n                    old: size,\r\n                    vel\r\n                });\r\n\r\n                this.setState({select});\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            str = str.substring(0, select)\r\n                + value\r\n                + str.substring(select + 1);\r\n            this.setState({grid: str});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = select === pos\r\n                ? null : pos;\r\n            this.setState({select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        const {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (cell === select)\r\n            return 'grey';\r\n        else if (cell === pos)\r\n            return 'red';\r\n        else if (breaks.includes(cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    clean() {\r\n        const {grid, size} = this.state;\r\n        let val = grid\r\n            .split('\\n')\r\n            .map(v => v.trimEnd())\r\n            .filter(v => v !== '');\r\n\r\n        if (!val.length)\r\n            val = Array(size)\r\n                .fill(' '.repeat(size));\r\n\r\n        const max = Math.max(val.length,\r\n            ...val.map(v => v.length));\r\n\r\n        while (val.length < max)\r\n            val.push('');\r\n\r\n        val = val.map(v => {\r\n            const len = v.length;\r\n\r\n            if (len < max)\r\n                v += ' '.repeat(max - len);\r\n            else\r\n                v = v.substring(0, max);\r\n\r\n            return v;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.props.start,\r\n            grid: val.join(''),\r\n            size: max,\r\n            pos: null,\r\n            select: null,\r\n            text: false,\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    getTable() {\r\n        const css = 'var(--table-size)';\r\n        const {grid, size, edit} = this.state;\r\n\r\n        if (this.state.text) {\r\n            let value = '';\r\n\r\n            if (edit) {\r\n                value = grid;\r\n            } else {\r\n                if (grid !== ' '.repeat(size * size)) {\r\n                    const empty = ' '.repeat(size);\r\n                    const split = [...Array(size).keys()]\r\n                        .map(v => grid.substring(\r\n                            size * v, size * (v + 1)))\r\n                        .filter(v => v !== empty);\r\n                    const len = split.length;\r\n\r\n                    for (let i = 0; i < len; i++) {\r\n                        value += split[i].trimEnd();\r\n\r\n                        if (i + 1 !== len)\r\n                            value += '\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            const [row, col]\r\n                = resize(value);\r\n            const changeGrid = (e) =>\r\n                this.setState({\r\n                    grid: e.target.value,\r\n                    edit: true\r\n                });\r\n\r\n            return <form>\r\n                <label>\r\n                    <textarea\r\n                        value={value}\r\n                        placeholder='Input program here...'\r\n                        onChange={changeGrid}\r\n                        onPaste={changeGrid}\r\n                        rows={row} cols={col}\r\n                        style={{\r\n                            minWidth: `calc(${css})`,\r\n                            minHeight: `calc(${css} / 3)`\r\n                        }}\r\n                    />\r\n                </label>\r\n            </form>;\r\n        }\r\n\r\n        let cellSize = `calc(${css}/${size}`;\r\n        let table = [...Array(size)]\r\n            .map(x => Array(size));\r\n        let pos;\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                pos = size * i + j;\r\n                table[i][j] = <td key={`${pos}`}\r\n                        className='cell select'\r\n                        onClick={this.changeColor(pos)}\r\n                        bgcolor={this.chooseColor(pos)}\r\n                        style={{\r\n                            maxHeight: cellSize,\r\n                            maxWidth: cellSize\r\n                        }}>\r\n                    <div>\r\n                        &nbsp;{grid[pos]}&nbsp;\r\n                    </div>\r\n                </td>;\r\n            }\r\n        }\r\n\r\n        return <table className='grid'>\r\n            <tbody>\r\n                {table.map((arr, row) =>\r\n                    <tr key={row.toString()}>\r\n                        {arr}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n\r\n    getInfo() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{fontSize: '75%'}}>\r\n                <li>Click to select/unselect\r\n                    {'\\xa0'.repeat(4)}</li>\r\n                <li>Type to change selected cell</li>\r\n                <li>Press (b) to use breakpoints</li>\r\n                <li>Hover over buttons for usage</li>\r\n                <li>\r\n                    {name} commands located&nbsp;\r\n                    <a href={link}>here</a>\r\n                    {'\\xa0'.repeat(2)}\r\n                </li>\r\n            </ul>;\r\n    }\r\n\r\n    changeSize(num) {\r\n        let {\r\n            grid, size,\r\n            select, text\r\n        } = this.state;\r\n\r\n        return function() {\r\n            if (!num || text)\r\n                return;\r\n\r\n            clearInterval(this.timerID);\r\n            let arr = '';\r\n\r\n            if (select !== null)\r\n                select = move({\r\n                    pos: select,\r\n                    vel: [0, 0],\r\n                    old: size,\r\n                    size: num,\r\n                    wrap: false\r\n                });\r\n\r\n            for (let i = 0; i < num; i++)\r\n                for (let j = 0; j < num; j++)\r\n                    if (i < size && j < size)\r\n                        arr += grid[size * i + j];\r\n                    else\r\n                        arr += ' ';\r\n\r\n            this.setState({\r\n                ...this.props.start,\r\n                grid: arr,\r\n                size: num,\r\n                pos: null,\r\n                select\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    getButtons() {\r\n        const {size, text, edit} = this.state;\r\n\r\n        return (<div>\r\n                {button('▶', this.runCode('run'), 'Run')}\r\n                {button('\\xa0❮\\xa0', this.runCode('prev'), 'Previous')}\r\n                {button('\\xa0❯\\xa0', this.runCode('next'), 'Next')}\r\n                {button('✖', () => {\r\n                    if (this.state.text)\r\n                        return;\r\n\r\n                    clearInterval(this.timerID);\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        pos: null\r\n                    });\r\n                }, 'Stop')}\r\n                <br />\r\n                {button('➕\\ufe0e', this.changeSize(size + 1), 'Expand')}\r\n                {button('➖\\ufe0e', this.changeSize(size - 1), 'Shrink')}\r\n                {button('📥\\ufe0e',\r\n                    () => {\r\n                        clearInterval(this.timerID);\r\n\r\n                        if (edit)\r\n                            this.clean();\r\n                        else\r\n                            this.setState({\r\n                                select: null,\r\n                                text: !text\r\n                    })}, 'Copy/Paste')}\r\n                {home()}\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;\r\n        });\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        {this.getTable()}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'\r\n                            style={{fontSize: 'min(10vh, 3vw)'}}>\r\n                        <code>Instructions:</code>\r\n                        {this.getInfo()}\r\n                        {this.getButtons()}\r\n                        <br />\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code, size) {\r\n        if (!code.includes('*'))\r\n            alert('No halt instruction detected!');\r\n\r\n        let vel = [0, 1];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let c = code[pos];\r\n            let [a, b] = vel;\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                vel = [b, a];\r\n            } else if (c === '/') {\r\n                vel = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                do {\r\n                    pos = wrap(pos);\r\n                    c = code[pos];\r\n                } while (!'\\\\/<>-+*'.includes(c));\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            if (pos !== null)\r\n                pos = wrap(pos);\r\n\r\n            state = {\r\n                pos,\r\n                tape,\r\n                cell,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        pos: 0,\r\n        end: false,\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {button, home, resize} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            reset: true,\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            const {value, reset, end} = this.state;\r\n            const {start, run} = this.props;\r\n\r\n            if (end) {\r\n                this.func = run(value);\r\n                this.setState(start);\r\n\r\n                if (mode !== 'run' && !reset)\r\n                    return;\r\n            }\r\n\r\n            clearInterval(this.timerID);\r\n            let state;\r\n\r\n            if (mode === 'run') {\r\n                const move = () => {\r\n                    this.setState(this.func());\r\n\r\n                    if (this.state.end)\r\n                        clearInterval(this.timerID);\r\n                };\r\n\r\n                this.timerID = setInterval(move, 200);\r\n            } else if (mode === 'prev') {\r\n                state = this.func(true);\r\n            } else {\r\n                state = this.func();\r\n            }\r\n\r\n            this.setState({\r\n                reset: false,\r\n                ...state\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            const code\r\n                = this.props.clean(val);\r\n\r\n            this.setState({\r\n                ...this.props.start,\r\n                end: true,\r\n                value: val,\r\n                code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        const code = this.state.code;\r\n        const prog = [...code].map((val, ind) => {\r\n            const color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        const css = 'var(--table-size)';\r\n        const [row, col]\r\n            = resize(this.state.value);\r\n\r\n        return (\r\n            <header className='App-header'\r\n                    style={{fontSize: 'min(10vh, 3vw)'}}>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name}\r\n                        </code>\r\n                        <ul style={{fontSize: '75%'}}>\r\n                            <li>Hover over buttons for usage</li>\r\n                            <li>\r\n                                Commands located&nbsp;\r\n                                <a href={link}>here</a>\r\n                                {'\\xa0'.repeat(7)}\r\n                            </li>\r\n                        </ul>\r\n                        <form>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col}\r\n                                    style={{\r\n                                        minWidth: `calc(${css})`,\r\n                                        minHeight: `calc(${css} / 3)`\r\n                                    }}\r\n                                />\r\n                            </label>\r\n                        </form>\r\n                        {button('▶', this.runCode('run'), 'Run')}\r\n                        {button('❮', this.runCode('prev'), 'Previous')}\r\n                        {button('❯', this.runCode('next'), 'Next')}\r\n                        {button('✖', () => {\r\n                            clearInterval(this.timerID);\r\n                            this.setState({\r\n                                ...this.props.start,\r\n                                reset: true,\r\n                                end: true\r\n                            });\r\n                        }, 'Stop')}\r\n                        {home()}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getProgram()}\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction clean(input) {\r\n    let code = '';\r\n\r\n    for (let c of input)\r\n        if ('><!,.'.includes(c))\r\n            code += c;\r\n\r\n    return code;\r\n}\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        const code = clean(input);\r\n        const len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        return function (back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape, acc, ind,\r\n                ptr,  out, end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        clean={clean}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction clean(input) {\r\n    let code = '';\r\n\r\n    for (let c of input)\r\n        if ('+-><'.includes(c))\r\n            code += c;\r\n\r\n    return code;\r\n}\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        const code = clean(input);\r\n        const len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        return function (back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape,\r\n                ind,\r\n                ptr,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        clean={clean}\r\n        tape={true} />;\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function error(str) {\r\n        alert(str + ' start '\r\n            + 'location detected!');\r\n\r\n        let res = {end: true};\r\n        obj.pos = null;\r\n\r\n        return () => res;\r\n    }\r\n\r\n    function dist(x, y, size) {\r\n        let diff = Math.abs(x - y);\r\n        let quo = Math.floor(diff / size);\r\n        let mod = diff % size;\r\n\r\n        return quo + mod;\r\n    }\r\n\r\n    function comp(pos, size) {\r\n        return (x, y) =>\r\n            dist(pos, x, size)\r\n          - dist(pos, y, size);\r\n    }\r\n\r\n    function close(pos, arr) {\r\n        let size = arr.length;\r\n        let warp = [];\r\n\r\n        for (let k in arr)\r\n            if (arr[k] === '@')\r\n                warp.push(k);\r\n\r\n        warp.sort(comp(pos, size));\r\n        return warp.length > 1\r\n            ? warp[1] : pos;\r\n    }\r\n\r\n    let str = '^v<>';\r\n    let dir = [\r\n        [-1, 0],\r\n        [1, 0],\r\n        [0, -1],\r\n        [0, 1]\r\n    ];\r\n\r\n    function run(code, size) {\r\n        obj.pos = null;\r\n        let vel = dir[0];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        if (!code.includes('!')) {\r\n            return error('No');\r\n        }\r\n\r\n        for (let k in code)\r\n            if (code[k] === '!') {\r\n                if (obj.pos !== null)\r\n                    return error('Additional');\r\n\r\n                obj.pos = k;\r\n            }\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {pos, end, out, acc} = state;\r\n            let c = code[pos];\r\n\r\n            if (str.includes(c)) {\r\n                vel = dir[str.indexOf(c)];\r\n            } else if (c === '|') {\r\n                vel = [-vel[0], -vel[1]];\r\n            } else if (c === '@') {\r\n                pos = close(pos, code);\r\n                pos -= size;\r\n\r\n                if (pos < 0)\r\n                    pos += size * size;\r\n            } else if (+c) {\r\n                acc = +c;\r\n            } else if (c === '+') {\r\n                acc += 1;\r\n            } else if (c === '-') {\r\n                acc -= 1;\r\n            } else if (c === '*') {\r\n                acc *= 2;\r\n            } else if (c === 's') {\r\n                acc = acc * acc;\r\n            } else if (c === '/') {\r\n                acc = Math.floor(acc / 2);\r\n            } else if (c === '~') {\r\n                out += String.fromCharCode(acc);\r\n            } else if (c === '?') {\r\n                let rnd = Math.random() * 4;\r\n                vel = dir[Math.floor(rnd)];\r\n            } else if (c === '.') {\r\n                pos = null;\r\n                end = true;\r\n            }\r\n\r\n            if (pos !== null && c !== '@')\r\n                pos = wrap(pos);\r\n\r\n            state = {pos, end, out, acc};\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function WII2D() {\r\n    let obj = {\r\n        pos: null,\r\n        end: false,\r\n        out: '',\r\n        acc: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='WII2D'\r\n        start={obj}\r\n        run={run}\r\n        out={true}\r\n        reg={true} />;\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    const arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    const a = Math.floor(Math.random() * x);\r\n    const b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        const arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            move: true,\r\n            buff: null,\r\n            arr\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        const arr = [...this.state.arr];\r\n        const row = this.state.row;\r\n        const col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr});\r\n    }\r\n\r\n    updateDim() {\r\n        const arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        const s = e.key.toLowerCase();\r\n        const old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    move: false,\r\n                    vel});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        const [a, b] = this.state.vel;\r\n        const {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            const num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        const buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{\r\n                            height: '85vh',\r\n                            width: '95vw',\r\n                            borderSpacing: '0.5vh'\r\n                        }}\r\n                        className='grid'>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                        className='cell select'\r\n                                        bgcolor={\r\n                                            val > 0 ? 'white' :\r\n                                            val < 0 ? 'red' : 'black'\r\n                                        }\r\n                                        style={{\r\n                                            cursor: 'default',\r\n                                            borderRadius: '1vh'\r\n                                        }}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <div style={{marginBottom: '20px'}}>\r\n                    {home()}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default function Home() {\r\n    document.title = 'Home | Bangyen';\r\n    const style = {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        padding: '0.65em 1.6em',\r\n        maxWidth: 150\r\n    };\r\n\r\n    return (\r\n        <header className='App-header select'>\r\n            <div>\r\n                <div className='dropdown'>\r\n                    <button className='custom'\r\n                            style={style}>\r\n                        Interpreters\r\n                    </button>\r\n                    <div className='dropdown-content'>\r\n                        <Link to='/back'>\r\n                            Back\r\n                        </Link>\r\n                        <Link to='/stun_step'>\r\n                            Stun Step\r\n                        </Link>\r\n                        <Link to='/suffolk'>\r\n                            Suffolk\r\n                        </Link>\r\n                        <Link to='/WII2D'>\r\n                            WII2D\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Link to='/videos'>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            style={style}>\r\n                        Videos\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            style={style}>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom'\r\n                        style={style} />\r\n                </form>\r\n            </div>\r\n            <h1 className='logo'>\r\n                Bangyen\r\n            </h1>\r\n        </header>\r\n    );\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nexport default function Error() {\r\n    document.title = 'Page Not Found | Bangyen';\r\n    return (\r\n        <header className='App-header'>\r\n            <center>\r\n                <code style={{padding: '10px'}}>\r\n                    This page isn't available.\r\n                </code>\r\n            </center>\r\n            {home()}\r\n        </header>\r\n    );\r\n}","import {button, home} from './helper';\r\nimport React from \"react\";\r\n\r\nfunction getVideo(embedId, name, width) {\r\n    return <div>\r\n        <iframe\r\n            width={width}\r\n            height={width / 16 * 9}\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n            title={name}\r\n        />\r\n    </div>;\r\n}\r\n\r\nexport default class Videos extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.id = [\r\n            ['Project Glow DC 2022', 'uoaCbzWmDVk'],\r\n            ['Chicago', 'Ay6w4Fsk8Ec'],\r\n            ['Washington, DC', 'xM4Ttema4cg'],\r\n            ['Firefly 2021', 'nnwVZDGj-SU']\r\n        ];\r\n\r\n        this.changeNum\r\n            = this.changeNum.bind(this);\r\n        this.changeWidth\r\n            = this.changeWidth.bind(this);\r\n\r\n        this.state = {\r\n            width: this.getWidth(),\r\n            num: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Videos | Bangyen';\r\n        window.addEventListener(\r\n            'resize', this.changeWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            'resize', this.changeWidth);\r\n    }\r\n\r\n    getWidth() {\r\n        const height = window.innerHeight;\r\n        let width = window.innerWidth;\r\n\r\n        if (1.1 * height > width)\r\n            width = width * 0.9;\r\n        else\r\n            width = width / 2;\r\n\r\n        return width;\r\n    }\r\n\r\n    changeWidth() {\r\n        const width = this.getWidth();\r\n        this.setState({width});\r\n    }\r\n\r\n    changeNum(val) {\r\n        const len = this.id.length;\r\n        const {num} = this.state;\r\n        val = num + val + len;\r\n\r\n        return () => {\r\n            this.setState({\r\n                num: val % len\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {num, width} = this.state;\r\n        const [name, id] = this.id[num];\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1 style={{fontSize: 'min(10vh, 8vw)'}}>\r\n                    <center>\r\n                        <code>\r\n                            {name}\r\n                        </code>\r\n                    </center>\r\n                </h1>\r\n                {getVideo(id, name, width)}\r\n                <div>\r\n                    {button('❮',\r\n                        this.changeNum(-1),\r\n                        'Previous')}\r\n                    {home()}\r\n                    {button('❯',\r\n                        this.changeNum(1),\r\n                        'Next')}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport WII2D from './Components/Interpreters/WII2D';\r\n\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\nimport Videos from './Components/Videos';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\nimport './Button.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/WII2D\">\r\n                        <WII2D />\r\n                    </Route>\r\n                    <Route exact path=\"/videos\">\r\n                        <Videos />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}