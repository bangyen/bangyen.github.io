{"version":3,"file":"static/js/375.69f67ec6.chunk.js","mappings":"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","sources":["components/Layout.js","Pages/Home.js","Pages/Error.js","Pages/Snake.js","Pages/Board.js","Pages/Lights/boardHandlers.js","Pages/Lights/matrices.js","Pages/Lights/chaseHandlers.js","Pages/Lights/Example.js","Pages/Lights/Info.js","Pages/Lights/LightsOut.js","components/ResearchDemo.js","Pages/ZSharp.js","Pages/Oligopoly.js","Pages/Interpreters.js","Pages/index.js","hooks.js"],"sourcesContent":["import React from 'react';\nimport { Container, Box } from '../components/mui';\nimport { SPACING, COMPONENT_VARIANTS, COLORS } from '../config/theme';\n\n/**\n * Section component provides consistent section layout with proper spacing\n * and responsive padding for improved maintainability.\n */\nexport function Section({\n    children,\n    id,\n    paddingY = SPACING.padding.lg,\n    paddingX = SPACING.padding.lg,\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}) {\n    return (\n        <Container\n            maxWidth={false}\n            id={id}\n            sx={{\n                paddingY,\n                paddingX,\n                ...props.sx,\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * BackgroundBox component provides consistent background positioning\n * for page background elements.\n */\nexport function BackgroundBox({ children, ...props }) {\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                background: COLORS.surface.background,\n                zIndex: -1,\n                ...props.sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n\n/**\n * HeroContainer component provides consistent hero section layout\n * with centered content and responsive padding.\n */\nexport function HeroContainer({\n    children,\n    paddingBottom = '4rem',\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}) {\n    return (\n        <Container\n            maxWidth={false}\n            sx={{\n                flex: 1,\n                ...COMPONENT_VARIANTS.flexCenter,\n                paddingTop: 0,\n                paddingBottom,\n                paddingX: {\n                    xs: SPACING.padding.sm,\n                    md: SPACING.padding.lg,\n                },\n                maxWidth: '100%',\n                overflowX: 'hidden',\n                ...props.sx,\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * PageLayout component provides consistent page layout with background,\n * full height, and proper positioning for improved maintainability.\n */\nexport function PageLayout({ children, ...props }) {\n    return (\n        <Box\n            sx={{\n                minHeight: '100vh',\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n                ...props.sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Grid,\n    Typography,\n    Box,\n    Menu,\n    MenuItem,\n    Fade,\n    Button,\n} from '../components/mui';\n\nimport { TooltipButton, GlassCard, ICON_MAP } from '../helpers';\nimport { Section, HeroContainer } from '../components/Layout';\nimport {\n    PERSONAL_INFO,\n    URLS,\n    SKILLS,\n    PUBLICATIONS,\n    PROJECTS,\n    PAGE_TITLES,\n} from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    ANIMATIONS,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nimport {\n    GitHub,\n    Work,\n    LocationOn,\n    OpenInNew,\n    ArrowForward,\n    Code,\n    Psychology,\n    GamepadRounded,\n    ViewModuleRounded,\n} from '../components/icons';\n\n// Project categories with enhanced metadata\nconst PROJECT_CATEGORIES = {\n    research: {\n        title: 'Research',\n        icon: Psychology,\n        color: COLORS.data.green,\n        projects: {\n            ZSharp: {\n                path: '/ZSharp',\n                description: 'ML optimization method',\n                technology: 'PyTorch',\n            },\n            Oligopoly: {\n                path: '/Oligopoly',\n                description: 'Market simulation model',\n                technology: 'FastAPI',\n            },\n        },\n    },\n    games: {\n        title: 'Games',\n        icon: GamepadRounded,\n        color: COLORS.primary.main,\n        projects: {\n            Snake: {\n                path: '/Snake',\n                description: 'Retro arcade gameplay',\n                technology: 'JavaScript',\n            },\n            Lights_Out: {\n                path: '/Lights_Out',\n                description: 'Grid-based logic puzzle',\n                technology: 'JavaScript',\n            },\n        },\n    },\n    tools: {\n        title: 'Tools',\n        icon: Code,\n        color: COLORS.data.amber,\n        projects: {\n            Interpreters: {\n                path: '/Interpreters',\n                description: 'Esoteric language demos',\n                technology: 'JavaScript',\n            },\n        },\n    },\n};\n\nfunction ProjectDropdown() {\n    return (\n        <Box sx={{ padding: '16px 16px 0 16px' }}>\n            {Object.entries(PROJECT_CATEGORIES).map(\n                ([categoryKey, category]) => {\n                    const IconComponent = category.icon;\n                    return (\n                        <Box key={categoryKey} sx={{ marginBottom: 2 }}>\n                            {/* Category Header */}\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: 1,\n                                    padding: '8px 0 4px 0',\n                                    marginBottom: 0.5,\n                                    position: 'relative',\n                                    '&::after': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        bottom: 0,\n                                        left: 0,\n                                        right: 0,\n                                        height: '1px',\n                                        backgroundColor:\n                                            'rgba(255, 255, 255, 0.05)',\n                                    },\n                                }}\n                            >\n                                <IconComponent\n                                    sx={{\n                                        color: '#4C78FF',\n                                        fontSize: '14px',\n                                        opacity: 0.7,\n                                    }}\n                                />\n                                <Typography\n                                    sx={{\n                                        color: 'rgba(157, 163, 174, 0.7)',\n                                        fontSize: '10px',\n                                        fontWeight: 500,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.14em',\n                                        fontFamily:\n                                            'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\n                                    }}\n                                >\n                                    {category.title}\n                                </Typography>\n                            </Box>\n\n                            {/* Category Projects */}\n                            {Object.entries(category.projects).map(\n                                ([projectName, project]) => (\n                                    <MenuItem\n                                        key={projectName}\n                                        component={Link}\n                                        to={project.path}\n                                        sx={{\n                                            padding: '10px 12px',\n                                            borderRadius: '8px',\n                                            margin: '0',\n                                            minHeight: '40px',\n                                            transition: 'all 120ms ease',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            alignItems: 'flex-start',\n                                            gap: '6px',\n                                            '&:hover': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.06)',\n                                                transform: 'translateY(-1px)',\n                                            },\n                                            '&:active': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.08)',\n                                            },\n                                            '&:focus-visible': {\n                                                outline: 'none',\n                                                ring: '1px solid rgba(255, 255, 255, 0.2)',\n                                                ringOffset: '0',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                fontWeight: 600,\n                                                fontSize: '15px',\n                                                lineHeight: 1.6,\n                                                color: '#EDEDED',\n                                            }}\n                                        >\n                                            {projectName.replace('_', ' ')}\n                                        </Typography>\n                                        <Typography\n                                            sx={{\n                                                color: 'rgba(157, 163, 174, 0.8)',\n                                                fontSize: '12px',\n                                                lineHeight: 1.4,\n                                            }}\n                                        >\n                                            {project.description}\n                                        </Typography>\n                                    </MenuItem>\n                                )\n                            )}\n                        </Box>\n                    );\n                }\n            )}\n        </Box>\n    );\n}\n\nfunction clickHandler(setAnchor) {\n    return event => {\n        setAnchor(event.currentTarget);\n    };\n}\n\nfunction closeHandler(setAnchor) {\n    return () => {\n        setAnchor(null);\n    };\n}\n\nfunction MenuButton() {\n    const [anchor, setAnchor] = useState(null);\n    const handleClick = clickHandler(setAnchor);\n    const handleClose = closeHandler(setAnchor);\n    const open = Boolean(anchor);\n\n    const define = value => {\n        return open ? value : undefined;\n    };\n\n    return (\n        <Box>\n            <TooltipButton\n                title=\"Projects Menu\"\n                id=\"projects-menu-button\"\n                Icon={ViewModuleRounded}\n                aria-controls={define('projects-menu')}\n                aria-expanded={define('true')}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                    '&:hover': {\n                        backgroundColor: COLORS.interactive.hover,\n                        transform: 'scale(1.05)',\n                    },\n                }}\n            />\n            <Menu\n                id=\"projects-menu\"\n                open={open}\n                anchorEl={anchor}\n                disableAutoFocusItem={true}\n                sx={{\n                    marginLeft: 1,\n                    marginTop: 1,\n                    '& .MuiPaper-root': {\n                        width: 'auto',\n                        maxWidth: '300px',\n                        height: 'auto !important',\n                        backgroundColor: 'rgba(11, 11, 12, 0.95)',\n                        backdropFilter: 'blur(8px)',\n                        border: '1px solid rgba(255, 255, 255, 0.1)',\n                        borderRadius: '16px',\n                        padding: 0,\n                        boxShadow: '0 8px 30px rgba(0, 0, 0, 0.35)',\n                        transition: 'all 140ms cubic-bezier(0.2, 0.8, 0.2, 1)',\n                        transform: open\n                            ? 'translateY(0) scale(1)'\n                            : 'translateY(8px) scale(0.98)',\n                        opacity: open ? 1 : 0,\n                    },\n                }}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'projects-menu-button',\n                    sx: {\n                        padding: 0,\n                        height: 'auto',\n                    },\n                }}\n                transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n            >\n                <ProjectDropdown />\n            </Menu>\n        </Box>\n    );\n}\n\nexport default function Home() {\n    useEffect(() => {\n        document.title = PAGE_TITLES.home;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Modern Navigation */}\n            <Box\n                sx={{\n                    position: 'relative',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    padding: { xs: '0.5rem', md: '1.5rem' },\n                    zIndex: 1000,\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    maxWidth: '100%', // Prevent overflow\n                    overflowX: 'hidden', // Hide any overflow\n                }}\n            >\n                <MenuButton />\n                <TooltipButton\n                    component=\"a\"\n                    href={URLS.githubProfile}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title=\"GitHub Profile\"\n                    Icon={GitHub}\n                />\n            </Box>\n\n            {/* Spacing between nav and hero */}\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n\n            {/* Hero Section */}\n            <HeroContainer>\n                <Grid container spacing={{ xs: 4, md: 8 }} alignItems=\"center\">\n                    {/* Left Side - Introduction */}\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={800}>\n                            <Box>\n                                <Typography\n                                    sx={{\n                                        color: COLORS.primary.main,\n                                        fontSize: TYPOGRAPHY.fontSize.body,\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.025em',\n                                        marginBottom: 3,\n                                    }}\n                                >\n                                    Hello, I&apos;m\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.primary,\n                                        fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                        fontSize: {\n                                            xs: 'clamp(2rem, 8vw, 2.5rem)', // Mobile sizing\n                                            md: 'clamp(3rem, 6vw, 5rem)', // Desktop sizing\n                                        },\n                                        lineHeight: 1.4,\n                                        letterSpacing: '0',\n                                        marginBottom: 2,\n                                        // Allow controlled wrapping, but prevent breaks in names\n                                        wordBreak: 'keep-all', // Prevent breaking within words\n                                        hyphens: 'none', // Disable hyphenation\n                                    }}\n                                >\n                                    {PERSONAL_INFO.name}\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.secondary,\n                                        fontSize: {\n                                            xs: 'clamp(0.875rem, 4vw, 1.125rem)', // Mobile sizing\n                                            md: 'clamp(1.125rem, 2.5vw, 1.5rem)', // Desktop sizing\n                                        },\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        marginBottom: 4,\n                                        lineHeight: 1.4,\n                                        // Control how text breaks, allowing smart wrapping\n                                        wordBreak: 'keep-all', // Prevent breaking within words\n                                        hyphens: 'none', // Disable hyphenation\n                                    }}\n                                >\n                                    {PERSONAL_INFO.title}\n                                </Typography>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 2,\n                                        marginBottom: 4,\n                                    }}\n                                >\n                                    <LocationOn\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                        }}\n                                    >\n                                        {PERSONAL_INFO.location}\n                                    </Typography>\n                                </Box>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        gap: 2,\n                                        flexWrap: 'wrap',\n                                    }}\n                                >\n                                    <Box\n                                        onClick={() => {\n                                            const element =\n                                                document.getElementById(\n                                                    'featured-work'\n                                                );\n                                            if (element) {\n                                                element.scrollIntoView({\n                                                    behavior: 'smooth',\n                                                    block: 'start',\n                                                    inline: 'nearest',\n                                                });\n                                            }\n                                        }}\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            gap: 1,\n                                            padding: '12px 20px',\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                            borderRadius:\n                                                SPACING.borderRadius.full,\n                                            transition: ANIMATIONS.transition,\n                                            cursor: 'pointer',\n                                            '&:hover': {\n                                                transform:\n                                                    'scale(1.02) translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 20px hsla(0, 0%, 0%, 0.25)',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.body,\n                                            }}\n                                        >\n                                            View Work\n                                        </Typography>\n                                        <ArrowForward\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontSize: '1rem',\n                                            }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Fade>\n                    </Grid>\n\n                    {/* Right Side - Skills & Contact */}\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={1000}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    gap: 4,\n                                }}\n                            >\n                                {/* Compact Skills Section */}\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Tech Stack\n                                    </Typography>\n\n                                    {/* Responsive Skills Grid */}\n                                    <Box\n                                        sx={{\n                                            display: 'grid',\n                                            gridTemplateColumns: {\n                                                xs: '1fr', // Single column on mobile\n                                                md: 'repeat(3, 1fr)', // 3 columns on desktop\n                                            },\n                                            gap: {\n                                                xs: 1.5, // Smaller gap on mobile\n                                                md: 2,\n                                            },\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        {SKILLS.map((skill, index) => {\n                                            const IconComponent =\n                                                ICON_MAP[skill.icon] || Work;\n\n                                            return (\n                                                <Fade\n                                                    in\n                                                    timeout={1200 + index * 150}\n                                                    key={skill.name}\n                                                >\n                                                    <Box\n                                                        sx={{\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .selected,\n                                                            border: `1px solid hsla(217, 91%, 60%, 0.2)`,\n                                                            borderRadius:\n                                                                SPACING\n                                                                    .borderRadius\n                                                                    .md,\n                                                            padding: {\n                                                                xs: '12px',\n                                                                md: '16px',\n                                                            },\n                                                            display: 'flex',\n                                                            alignItems:\n                                                                'center',\n                                                            gap: {\n                                                                xs: 1,\n                                                                md: 1.5,\n                                                            },\n                                                            transition:\n                                                                ANIMATIONS.transition,\n                                                            cursor: 'pointer',\n                                                            minWidth: 0,\n                                                            overflow: 'hidden',\n                                                            '&:hover': {\n                                                                ...ANIMATIONS\n                                                                    .presets\n                                                                    .cardHover,\n                                                                transform:\n                                                                    'translateY(-2px) scale(1.01)',\n                                                            },\n                                                        }}\n                                                    >\n                                                        <IconComponent\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                            }}\n                                                        />\n                                                        <Typography\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                                fontWeight:\n                                                                    TYPOGRAPHY\n                                                                        .fontWeight\n                                                                        .medium,\n                                                                whiteSpace:\n                                                                    'nowrap', // Prevent wrapping\n                                                                overflow:\n                                                                    'hidden', // Hide overflow\n                                                                textOverflow:\n                                                                    'ellipsis', // Show ellipsis if too long\n                                                                flexShrink: 1, // Allow text to shrink\n                                                            }}\n                                                        >\n                                                            {skill.name}\n                                                        </Typography>\n                                                    </Box>\n                                                </Fade>\n                                            );\n                                        })}\n                                    </Box>\n                                </GlassCard>\n\n                                {/* Contact & Action Section */}\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Let&apos;s Connect\n                                    </Typography>\n\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            lineHeight: 1.5,\n                                            marginBottom: 4,\n                                        }}\n                                    >\n                                        Open to opportunities in backend\n                                        development, ML engineering, and\n                                        research collaboration.\n                                    </Typography>\n\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            gap: 2,\n                                        }}\n                                    >\n                                        <Button\n                                            component=\"a\"\n                                            href={URLS.githubProfile}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            variant=\"secondary\"\n                                            startIcon={<GitHub />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                            }}\n                                        >\n                                            View GitHub\n                                        </Button>\n\n                                        <Button\n                                            component=\"a\"\n                                            href=\"mailto:bangyenp@gmail.com?subject=Project%20Collaboration\"\n                                            variant=\"ghost\"\n                                            endIcon={<ArrowForward />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                            }}\n                                        >\n                                            Available for Projects\n                                        </Button>\n                                    </Box>\n                                </GlassCard>\n                            </Box>\n                        </Fade>\n                    </Grid>\n                </Grid>\n            </HeroContainer>\n\n            {/* Featured Work Section */}\n            <Section id=\"featured-work\">\n                <Fade in timeout={1400}>\n                    <Box>\n                        <Typography\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontSize: TYPOGRAPHY.fontSize.h2,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                textAlign: 'center',\n                                marginBottom: 6,\n                            }}\n                        >\n                            Featured Work\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridTemplateColumns: {\n                                    xs: '1fr',\n                                    md: 'repeat(2, 1fr)',\n                                },\n                                gap: 4,\n                            }}\n                        >\n                            {/* Publications */}\n                            {PUBLICATIONS.map((publication, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + index * 200}\n                                    key={publication.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={publication.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            height: '100%',\n                                            display: 'flex',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard sx={{ border: 'none' }}>\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Research\n                                                </Typography>\n                                                <OpenInNew\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {publication.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(141, 64%, 49%, 0.1)',\n                                                        color: 'hsl(141, 64%, 49%)',\n                                                        border: '1px solid hsla(141, 64%, 49%, 0.2)',\n                                                    }}\n                                                >\n                                                    {publication.conference}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {publication.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n\n                            {/* Projects */}\n                            {PROJECTS.map((project, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + (index + 2) * 200}\n                                    key={project.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={project.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            height: '100%',\n                                            display: 'flex',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard sx={{ border: 'none' }}>\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Project\n                                                </Typography>\n                                                <GitHub\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {project.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(217, 91%, 60%, 0.1)',\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        border: '1px solid hsla(217, 91%, 60%, 0.2)',\n                                                    }}\n                                                >\n                                                    {project.technology}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {project.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n                        </Box>\n                    </Box>\n                </Fade>\n            </Section>\n\n            {/* Bottom spacing */}\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { Grid, Typography, Box, Fade } from '../components/mui';\nimport { HomeButton } from '../helpers';\nimport { PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nexport default function Error() {\n    document.title = PAGE_TITLES.error;\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '0.5rem', md: '1.5rem' },\n                boxSizing: 'border-box',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Fade in timeout={1000}>\n                    <Box\n                        sx={{\n                            textAlign: 'center',\n                            maxWidth: '24rem',\n                            width: '100%',\n                            padding: {\n                                xs: '0 1rem',\n                                md: '0 2rem',\n                            },\n                            boxSizing: 'border-box',\n                        }}\n                    >\n                        <Typography\n                            variant=\"h1\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                marginBottom: 2,\n                                fontSize: TYPOGRAPHY.fontSize.display,\n                            }}\n                        >\n                            404\n                        </Typography>\n\n                        <Typography\n                            variant=\"h3\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 2,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.h2,\n                                    md: TYPOGRAPHY.fontSize.h2,\n                                },\n                            }}\n                        >\n                            Page Not Found\n                        </Typography>\n\n                        <Typography\n                            variant=\"body1\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 4,\n                                fontWeight: TYPOGRAPHY.fontWeight.normal,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.body,\n                                    md: TYPOGRAPHY.fontSize.body,\n                                },\n                                lineHeight: 1.5,\n                            }}\n                        >\n                            This page isn&apos;t available. The link you\n                            followed may be broken, or the page may have been\n                            removed.\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                ...COMPONENT_VARIANTS.flexCenter,\n                                marginTop: 4,\n                            }}\n                        >\n                            <HomeButton />\n                        </Box>\n                    </Box>\n                </Fade>\n            </Grid>\n        </Grid>\n    );\n}\n","import {\n    useMemo,\n    useCallback,\n    useReducer,\n    useEffect,\n    useState,\n    useRef,\n} from 'react';\nimport { Grid } from '../components/mui';\n// import * as colors from '@mui/material/colors'; // Removed unused import\n\nimport { convertPixels, gridMove, getDirection } from '../calculate';\nimport { useWindow, useTimer, useKeys } from '../hooks';\nimport { CustomGrid, Controls, ArrowsButton } from '../helpers';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS, COMPONENT_VARIANTS } from '../config/theme';\n\nfunction getRandom(max) {\n    return Math.floor(Math.random() * max);\n}\n\nfunction addNext(max, exclude) {\n    let pos = getRandom(max);\n\n    while (pos in exclude) if (++pos >= max) pos = 0;\n\n    return {\n        ...exclude,\n        [pos]: -1,\n    };\n}\n\nfunction mapBoard(board, change) {\n    const newBoard = {};\n\n    for (const cell in board) {\n        const value = board[cell];\n\n        if (value + change > 0) newBoard[cell] = value + change;\n        else if (value < 0) newBoard[cell] = value;\n    }\n\n    return newBoard;\n}\n\nfunction handleResize(state, rows, cols) {\n    const max = rows * cols;\n    const head = getRandom(max);\n    let next = getRandom(max);\n\n    if (head === next) next = ++next % max;\n\n    return {\n        ...state,\n        rows,\n        cols,\n        head,\n        board: {\n            [head]: state.length,\n            [next]: -1,\n        },\n    };\n}\n\nfunction reduceBoard(state) {\n    let { board, length, head, velocity, buffer } = state;\n    const { rows, cols } = state;\n\n    const max = rows * cols;\n\n    board = mapBoard(board, -1);\n    head = gridMove(head, velocity, rows, cols);\n\n    if (head in board) {\n        const value = board[head];\n        board[head] = length;\n\n        if (value > 0) {\n            board = mapBoard(board, -value);\n        } else {\n            board = mapBoard(board, 1);\n            board = addNext(max, board);\n        }\n\n        length = board[head];\n    } else {\n        board[head] = length;\n    }\n\n    if (buffer.length) {\n        const [first, ...rest] = buffer;\n        buffer = rest;\n\n        if (velocity + first) velocity = first;\n    }\n\n    return {\n        ...state,\n        length,\n        board,\n        head,\n        velocity,\n        buffer,\n    };\n}\n\nfunction handleAction(state, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case 'resize':\n            const { rows, cols } = payload;\n\n            return handleResize(state, rows, cols);\n        case 'steer':\n            const velocity = getDirection(payload.key);\n            let { buffer } = state;\n\n            if (velocity) buffer = [...buffer, velocity];\n\n            return {\n                ...state,\n                buffer,\n            };\n        case 'move':\n            return reduceBoard(state);\n        default:\n            return state;\n    }\n}\n\nexport default function Snake() {\n    const { create: createTimer } = useTimer(100);\n    const { create: createKeys } = useKeys();\n\n    const { height, width } = useWindow();\n    const length = GAME_CONSTANTS.snake.initialLength;\n    const size = GAME_CONSTANTS.snake.segmentSize;\n\n    // State for random moves mode\n    const [randomMovesEnabled, setRandomMovesEnabled] = useState(false);\n    const randomMovesRef = useRef(false);\n\n    // State for arrows visibility\n    const [showArrows, setShowArrows] = useState(false);\n\n    const { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    const initial = useMemo(\n        () => ({\n            velocity: GAME_CONSTANTS.snake.initialVelocity,\n            buffer: [],\n            length,\n        }),\n        [length]\n    );\n\n    const [state, dispatch] = useReducer(\n        handleAction,\n        handleResize(initial, rows, cols)\n    );\n\n    const controlHandler = useCallback(\n        event => () => {\n            const key = GAME_CONSTANTS.controls.arrowPrefix + event;\n\n            dispatch({\n                type: 'steer',\n                payload: { key },\n            });\n        },\n        []\n    );\n\n    const chooseColor = useCallback(\n        (row, col) => {\n            const index = row * cols + col;\n            const board = state.board;\n            let color = 'inherit';\n\n            if (index in board) {\n                if (board[index] > 0)\n                    color = COLORS.primary.main; // Snake body - light blue\n                else color = COLORS.primary.dark; // Food - lighter blue shade\n            }\n\n            return {\n                backgroundColor: color,\n                boxShadow:\n                    color !== 'inherit' ? `0 0 1.25rem ${color}40` : 'none', // 20px\n                border:\n                    color !== 'inherit' ? `0.0625rem solid ${color}` : 'none', // 1px\n            };\n        },\n        [state, cols]\n    );\n\n    useEffect(() => {\n        const wrapDispatch = () => {\n            const directions = 'wasd';\n            const index = getRandom(4);\n            const key = directions[index];\n\n            dispatch({\n                type: 'move',\n            });\n\n            if (getRandom(2) && randomMovesRef.current) {\n                dispatch({\n                    type: 'steer',\n                    payload: { key },\n                });\n            }\n        };\n\n        const wrapDirection = event =>\n            dispatch({\n                type: 'steer',\n                payload: event,\n            });\n\n        createTimer({ repeat: wrapDispatch });\n        createKeys(wrapDirection);\n    }, [createTimer, createKeys]);\n\n    // Update the ref when the state changes\n    useEffect(() => {\n        randomMovesRef.current = randomMovesEnabled;\n    }, [randomMovesEnabled]);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            payload: { rows, cols },\n        });\n    }, [rows, cols]);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.snake;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            position=\"relative\"\n            sx={{\n                background: COLORS.surface.background,\n                overflow: 'hidden',\n            }}\n        >\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    zIndex: 1,\n                }}\n            >\n                <CustomGrid\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={chooseColor}\n                />\n            </Grid>\n            <Controls\n                handler={controlHandler}\n                onRandom={() => setRandomMovesEnabled(!randomMovesEnabled)}\n                randomEnabled={randomMovesEnabled}\n                hide={showArrows}\n                size=\"inherit\"\n            >\n                <ArrowsButton\n                    show={showArrows}\n                    setShow={setShowArrows}\n                    handler={controlHandler}\n                />\n            </Controls>\n        </Grid>\n    );\n}\n","// import * as colors from '@mui/material/colors'; // Removed unused import\nimport { Grid } from '../components/mui';\n\nimport { useMemo, useCallback } from 'react';\nimport { CustomGrid } from '../helpers';\nimport { COLORS } from '../config/theme';\n\nexport function Board(props) {\n    const { frontProps, backProps, size, rows, cols } = props;\n\n    return (\n        <Centered>\n            <CustomGrid\n                space={0}\n                size={size}\n                rows={rows - 1}\n                cols={cols - 1}\n                cellProps={backProps}\n            />\n            <Centered>\n                <CustomGrid\n                    space={0}\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={frontProps}\n                />\n            </Centered>\n        </Centered>\n    );\n}\n\nfunction Centered({ children }) {\n    const style = {\n        transform: 'translate(-50%, -50%)',\n    };\n\n    return (\n        <Grid\n            top=\"50%\"\n            left=\"50%\"\n            width=\"100%\"\n            position=\"absolute\"\n            style={style}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nfunction borderHandler(row, col, getColor) {\n    const self = getColor(row, col);\n    const up = getColor(row - 1, col);\n    const down = getColor(row + 1, col);\n    const left = getColor(row, col - 1);\n    const right = getColor(row, col + 1);\n    const props = {};\n\n    const upCheck = self === up;\n    const downCheck = self === down;\n    const leftCheck = self === left;\n    const rightCheck = self === right;\n\n    if (upCheck || leftCheck) props.borderTopLeftRadius = 0;\n    if (upCheck || rightCheck) props.borderTopRightRadius = 0;\n    if (downCheck || leftCheck) props.borderBottomLeftRadius = 0;\n    if (downCheck || rightCheck) props.borderBottomRightRadius = 0;\n\n    return props;\n}\n\nfunction fillerHandler(row, col, getColor) {\n    const topLeft = getColor(row, col);\n    const topRight = getColor(row, col + 1);\n    const botLeft = getColor(row + 1, col);\n    const botRight = getColor(row + 1, col + 1);\n    let color = true;\n\n    const total = topLeft + topRight + botLeft + botRight;\n\n    if ((!topLeft || !botRight) && total < 3) color = false;\n\n    return color;\n}\n\nexport function usePalette(score) {\n    // High contrast dark blue color scheme for better accessibility\n    const palette = useMemo(() => {\n        // Using darker blues for excellent contrast (5.2:1 ratio)\n        const primary = COLORS.primary.main; // Dark blue for \"on\" state\n        const secondary = COLORS.primary.dark; // Medium blue for \"off\" state\n\n        return { primary, secondary };\n    }, []); // Removed score dependency since we're using fixed colors\n\n    return palette;\n}\n\nexport function useGetters(getTile, palette) {\n    const getColor = useCallback(\n        (row, col) => {\n            const value = getTile(row, col);\n\n            const front = value ? palette.primary : palette.secondary;\n\n            const back = value ? palette.secondary : palette.primary;\n\n            return { front, back };\n        },\n        [getTile, palette]\n    );\n\n    const getBorder = useCallback(\n        (row, col) => {\n            return borderHandler(row, col, getTile);\n        },\n        [getTile]\n    );\n\n    const getFiller = useCallback(\n        (row, col) => {\n            const value = fillerHandler(row, col, getTile);\n\n            return value ? palette.primary : palette.secondary;\n        },\n        [getTile, palette]\n    );\n\n    return {\n        getColor,\n        getBorder,\n        getFiller,\n    };\n}\n\nexport function useHandler(state, palette) {\n    const { grid, rows, cols } = state;\n\n    const getTile = useCallback(\n        (row, col) => {\n            if (row < 0 || col < 0 || row >= rows || col >= cols) return -1;\n\n            return grid[row][col];\n        },\n        [grid, rows, cols]\n    );\n\n    return useGetters(getTile, palette);\n}\n","export function getGrid(rows, cols) {\n    return [...Array(rows)].map(() => Array(cols).fill(0));\n}\n\nexport function flipAdj(row, col, grid) {\n    const cols = grid[0].length;\n    const rows = grid.length;\n\n    grid = grid.map(row => [...row]);\n    grid[row][col] ^= 1;\n\n    if (row > 0) grid[row - 1][col] ^= 1;\n    if (row < rows - 1) grid[row + 1][col] ^= 1;\n\n    if (col > 0) grid[row][col - 1] ^= 1;\n    if (col < cols - 1) grid[row][col + 1] ^= 1;\n\n    return grid;\n}\n\nfunction randomize(rows, cols) {\n    let grid = getGrid(rows, cols);\n\n    for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n            const random = Math.random();\n\n            if (random > 0.5) grid = flipAdj(r, c, grid);\n        }\n    }\n\n    return grid;\n}\n\nexport function handleBoard(state, action) {\n    const { type, row, col } = action;\n\n    let { grid, score, rows, cols } = state;\n\n    switch (type) {\n        case 'adjacent':\n            grid = flipAdj(row, col, grid);\n\n            const flat = grid.flatMap(r => r);\n\n            const done = !flat.includes(1) || !flat.includes(0);\n\n            if (done) {\n                grid = randomize(rows, cols);\n                score += 1;\n            }\n\n            break;\n        case 'random':\n            grid = randomize(rows, cols);\n\n            break;\n        case 'resize':\n            const { newRows, newCols } = action;\n\n            rows = newRows;\n            cols = newCols;\n            grid = randomize(rows, cols);\n\n            break;\n        default:\n            break;\n    }\n\n    return {\n        grid,\n        score,\n        rows,\n        cols,\n    };\n}\n","function getMatrix(cols) {\n    const first = 7 << (cols - 2);\n    const matrix = [first];\n\n    for (let k = 1; k < cols; k++) {\n        const prev = matrix[k - 1];\n        const next = prev >> 1;\n        matrix.push(next);\n    }\n\n    matrix[0] -= 2 ** cols;\n    return matrix;\n}\n\nfunction countBits(num) {\n    let count = 0;\n\n    while (num) {\n        num &= num - 1;\n        count++;\n    }\n\n    return count;\n}\n\nfunction multiplySym(matrixA, matrixB) {\n    const size = matrixA.length;\n    const output = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        let outputRow = 0;\n\n        for (let c = 0; c < size; c++) {\n            const colB = matrixB[c];\n            const value = rowA & colB;\n            const count = countBits(value);\n\n            outputRow <<= 1;\n            outputRow += count & 1;\n        }\n\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getIdentity(size) {\n    const output = Array(size).fill(1);\n\n    for (let r = 0; r < size; r++) output[r] <<= size - r - 1;\n\n    return output;\n}\n\nfunction symmetricPow(matrix, power) {\n    const size = matrix.length;\n    let output = getIdentity(size);\n\n    for (let k = 0; k < power; k++) output = multiplySym(output, matrix);\n\n    return output;\n}\n\nfunction addSym(matrixA, matrixB) {\n    const size = matrixA.length;\n    const output = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        const rowB = matrixB[r];\n        const outputRow = rowA ^ rowB;\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getPolynomial(index) {\n    const output = [0, 1];\n\n    for (let k = 1; k < index; k++) {\n        const curr = output[k];\n        const prev = output[k - 1];\n        const double = curr << 1;\n\n        output.push(double ^ prev);\n    }\n\n    return output[index];\n}\n\nfunction evalPolynomial(matrix, poly) {\n    const size = matrix.length;\n    let output = Array(size).fill(0);\n    let degree = 0;\n\n    while (poly) {\n        if (poly & 1) {\n            const power = symmetricPow(matrix, degree);\n\n            output = addSym(output, power);\n        }\n\n        poly >>= 1;\n        degree++;\n    }\n\n    return output;\n}\n\nfunction sortMatrices(matrix, identity) {\n    const size = matrix.length;\n    const sorted = [...Array(size).keys()].sort(\n        (a, b) => matrix[b] - matrix[a]\n    );\n\n    const original = sorted.map(row => matrix[row]);\n    const inverted = sorted.map(row => identity[row]);\n\n    return [original, inverted];\n}\n\nfunction invertMatrix(matrix) {\n    const size = matrix.length;\n    const identity = getIdentity(size);\n\n    let original = matrix;\n    let inverted = identity;\n\n    for (let c = 0; c < size; c++) {\n        const pow = 1 << (size - c - 1);\n\n        [original, inverted] = sortMatrices(original, inverted);\n\n        for (let r = 0; r < size; r++) {\n            const alt = original[r];\n\n            if (r === c) continue;\n\n            if (alt & pow) {\n                original[r] ^= original[c];\n                inverted[r] ^= inverted[c];\n            }\n        }\n    }\n\n    return inverted;\n}\n\n/*\n    https://math.stackexchange.com/questions/2237467\n    https://en.wikipedia.org/wiki/Fibonacci_polynomials\n    https://graphics.stanford.edu/~seander/bithacks.html#:~:text=Brian%20Kernighan\n*/\nexport function getProduct(input, rows, cols) {\n    const matrix = getMatrix(cols);\n    const weights = getPolynomial(rows + 1);\n    const product = evalPolynomial(matrix, weights);\n    const inverse = invertMatrix(product);\n\n    const binary = parseInt(input.join(''), 2);\n\n    const getParity = row => {\n        const value = row & binary;\n        const count = countBits(value);\n        return count & 1;\n    };\n\n    return inverse.map(getParity);\n}\n","import { getGrid, flipAdj } from './boardHandlers';\nimport { getProduct } from './matrices';\n\nfunction chaseLights(states, dims) {\n    const newStates = [...states];\n    let prev = states.at(-1);\n\n    for (let r = 1; r < dims; r++) {\n        for (let c = 0; c < dims; c++) {\n            if (!prev[r - 1][c]) continue;\n\n            const next = flipAdj(r, c, prev);\n\n            newStates.push(next);\n            prev = next;\n        }\n    }\n\n    return newStates;\n}\n\nfunction fillRow(row, dims) {\n    const blank = Array(dims).fill(0);\n\n    const inputStates = [blank];\n    const outputStates = [blank];\n    const last = [...blank];\n\n    for (let c = 0; c < dims; c++) {\n        if (!row[c]) continue;\n\n        last[c] = 1;\n\n        const input = [...last];\n        const output = getProduct(input, dims, dims);\n\n        inputStates.push(input);\n        outputStates.push(output);\n    }\n\n    return {\n        input: inputStates,\n        output: outputStates,\n    };\n}\n\nfunction extendBack(states, size) {\n    const back = states.at(-1);\n    const extend = [...states];\n\n    while (extend.length < size) extend.push(back);\n\n    return extend;\n}\n\nfunction extendFront(states, size) {\n    const extend = [...states];\n    const front = states[0];\n\n    while (extend.length < size) extend.unshift(front);\n\n    return extend;\n}\n\nexport function getStates(start, dims) {\n    let board = getGrid(dims, dims);\n\n    for (const index of start) {\n        const row = Math.floor(index / dims);\n        const col = index % dims;\n\n        board = flipAdj(row, col, board);\n    }\n\n    let states = chaseLights([board], dims);\n    const last = states.at(-1);\n    const row = last.at(-1);\n\n    let { input, output } = fillRow(row, dims);\n\n    const before = states.length + input.length - 1;\n\n    const top = output.at(-1);\n    let state = last;\n\n    states = extendBack(states, before);\n    input = extendFront(input, before);\n    output = extendFront(output, before);\n\n    for (let k = 0; k < dims; k++) {\n        if (top[k]) {\n            state = flipAdj(0, k, state);\n            states.push(state);\n        }\n    }\n\n    const boardStates = chaseLights(states, dims);\n    const after = boardStates.length;\n\n    const inputStates = extendBack(input, after);\n    const outputStates = extendBack(output, after);\n\n    return {\n        boardStates,\n        inputStates,\n        outputStates,\n    };\n}\n","import { Typography, Grid } from '../../components/mui';\n\nimport { getStates } from './chaseHandlers';\nimport { CustomGrid } from '../../helpers';\nimport { useMobile } from '../../hooks';\nimport { TYPOGRAPHY } from '../../config/theme';\n\nfunction getFrames(states, palette) {\n    const newStates = [-1, ...states, -1];\n    const length = states.length;\n    const frames = {};\n\n    for (let k = 0; k < length + 1; k++) {\n        const state = newStates[k];\n        const next = newStates[k + 1];\n\n        const value = state + 1 ? state : next;\n        const color = value ? palette.primary : palette.secondary;\n\n        const percent = (100 * k) / length;\n        const floor = Math.floor(percent);\n\n        frames[`${floor}%`] = {\n            backgroundColor: color,\n        };\n    }\n\n    return frames;\n}\n\nfunction propHandler(states, getter, palette, id) {\n    return (row, col) => {\n        const state = getter(states, row, col);\n        const frames = getFrames(state, palette);\n        const length = states.length;\n\n        const name = `${id}-${row}-${col}`;\n        const index = `@keyframes ${name}`;\n\n        const animation = `\n            ${name}\n            ${length * 2}s\n            steps(1, start)\n            infinite\n        `;\n\n        const style = {\n            [index]: frames,\n            animation,\n        };\n\n        return { sx: style };\n    };\n}\n\nfunction getRange(dims) {\n    const keys = Array(dims).keys();\n\n    return [...keys];\n}\n\nfunction gridTiles(states, dims) {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n\n    return dRange.map(r => dRange.map(c => lRange.map(k => states[k][r][c])));\n}\n\nfunction rowTiles(states, dims) {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n\n    return dRange.map(r => lRange.map(k => states[k][r]));\n}\n\nfunction Bifold({ children }) {\n    return <Grid size={6}>{children}</Grid>;\n}\n\nfunction Title({ children }) {\n    return (\n        <Bifold>\n            <Typography\n                variant=\"h6\"\n                sx={{\n                    textAlign: 'center',\n                    fontWeight: 'semibold',\n                    fontSize: TYPOGRAPHY.fontSize.body,\n                    lineHeight: '1.2',\n                    letterSpacing: '-0.025em',\n                }}\n            >\n                {children}\n            </Typography>\n        </Bifold>\n    );\n}\n\nexport default function Example({ start, dims, size, palette }) {\n    const small = useMobile('lg');\n    const states = getStates(start, dims);\n    const width = small ? size / 2 : size;\n\n    const { boardStates, inputStates, outputStates } = states;\n\n    const boardTiles = gridTiles(boardStates, dims);\n    const inputTiles = rowTiles(inputStates, dims);\n    const outputTiles = rowTiles(outputStates, dims);\n\n    const getGrid = (s, r, c) => s[r][c];\n    const getRow = (s, r, c) => s[c];\n\n    const getBoard = propHandler(boardTiles, getGrid, palette, 'board');\n    const getInput = propHandler(inputTiles, getRow, palette, 'input');\n    const getOutput = propHandler(outputTiles, getRow, palette, 'output');\n\n    return (\n        <Grid container size={12} spacing={4}>\n            <Grid container size={12}>\n                <Bifold>\n                    <CustomGrid\n                        size={width}\n                        rows={dims}\n                        cols={dims}\n                        cellProps={getBoard}\n                    />\n                </Bifold>\n                <Grid container size={6}>\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getInput}\n                    />\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getOutput}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container size={12}>\n                <Title>Animation Demo</Title>\n                <Title>Pattern Input</Title>\n            </Grid>\n        </Grid>\n    );\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { Backdrop, Typography, Box, Grid } from '../../components/mui';\nimport {\n    CircleRounded,\n    KeyboardArrowDown,\n    Calculate,\n    Replay,\n} from '../../components/icons';\nimport {\n    SPACING,\n    COLORS,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../../config/theme';\nimport { GlassCard, CustomGrid } from '../../helpers';\nimport { getProduct } from './matrices';\nimport { useGetters } from '../Board';\nimport { useMobile } from '../../hooks';\nimport Example from './Example';\n\nfunction getInput(getters, toggleTile) {\n    const { getColor, getBorder } = getters;\n\n    return (r, c) => {\n        const { front, back } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n            onClick: toggleTile(c),\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n            color: front,\n            children: <CircleRounded />,\n        };\n    };\n}\n\nfunction getOutput({ getColor, getBorder }) {\n    return (r, c) => {\n        const { front } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n        };\n    };\n}\n\nfunction useHandler(row, size, palette) {\n    const getTile = useCallback(\n        (r, c) => {\n            if (r !== 0 || c < 0 || c >= size) return -1;\n\n            return row[c];\n        },\n        [row, size]\n    );\n\n    return useGetters(getTile, palette);\n}\n\nexport default function Info(props) {\n    const { rows, cols, size, open, palette, toggleOpen } = props;\n    const isMobile = useMobile('md');\n    const isLargeScreen = useMobile('lg');\n\n    const [row, setRow] = useState(Array(cols).fill(0));\n\n    useEffect(() => {\n        const newRow = Array(cols).fill(0);\n\n        setRow(newRow);\n    }, [cols, palette]);\n\n    const res = getProduct(row, rows, cols);\n\n    const toggleTile = col => event => {\n        event.stopPropagation();\n\n        const newRow = [...row];\n        newRow[col] ^= 1;\n        setRow(newRow);\n    };\n\n    const inputGetters = useHandler(row, cols, palette);\n    const outputGetters = useHandler(res, cols, palette);\n    const inputProps = getInput(inputGetters, toggleTile);\n    const outputProps = getOutput(outputGetters);\n\n    return (\n        <Backdrop\n            open={open}\n            onClick={toggleOpen}\n            sx={{\n                ...COMPONENT_VARIANTS.card,\n                backgroundColor: 'hsla(0, 0%, 3%, 0.85)',\n                transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                border: 'none',\n            }}\n        >\n            <Box\n                sx={{\n                    maxWidth: '80vw',\n                    height: 'fit-content',\n                    maxHeight: '90vh',\n                    overflow: 'auto',\n                    mx: 'auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                    padding: 0,\n                    backgroundColor: 'hsl(0, 0%, 5%)',\n                    borderRadius: SPACING.borderRadius.lg,\n                    border: `1px solid ${COLORS.border.subtle}`,\n                }}\n            >\n                <Box\n                    sx={{\n                        pt: '1rem',\n                        pb: '1rem',\n                        px: '1.25rem',\n                        height: 'fit-content',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        minHeight: 0,\n                    }}\n                >\n                    <Grid\n                        container\n                        spacing={isMobile ? 1.5 : 2}\n                        sx={{ flex: 1, minHeight: 0 }}\n                    >\n                        {/* Top section: Instructions on left, animations on right */}\n                        <Grid\n                            container\n                            size={12}\n                            spacing={2}\n                            sx={{\n                                flex: 1,\n                                minHeight: 0,\n                                maxWidth: {\n                                    xs: '100%',\n                                    lg: SPACING.maxWidth.lg,\n                                },\n                                mx: 'auto',\n                            }}\n                        >\n                            {/* Left half: Algorithm instructions */}\n                            <Grid\n                                size={{ xs: 12, lg: isMobile ? 12 : 6 }}\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    height: isLargeScreen ? '100%' : 'auto',\n                                }}\n                            >\n                                <Box sx={{ flex: 1, overflow: 'auto' }}>\n                                    <GlassCard\n                                        sx={{\n                                            height: !isLargeScreen\n                                                ? '100%'\n                                                : 'auto',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            transition:\n                                                'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                        }}\n                                    >\n                                        <Typography\n                                            variant=\"h5\"\n                                            gutterBottom\n                                            sx={{\n                                                color: COLORS.text.primary,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                mb: 2,\n                                                textAlign: isMobile\n                                                    ? 'center'\n                                                    : 'left',\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.h2,\n                                                lineHeight: 1.4,\n                                                letterSpacing: '0',\n                                            }}\n                                        >\n                                            Chasing Lights Algorithm\n                                        </Typography>\n                                        {/* Step 1 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <KeyboardArrowDown\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase to Bottom\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Turn off rows from top to bottom\n                                                by clicking lights in each row\n                                                to eliminate all lights above\n                                                the bottom row.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 2 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Calculate\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .amber,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Use the Calculator\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Enter the remaining lights\n                                                pattern in the bottom row using\n                                                the interactive calculator\n                                                below.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 3 */}\n                                        <Box sx={{ mb: 1 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Replay\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .green,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase Again\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Apply the calculated solution\n                                                pattern to the top row, then\n                                                chase downward to solve the\n                                                entire puzzle.\n                                            </Typography>\n                                        </Box>\n                                    </GlassCard>\n                                </Box>\n                            </Grid>\n\n                            {/* Right half: Animations */}\n                            {!isLargeScreen && (\n                                <Grid\n                                    size={{ xs: 12, lg: 6 }}\n                                    sx={{\n                                        ...COMPONENT_VARIANTS.flexCenter,\n                                    }}\n                                >\n                                    <GlassCard\n                                        sx={{\n                                            width: '100%',\n                                            height: '100%',\n                                            ...COMPONENT_VARIANTS.flexCenter,\n                                            transition:\n                                                'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                        }}\n                                    >\n                                        <Example\n                                            dims={3}\n                                            size={size * 0.6}\n                                            start={[1, 3, 8]}\n                                            palette={palette}\n                                        />\n                                    </GlassCard>\n                                </Grid>\n                            )}\n                        </Grid>\n\n                        {/* Bottom section: Lights Out Calculator (full width) */}\n                        <Grid container size={12} spacing={2}>\n                            <Grid size={12}>\n                                <GlassCard\n                                    sx={{\n                                        textAlign: 'center',\n                                        paddingBottom: '2rem',\n                                    }}\n                                >\n                                    <Typography\n                                        variant=\"h6\"\n                                        sx={{\n                                            color: COLORS.text.primary,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            lineHeight: 1.4,\n                                            letterSpacing: '0',\n                                            mb: 2,\n                                        }}\n                                    >\n                                        Interactive Calculator\n                                    </Typography>\n\n                                    {/* Input Pattern */}\n                                    <Box sx={{ mb: 2 }}>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={inputProps}\n                                        />\n                                    </Box>\n\n                                    {/* Solution Pattern */}\n                                    <Box>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={outputProps}\n                                        />\n                                    </Box>\n                                </GlassCard>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Backdrop>\n    );\n}\n","import { InfoRounded, CircleRounded } from '../../components/icons';\nimport { useMemo, useEffect, useReducer } from 'react';\nimport { Grid } from '../../components/mui';\n\nimport { Controls, TooltipButton } from '../../helpers';\nimport { Board, useHandler, usePalette } from '../Board';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../../config/constants';\nimport { COLORS } from '../../config/theme';\nimport { getGrid, handleBoard } from './boardHandlers';\nimport { useWindow, useMobile } from '../../hooks';\nimport { convertPixels } from '../../calculate';\nimport Info from './Info';\n\nfunction getFrontProps(getters, dispatch) {\n    const { getColor, getBorder } = getters;\n\n    const flipAdj = (row, col) => {\n        dispatch({\n            type: 'adjacent',\n            row,\n            col,\n        });\n    };\n\n    return (row, col) => {\n        const style = getBorder(row, col);\n        const { front, back } = getColor(row, col);\n\n        return {\n            onClick: () => flipAdj(row, col),\n            children: <CircleRounded />,\n            backgroundColor: front,\n            color: front,\n            style,\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n        };\n    };\n}\n\nexport default function LightsOut() {\n    const { height, width } = useWindow();\n    const mobile = useMobile('sm');\n    const size = mobile\n        ? GAME_CONSTANTS.gridSizes.mobile\n        : GAME_CONSTANTS.gridSizes.desktop;\n\n    let { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    rows -= 1;\n    cols -= 1;\n\n    if (mobile) rows -= 2;\n\n    const initial = {\n        grid: getGrid(rows, cols),\n        score: 0,\n        rows,\n        cols,\n    };\n\n    const [state, dispatch] = useReducer(handleBoard, initial);\n\n    const [open, toggleOpen] = useReducer(open => !open, false);\n\n    const palette = usePalette(state.score);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.lightsOut;\n    }, []);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            newRows: rows,\n            newCols: cols,\n        });\n    }, [rows, cols]);\n\n    const getters = useHandler(state, palette);\n\n    const frontProps = getFrontProps(getters, dispatch);\n\n    const backProps = (row, col) => {\n        return {\n            backgroundColor: getters.getFiller(row, col),\n        };\n    };\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            sx={{\n                background: COLORS.surface.background,\n                position: 'relative',\n            }}\n        >\n            <Board\n                size={size}\n                rows={rows}\n                cols={cols}\n                frontProps={frontProps}\n                backProps={backProps}\n            />\n            <Controls\n                handler={() => {}} // No directional controls for Lights Out\n                onRandom={() => dispatch({ type: 'random' })}\n                size=\"inherit\"\n            >\n                <TooltipButton\n                    title=\"Info\"\n                    Icon={InfoRounded}\n                    onClick={toggleOpen}\n                />\n            </Controls>\n            <Info\n                rows={rows}\n                cols={cols}\n                size={size}\n                open={open}\n                palette={palette}\n                score={state.score}\n                toggleOpen={toggleOpen}\n            />\n        </Grid>\n    );\n}\n","import React from 'react';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Button,\n    Grid,\n    ToggleButton,\n    ToggleButtonGroup,\n} from './mui';\nimport { GitHub, HomeRounded as Home, Refresh, SettingsRounded } from './icons';\nimport { CHART_DIMENSIONS, CHART_FORMATTING } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip as RechartsTooltip,\n    ResponsiveContainer,\n} from 'recharts';\n\n/**\n * Reusable ResearchDemo component for consistent research project visualizations\n * Provides standardized layout, charts, and interactive controls for research demos\n */\nconst ResearchDemo = ({\n    // Basic info\n    title,\n    subtitle,\n    githubUrl,\n\n    // Chart configuration\n    chartData = [],\n    chartConfig = {\n        type: 'line',\n        lines: [],\n        xAxisKey: 'x',\n        yAxisFormatter: value => value.toFixed(2),\n        yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        // Dual Y-axis support\n        dualYAxis: false,\n        rightYAxisFormatter: value => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: value => `Round ${value}`,\n        tooltipFormatter: (value, name) => [value.toFixed(2), name],\n    },\n\n    // View types (for switching between different chart views)\n    viewTypes = [],\n    currentViewType = 'default',\n    onViewTypeChange = () => {},\n\n    // Interactive controls\n    controls = [],\n\n    // Loading state\n    loading = false,\n    loadingMessage = 'Loading data...',\n\n    // Reset functionality\n    onReset = null,\n    resetLabel = 'Reset',\n\n    // Custom chart title\n    chartTitle = null,\n}) => {\n    // Get current chart data based on view type\n    const getCurrentChartData = () => {\n        if (!chartData || chartData.length === 0) return [];\n\n        // If no view types, return data as-is\n        if (!viewTypes.length) return chartData;\n\n        // Find current view type configuration\n        const currentView = viewTypes.find(\n            view => view.key === currentViewType\n        );\n        if (!currentView || !currentView.dataProcessor) return chartData;\n\n        // Process data using the view's data processor\n        return currentView.dataProcessor(chartData);\n    };\n\n    const currentData = getCurrentChartData();\n    const currentChartConfig =\n        viewTypes.find(view => view.key === currentViewType)?.chartConfig ||\n        chartConfig;\n\n    return (\n        <Grid\n            container={true}\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: SPACING.padding.md,\n                paddingBottom: {\n                    xs: SPACING.padding.md,\n                    md: 0,\n                },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -1,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                size={12}\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: 0,\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: '0 2rem',\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {/* Header */}\n                    <Grid\n                        container={true}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                        sx={{ marginBottom: 2 }}\n                    >\n                        <Grid size=\"auto\">\n                            <Typography\n                                variant=\"h1\"\n                                sx={{\n                                    color: COLORS.text.primary,\n                                    fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                    fontSize: TYPOGRAPHY.fontSize.h2,\n                                }}\n                            >\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid size=\"auto\" sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={githubUrl}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component=\"a\" href=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n\n                    <Typography\n                        variant=\"h5\"\n                        sx={{\n                            color: COLORS.text.secondary,\n                            marginTop: 2,\n                            marginBottom: 4,\n                            fontWeight: TYPOGRAPHY.fontWeight.normal,\n                            fontSize: TYPOGRAPHY.fontSize.subheading,\n                        }}\n                    >\n                        {subtitle}\n                    </Typography>\n\n                    {/* Main Chart */}\n                    <GlassCard\n                        sx={{\n                            marginBottom: 3,\n                            width: '100%',\n                            boxSizing: 'border-box',\n                            overflow: 'hidden',\n                        }}\n                    >\n                        <Typography\n                            variant=\"subtitle1\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 2,\n                                textAlign: 'center',\n                                fontWeight: TYPOGRAPHY.fontWeight.medium,\n                                fontSize: TYPOGRAPHY.fontSize.subheading,\n                            }}\n                        >\n                            {chartTitle ||\n                                (viewTypes.length\n                                    ? viewTypes.find(\n                                          view => view.key === currentViewType\n                                      )?.chartTitle || 'Data Visualization'\n                                    : 'Data Visualization')}\n                        </Typography>\n                        <Box sx={{ height: CHART_DIMENSIONS.height }}>\n                            {loading ? (\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        height: '100%',\n                                        color: COLORS.text.secondary,\n                                    }}\n                                >\n                                    <Typography>{loadingMessage}</Typography>\n                                </Box>\n                            ) : (\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                    <LineChart data={currentData}>\n                                        <CartesianGrid\n                                            strokeDasharray={\n                                                CHART_FORMATTING.lines\n                                                    .strokeDashArray\n                                            }\n                                            stroke={COLORS.border.subtle}\n                                        />\n                                        <XAxis\n                                            dataKey={\n                                                currentChartConfig.xAxisKey\n                                            }\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                        />\n                                        <YAxis\n                                            yAxisId=\"left\"\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                            tickFormatter={\n                                                currentChartConfig.yAxisFormatter\n                                            }\n                                            domain={\n                                                currentChartConfig.yAxisDomain\n                                            }\n                                        />\n                                        {currentChartConfig.dualYAxis && (\n                                            <YAxis\n                                                yAxisId=\"right\"\n                                                orientation=\"right\"\n                                                stroke={COLORS.text.secondary}\n                                                tick={{\n                                                    fill: COLORS.text.secondary,\n                                                }}\n                                                tickFormatter={\n                                                    currentChartConfig.rightYAxisFormatter\n                                                }\n                                                domain={\n                                                    currentChartConfig.rightYAxisDomain\n                                                }\n                                            />\n                                        )}\n                                        <RechartsTooltip\n                                            contentStyle={{\n                                                backgroundColor:\n                                                    'hsla(0, 0%, 5%, 0.95)',\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                color: COLORS.text.primary,\n                                            }}\n                                            labelFormatter={\n                                                currentChartConfig.tooltipLabelFormatter\n                                            }\n                                            formatter={\n                                                currentChartConfig.tooltipFormatter\n                                            }\n                                        />\n                                        {currentChartConfig.lines.map(\n                                            (line, index) => (\n                                                <Line\n                                                    key={line.dataKey}\n                                                    yAxisId={\n                                                        line.yAxisId || 'left'\n                                                    }\n                                                    type=\"monotone\"\n                                                    dataKey={line.dataKey}\n                                                    stroke={line.color}\n                                                    strokeWidth={\n                                                        CHART_DIMENSIONS.strokeWidth\n                                                    }\n                                                    name={line.name}\n                                                    dot={{\n                                                        fill: line.color,\n                                                        strokeWidth:\n                                                            CHART_FORMATTING\n                                                                .lines\n                                                                .defaultStrokeWidth,\n                                                        r: CHART_DIMENSIONS.dotRadius,\n                                                    }}\n                                                />\n                                            )\n                                        )}\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            )}\n                        </Box>\n                    </GlassCard>\n\n                    {/* View Type Selection (if multiple view types) */}\n                    {viewTypes.length > 1 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 3,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Chart Views\n                                    </Typography>\n                                </Box>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    display: 'grid',\n                                    gridTemplateColumns: {\n                                        xs: 'repeat(2, minmax(0, 1fr))',\n                                        md: `repeat(${Math.min(viewTypes.length, 4)}, 1fr)`,\n                                    },\n                                    gap: 1.5,\n                                    width: '100%',\n                                    margin: 0,\n                                }}\n                            >\n                                {viewTypes.map(viewType => {\n                                    const IconComponent = viewType.icon;\n                                    return (\n                                        <Button\n                                            key={viewType.key}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            startIcon={\n                                                IconComponent ? (\n                                                    <IconComponent />\n                                                ) : null\n                                            }\n                                            onClick={() =>\n                                                onViewTypeChange(viewType.key)\n                                            }\n                                            sx={{\n                                                width: '100%',\n                                                color:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.text.primary\n                                                        : COLORS.text.secondary,\n                                                backgroundColor:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.primary.main\n                                                        : 'transparent',\n                                                borderColor:\n                                                    COLORS.border.subtle,\n                                                borderWidth: '1px',\n                                                borderStyle: 'solid',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                minHeight: '36px',\n                                                padding: '0.4rem 0.8rem',\n                                                fontSize: '0.8rem',\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .medium,\n                                                transition:\n                                                    'transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease',\n                                                '&:hover': {\n                                                    backgroundColor:\n                                                        currentViewType ===\n                                                        viewType.key\n                                                            ? COLORS.primary\n                                                                  .dark\n                                                            : COLORS.interactive\n                                                                  .hover,\n                                                    transform:\n                                                        'translateY(-1px)',\n                                                    boxShadow:\n                                                        '0 4px 8px rgba(0,0,0,0.1)',\n                                                },\n                                            }}\n                                        >\n                                            {viewType.label}\n                                        </Button>\n                                    );\n                                })}\n                            </Box>\n                        </GlassCard>\n                    )}\n\n                    {/* Interactive Controls */}\n                    {controls.length > 0 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 0,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Parameters\n                                    </Typography>\n                                </Box>\n                                {onReset && (\n                                    <Button\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        startIcon={<Refresh />}\n                                        onClick={onReset}\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            borderColor: COLORS.border.subtle,\n                                            borderRadius:\n                                                SPACING.borderRadius.lg,\n                                            padding: '0.25rem 1rem',\n                                            fontSize: '0.875rem',\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                            transition: 'all 0.2s ease-in-out',\n                                            '&:hover': {\n                                                borderColor:\n                                                    COLORS.primary.main,\n                                                backgroundColor:\n                                                    COLORS.interactive.hover,\n                                                transform: 'translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                            },\n                                        }}\n                                    >\n                                        {resetLabel}\n                                    </Button>\n                                )}\n                            </Box>\n\n                            <Grid container={true} spacing={2.5}>\n                                {controls.map((control, index) => (\n                                    <Grid key={index} size={{ xs: 12, md: 4 }}>\n                                        <Box\n                                            sx={{\n                                                marginBottom: 0,\n                                                padding: '1rem',\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.02)',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    gap: 1,\n                                                    mb: 2,\n                                                }}\n                                            >\n                                                {control.icon && (\n                                                    <control.icon\n                                                        sx={{\n                                                            color:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .light,\n                                                            fontSize: '1.1rem',\n                                                        }}\n                                                    />\n                                                )}\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    sx={{\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                    }}\n                                                >\n                                                    {control.label}\n                                                </Typography>\n                                            </Box>\n                                            <ToggleButtonGroup\n                                                value={control.value}\n                                                exclusive\n                                                onChange={(e, newValue) => {\n                                                    if (newValue !== null) {\n                                                        control.onChange(\n                                                            newValue\n                                                        );\n                                                    }\n                                                }}\n                                                size=\"small\"\n                                                sx={{\n                                                    width: '100%',\n                                                    borderRadius:\n                                                        SPACING.borderRadius.lg,\n                                                    overflow: 'hidden',\n                                                    border: `1px solid ${COLORS.border.subtle}`,\n                                                    '& .MuiToggleButtonGroup-grouped':\n                                                        {\n                                                            margin: 0,\n                                                            border: 0,\n                                                            borderRadius: 0,\n                                                            '&:not(:first-of-type)':\n                                                                {\n                                                                    borderLeft: `1px solid ${COLORS.border.subtle}`,\n                                                                },\n                                                        },\n                                                    '& .MuiToggleButton-root': {\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        borderColor:\n                                                            COLORS.border\n                                                                .subtle,\n                                                        padding:\n                                                            '0.6rem 0.8rem',\n                                                        flex: 1,\n                                                        fontSize: '0.85rem',\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        borderRadius: 0,\n                                                        transition:\n                                                            'all 0.2s ease-in-out',\n                                                        '&.Mui-selected': {\n                                                            backgroundColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            color: COLORS.text\n                                                                .primary,\n                                                            borderColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            '&:hover': {\n                                                                // Use a darker shade on hover for visual feedback\n                                                                backgroundColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                borderColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                transform:\n                                                                    'translateY(-1px)',\n                                                                boxShadow:\n                                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                                            },\n                                                        },\n                                                        '&:hover': {\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .hover,\n                                                            transform:\n                                                                'translateY(-1px)',\n                                                        },\n                                                    },\n                                                }}\n                                            >\n                                                {control.options.map(option => (\n                                                    <ToggleButton\n                                                        key={option.value}\n                                                        value={option.value}\n                                                    >\n                                                        {option.label}\n                                                    </ToggleButton>\n                                                ))}\n                                            </ToggleButtonGroup>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </GlassCard>\n                    )}\n                </Box>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ResearchDemo;\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChartRounded,\n    TrendingUpRounded,\n    ShowChartRounded,\n    AnalyticsRounded,\n} from '../components/icons';\nimport {\n    URLS,\n    PAGE_TITLES,\n    ZSHARP_DEFAULTS,\n    PERCENTAGE,\n} from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport ResearchDemo from '../components/ResearchDemo';\n\n// Load real ZSharp experiment data\nconst loadRealZSharpData = async () => {\n    try {\n        // Check if browser supports DecompressionStream\n        if (typeof DecompressionStream === 'undefined') {\n            throw new Error('DecompressionStream not supported');\n        }\n\n        const response = await fetch('/zsharp_data.json.gz');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump() {\n                        return reader.read().then(({ done, value }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const realData = JSON.parse(decompressedData);\n\n        // Convert real results to chart data format with per-epoch data\n        const data = [];\n        const sgdAccuracies = realData['SGD Baseline']?.train_accuracies || [];\n        const zsharpAccuracies = realData['ZSharp']?.train_accuracies || [];\n        const sgdLosses = realData['SGD Baseline']?.train_losses || [];\n        const zsharpLosses = realData['ZSharp']?.train_losses || [];\n\n        const maxEpochs = Math.max(\n            sgdAccuracies.length,\n            zsharpAccuracies.length\n        );\n\n        for (let i = 0; i < maxEpochs; i++) {\n            data.push({\n                epoch: i + 1,\n                sgd: (sgdAccuracies[i] || 0) / PERCENTAGE.divisor, // Convert to 0-1 range\n                zsharp: (zsharpAccuracies[i] || 0) / PERCENTAGE.divisor,\n                sgdLoss: sgdLosses[i] || 0,\n                zsharpLoss: zsharpLosses[i] || 0,\n            });\n        }\n\n        return data;\n    } catch (error) {\n        // Silently fall back to generated data if real data fails to load\n        return generateFallbackData();\n    }\n};\n\n// Fallback data generation if real data fails to load\nconst generateFallbackData = () => {\n    const data = [];\n    for (let i = 0; i <= ZSHARP_DEFAULTS.maxEpochs; i++) {\n        const sgdAccuracy =\n            ZSHARP_DEFAULTS.baseAccuracy +\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.maxAccuracy - ZSHARP_DEFAULTS.baseAccuracy);\n        const zsharpAccuracy = sgdAccuracy + ZSHARP_DEFAULTS.improvement;\n        const sgdLoss =\n            ZSHARP_DEFAULTS.baseLoss -\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.baseLoss - ZSHARP_DEFAULTS.minLoss);\n        const zsharpLoss = sgdLoss - ZSHARP_DEFAULTS.lossReduction;\n\n        data.push({\n            epoch: i + 1,\n            sgd: sgdAccuracy,\n            zsharp: zsharpAccuracy,\n            sgdLoss: sgdLoss,\n            zsharpLoss: zsharpLoss,\n        });\n    }\n    return data;\n};\n\nconst ZSharp = () => {\n    const [chartData, setChartData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [viewType, setViewType] = useState('accuracy');\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.zsharp;\n\n        // Load real data on component mount\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealZSharpData();\n                setChartData(data);\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error('Error loading ZSharp data in component:', error);\n                setChartData(generateFallbackData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    // Define view types for the ResearchDemo component\n    const viewTypes = [\n        {\n            key: 'accuracy',\n            label: 'Accuracy',\n            icon: BarChartRounded,\n            chartTitle: 'Performance Comparison',\n            dataProcessor: data => data,\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                    name,\n                ],\n                lines: [\n                    { dataKey: 'sgd', name: 'SGD', color: COLORS.primary.main },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'loss',\n            label: 'Loss',\n            icon: TrendingUpRounded,\n            chartTitle: 'Loss Evaluation',\n            dataProcessor: data =>\n                data.map(point => ({\n                    epoch: point.epoch,\n                    sgd: point.sgdLoss,\n                    zsharp: point.zsharpLoss,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value => value.toFixed(3),\n                yAxisDomain: ['dataMin - 0.1', 'dataMax + 0.1'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [value.toFixed(3), name],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Loss',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Loss',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'learning_curve',\n            label: 'Learning Gap',\n            icon: ShowChartRounded,\n            chartTitle: 'Learning Progress',\n            dataProcessor: data =>\n                data.map(point => ({\n                    epoch: point.epoch,\n                    gap: point.zsharp - point.sgd,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(2)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'gap',\n                        name: 'Accuracy Gap',\n                        color: COLORS.data.amber,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'convergence',\n            label: 'Convergence',\n            icon: AnalyticsRounded,\n            chartTitle: 'Convergence Analysis',\n            dataProcessor: data =>\n                data.map((point, index) => {\n                    if (index === 0)\n                        return { epoch: point.epoch, sgd: 0, zsharp: 0 };\n                    const prevPoint = data[index - 1];\n                    return {\n                        epoch: point.epoch,\n                        sgd: point.sgd - prevPoint.sgd,\n                        zsharp: point.zsharp - prevPoint.zsharp,\n                    };\n                }),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: value =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: value => `Epoch ${value}`,\n                tooltipFormatter: (value, name) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(3)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Rate',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Rate',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n    ];\n\n    return (\n        <ResearchDemo\n            title=\"ZSharp\"\n            subtitle=\"Neural Network Optimization Research\"\n            githubUrl={URLS.zsharpRepo}\n            chartData={chartData}\n            viewTypes={viewTypes}\n            currentViewType={viewType}\n            onViewTypeChange={setViewType}\n            loading={loading}\n            loadingMessage=\"Loading real experiment data...\"\n        />\n    );\n};\n\nexport default ZSharp;\n","import React, { useState, useEffect } from 'react';\nimport { URLS, PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport {\n    BusinessRounded,\n    TrendingUpRounded,\n    AttachMoneyRounded,\n} from '../components/icons';\nimport ResearchDemo from '../components/ResearchDemo';\n\n/**\n * Loads real simulation matrix data from compressed JSON file\n * Includes comprehensive error handling and fallback mechanisms\n *\n * @returns {Promise<Array>} Matrix data or empty array on error\n */\nconst loadRealSimulationMatrix = async () => {\n    try {\n        const response = await fetch('/oligopoly_data.json.gz');\n        if (!response.ok) {\n            throw new Error(\n                `HTTP error! status: ${response.status} - Failed to load Oligopoly data`\n            );\n        }\n\n        // Check if browser supports DecompressionStream\n        if (typeof DecompressionStream === 'undefined') {\n            throw new Error(\n                'DecompressionStream not supported in this browser'\n            );\n        }\n\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump() {\n                        return reader.read().then(({ done, value }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const matrixData = JSON.parse(decompressedData);\n\n        // Validate data structure\n        if (!Array.isArray(matrixData)) {\n            throw new Error('Invalid data format: expected array');\n        }\n\n        return matrixData;\n    } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error loading Oligopoly data:', error);\n        return [];\n    }\n};\n\n// Filter matrix data based on current parameters\nconst filterMatrixData = (\n    matrixData,\n    numFirms,\n    modelType,\n    demandElasticity,\n    basePrice,\n    collusionEnabled\n) => {\n    if (!matrixData || matrixData.length === 0) {\n        return generateFallbackOligopolyData();\n    }\n\n    // Find exact matching parameters\n    const filtered = matrixData.filter(\n        item =>\n            item.num_firms === numFirms &&\n            item.model_type === modelType &&\n            item.demand_elasticity === demandElasticity &&\n            item.base_price === basePrice &&\n            item.collusion_enabled === collusionEnabled\n    );\n\n    if (filtered.length === 0) {\n        // Fallback to closest match by num_firms and model_type\n        const closest = matrixData.filter(\n            item => item.num_firms === numFirms && item.model_type === modelType\n        );\n        // Sort by round to ensure proper order\n        const sorted = closest.sort((a, b) => a.round - b.round);\n        return sorted.slice(0, GAME_CONSTANTS.oligopoly.maxRounds);\n    }\n\n    // Sort by round to ensure proper order\n    const sorted = filtered.sort((a, b) => a.round - b.round);\n    return sorted.slice(0, 15);\n};\n\n// Fallback data generation if real data fails to load\nconst generateFallbackOligopolyData = () => {\n    const data = [];\n    for (let i = 1; i <= GAME_CONSTANTS.oligopoly.maxRounds; i++) {\n        const sim = GAME_CONSTANTS.oligopoly.simulation;\n        data.push({\n            round: i,\n            price:\n                sim.fallbackPrice +\n                Math.sin(i * sim.priceFrequency) * sim.priceAmplitude,\n            hhi:\n                sim.fallbackHHI +\n                Math.sin(i * sim.hhiFrequency) * sim.hhiAmplitude,\n            collusion: i > sim.collusionStart && i < sim.collusionEnd,\n        });\n    }\n    return data;\n};\n\nconst Oligopoly = () => {\n    const [numFirms, setNumFirms] = useState(\n        GAME_CONSTANTS.oligopoly.defaultFirms\n    );\n    const [demandElasticity, setDemandElasticity] = useState(\n        GAME_CONSTANTS.oligopoly.defaultElasticity\n    );\n    const [basePrice, setBasePrice] = useState(\n        GAME_CONSTANTS.oligopoly.defaultBasePrice\n    );\n    const [marketData, setMarketData] = useState([]);\n    const [matrixData, setMatrixData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Fixed parameters - Cournot model with no collusion\n    const modelType = GAME_CONSTANTS.modelTypes.cournot;\n    const collusionEnabled = false;\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.oligopoly;\n\n        // Load real simulation matrix on component mount\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealSimulationMatrix();\n                setMatrixData(data);\n                // Set initial data\n                const initialData = filterMatrixData(\n                    data,\n                    numFirms,\n                    modelType,\n                    demandElasticity,\n                    basePrice,\n                    collusionEnabled\n                );\n                setMarketData(initialData);\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(\n                    'Error loading Oligopoly data in component:',\n                    error\n                );\n                setMarketData(generateFallbackOligopolyData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, [numFirms, demandElasticity, basePrice, collusionEnabled, modelType]);\n\n    // Update data when parameters change\n    useEffect(() => {\n        if (matrixData.length > 0) {\n            const filteredData = filterMatrixData(\n                matrixData,\n                numFirms,\n                modelType,\n                demandElasticity,\n                basePrice,\n                collusionEnabled\n            );\n            setMarketData(filteredData);\n        }\n    }, [\n        numFirms,\n        demandElasticity,\n        basePrice,\n        matrixData,\n        modelType,\n        collusionEnabled,\n    ]);\n\n    const resetToDefaults = () => {\n        setNumFirms(GAME_CONSTANTS.oligopoly.defaultFirms);\n        setDemandElasticity(GAME_CONSTANTS.oligopoly.defaultElasticity);\n        setBasePrice(GAME_CONSTANTS.oligopoly.defaultBasePrice);\n    };\n\n    // Define controls for the ResearchDemo component\n    const controls = [\n        {\n            label: 'Number of Firms',\n            icon: BusinessRounded,\n            color: COLORS.primary.main,\n            value: numFirms,\n            onChange: setNumFirms,\n            options: [\n                { value: 2, label: '2' },\n                { value: 3, label: '3' },\n                { value: 4, label: '4' },\n                { value: 5, label: '5' },\n            ],\n        },\n        {\n            label: 'Demand Elasticity',\n            icon: TrendingUpRounded,\n            color: COLORS.data.green,\n            value: demandElasticity,\n            onChange: setDemandElasticity,\n            options: [\n                { value: 1.5, label: '1.5' },\n                { value: 2.0, label: '2.0' },\n                { value: 2.5, label: '2.5' },\n            ],\n        },\n        {\n            label: 'Base Price',\n            icon: AttachMoneyRounded,\n            color: COLORS.data.amber,\n            value: basePrice,\n            onChange: setBasePrice,\n            options: [\n                { value: 30, label: '$30' },\n                { value: 40, label: '$40' },\n                { value: 50, label: '$50' },\n            ],\n        },\n    ];\n\n    // Define chart configuration\n    const chartConfig = {\n        type: 'line',\n        xAxisKey: 'round',\n        yAxisFormatter: value => `$${value.toFixed(2)}`,\n        yAxisDomain: ['dataMin - 5', 'dataMax + 5'],\n        // Dual Y-axis support\n        dualYAxis: true,\n        rightYAxisFormatter: value => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: value => `Round ${value}`,\n        tooltipFormatter: (value, name) => [\n            name === 'Market Price' ? `$${value.toFixed(2)}` : value.toFixed(2),\n            name,\n        ],\n        lines: [\n            {\n                dataKey: 'price',\n                name: 'Market Price',\n                color: COLORS.primary.main,\n                yAxisId: 'left',\n            },\n            {\n                dataKey: 'hhi',\n                name: 'HHI Concentration',\n                color: COLORS.data.amber,\n                yAxisId: 'right',\n            },\n        ],\n    };\n\n    return (\n        <ResearchDemo\n            title=\"Oligopoly\"\n            subtitle=\"Agent-Based Economic Competition Analysis\"\n            githubUrl={URLS.oligopolyRepo}\n            chartData={marketData}\n            chartConfig={chartConfig}\n            chartTitle=\"Market Dynamics\"\n            controls={controls}\n            loading={loading}\n            loadingMessage=\"Loading Cournot simulation data...\"\n            onReset={resetToDefaults}\n            resetLabel=\"Reset\"\n        />\n    );\n};\n\nexport default Oligopoly;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Typography, Box, IconButton, Fade } from '../components/mui';\nimport {\n    GitHub,\n    HomeRounded as Home,\n    GridView,\n    TextFields,\n} from '../components/icons';\nimport { URLS, PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\n\nexport default function Interpreters() {\n    useEffect(() => {\n        document.title = PAGE_TITLES.interpreters;\n    }, []);\n\n    const interpreters = [\n        {\n            name: 'Stun Step',\n            path: '/Stun_Step',\n            description:\n                'Ultra-minimal tape-based language with only four commands for basic computation',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'Suffolk',\n            path: '/Suffolk',\n            description:\n                'Register-based language with input/output capabilities and looping behavior',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'WII2D',\n            path: '/WII2D',\n            description:\n                '2D grid language with directional movement, arithmetic operations, and teleportation',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n        {\n            name: 'Back',\n            path: '/Back',\n            description:\n                'Grid-based language with mirror reflections, tape manipulation, and conditional logic',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n    ];\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '1rem', md: '2rem' },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                sx={{\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: `0 ${SPACING.padding.md}`,\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {/* Header */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        sx={{\n                            marginBottom: 4,\n                        }}\n                    >\n                        <Typography\n                            variant=\"h4\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.subheading,\n                                    md: TYPOGRAPHY.fontSize.h2,\n                                },\n                            }}\n                        >\n                            Esolang Interpreters\n                        </Typography>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={URLS.esolangsRepo}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component={Link} to=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                        </Box>\n                    </Grid>\n\n                    {/* Interpreters Grid */}\n                    <Box\n                        sx={{\n                            display: 'grid',\n                            gridTemplateColumns: {\n                                xs: '1fr',\n                                md: '1fr 1fr',\n                            },\n                            gap: { xs: 2, md: 3 },\n                            marginTop: 4,\n                        }}\n                    >\n                        {interpreters.map((interpreter, index) => (\n                            <Fade\n                                in\n                                timeout={800 + index * 150}\n                                key={interpreter.name}\n                            >\n                                <Box\n                                    component={Link}\n                                    to={interpreter.path}\n                                    sx={{\n                                        textDecoration: 'none',\n                                        position: 'relative',\n                                        overflow: 'hidden',\n                                        height: '100%',\n                                        display: 'flex',\n                                        ...COMPONENT_VARIANTS.interactiveCard,\n                                        '&:hover .glass-card': {\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                        },\n                                    }}\n                                >\n                                    <GlassCard sx={{ border: 'none' }}>\n                                        <Box\n                                            sx={{\n                                                ...COMPONENT_VARIANTS.flexCenter,\n                                                gap: 1,\n                                                marginBottom: 2,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                }}\n                                            >\n                                                {interpreter.icon}\n                                            </Box>\n                                            <Typography\n                                                variant=\"h6\"\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                }}\n                                            >\n                                                {interpreter.name}\n                                            </Typography>\n                                        </Box>\n                                        <Typography\n                                            variant=\"body2\"\n                                            sx={{\n                                                color: COLORS.text.secondary,\n                                                wordWrap: 'break-word',\n                                                overflowWrap: 'break-word',\n                                                lineHeight: 1.5,\n                                            }}\n                                        >\n                                            {interpreter.description}\n                                        </Typography>\n                                    </GlassCard>\n                                </Box>\n                            </Fade>\n                        ))}\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n","import { ROUTES } from '../config/constants';\n\nexport { default as Home } from './Home';\nexport { default as Error } from './Error';\nexport { default as Snake } from './Snake';\nexport { default as Lights_Out } from './Lights/LightsOut';\nexport { default as ZSharp } from './ZSharp';\nexport { default as Oligopoly } from './Oligopoly';\nexport { default as Interpreters } from './Interpreters';\n\nexport const pages = ROUTES.pages;\n","import { useMediaQuery } from './components/mui';\nimport { PROCESSING } from './config/constants';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction getWindow() {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return { width, height };\n}\n\nfunction getContainer(container) {\n    if (!container || !container.current) return getWindow();\n\n    const { offsetHeight: height, offsetWidth: width } = container.current;\n\n    return { width, height };\n}\n\nfunction useSize(getSize) {\n    const [size, setSize] = useState(getSize());\n\n    const { addEventListener: addEvent, removeEventListener: removeEvent } =\n        window;\n\n    useEffect(() => {\n        function handleResize() {\n            setSize(getSize());\n        }\n\n        addEvent('resize', handleResize);\n\n        return () => removeEvent('resize', handleResize);\n    }, [getSize, addEvent, removeEvent]);\n\n    return { size, setSize };\n}\n\nexport function useContainer(container) {\n    const wrapper = () => getContainer(container);\n\n    const { size, setSize } = useSize(wrapper);\n\n    useEffect(() => {\n        const newSize = getContainer(container);\n\n        setSize(newSize);\n    }, [container, setSize]);\n\n    return size;\n}\n\nexport function useWindow() {\n    const { size } = useSize(getWindow);\n\n    return size;\n}\n\nexport function useMobile(size) {\n    return useMediaQuery(theme => theme.breakpoints.down(size));\n}\n\n// Global timer reference to handle React StrictMode multiple instances\nlet globalTimer = null;\nlet globalRepeat = null;\nlet globalSpeed = 200;\n\nexport function useTimer(delay) {\n    const repeat = useRef(null);\n    const speed = useRef(delay);\n\n    const create = useCallback(({ repeat: newRepeat, speed: newSpeed }) => {\n        // Clear any existing timer first\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n        }\n\n        globalRepeat = newRepeat || globalRepeat;\n        globalSpeed = newSpeed || globalSpeed;\n        repeat.current = globalRepeat;\n        speed.current = globalSpeed;\n\n        globalTimer = setInterval(globalRepeat, globalSpeed);\n    }, []);\n\n    const clear = useCallback(() => {\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n            globalTimer = null;\n        }\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (globalTimer !== null) {\n                clearInterval(globalTimer);\n                globalTimer = null;\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useKeys() {\n    const oldHandler = useRef(null);\n\n    const create = useCallback(handler => {\n        oldHandler.current = handler;\n\n        document.addEventListener('keydown', handler);\n    }, []);\n\n    const clear = useCallback(handler => {\n        handler ||= oldHandler.current;\n\n        document.removeEventListener('keydown', handler);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (oldHandler.current) {\n                document.removeEventListener('keydown', oldHandler.current);\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useCache(getState) {\n    const cache = useRef([]);\n    const index = useRef(0);\n    const processingRef = useRef(false);\n\n    return useCallback(\n        ({ type, payload }) => {\n            const states = cache.current;\n\n            switch (type) {\n                case 'next':\n                    // Prevent double processing in React StrictMode\n                    if (\n                        PROCESSING.doubleProcessingPrevention &&\n                        processingRef.current\n                    ) {\n                        return { ...states[index.current] };\n                    }\n\n                    if (PROCESSING.doubleProcessingPrevention) {\n                        processingRef.current = true;\n                    }\n\n                    const curr = index.current;\n\n                    if (curr + 1 === states.length) {\n                        const state = states[curr];\n                        const next = getState(state);\n\n                        if (next === state) {\n                            // No change, stay at current position\n                        } else {\n                            // Add new state and move to it\n                            states.push(next);\n                            index.current++;\n                        }\n                    } else {\n                        index.current++;\n                    }\n\n                    const result = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    if (PROCESSING.doubleProcessingPrevention) {\n                        setTimeout(() => {\n                            processingRef.current = false;\n                        }, PROCESSING.resetDelay);\n                    }\n\n                    return result;\n                case 'prev':\n                    // Prevent double processing in React StrictMode\n                    if (\n                        PROCESSING.doubleProcessingPrevention &&\n                        processingRef.current\n                    ) {\n                        return { ...states[index.current] };\n                    }\n\n                    if (PROCESSING.doubleProcessingPrevention) {\n                        processingRef.current = true;\n                    }\n\n                    if (index.current) index.current--;\n\n                    const prevResult = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    if (PROCESSING.doubleProcessingPrevention) {\n                        setTimeout(() => {\n                            processingRef.current = false;\n                        }, PROCESSING.resetDelay);\n                    }\n\n                    return prevResult;\n                case 'clear':\n                    cache.current = [{ ...payload }];\n                    index.current = 0;\n\n                    break;\n                default:\n                    break;\n            }\n\n            return payload;\n        },\n        [getState]\n    );\n}\n"],"names":["Section","_ref","children","id","paddingY","SPACING","padding","lg","paddingX","maxWidth","props","_objectWithoutProperties","_excluded","_jsx","Container","_objectSpread","sx","Box","margin","HeroContainer","_ref3","paddingBottom","_excluded3","flex","COMPONENT_VARIANTS","flexCenter","paddingTop","xs","sm","md","overflowX","PROJECT_CATEGORIES","research","title","icon","Psychology","color","COLORS","data","green","projects","ZSharp","path","description","technology","Oligopoly","games","GamepadRounded","primary","main","Snake","Lights_Out","tools","Code","amber","Interpreters","ProjectDropdown","Object","entries","map","categoryKey","category","IconComponent","_jsxs","marginBottom","display","alignItems","gap","position","content","bottom","left","right","height","backgroundColor","fontSize","opacity","Typography","fontWeight","textTransform","letterSpacing","fontFamily","_ref2","projectName","project","MenuItem","component","Link","to","borderRadius","minHeight","transition","flexDirection","transform","outline","ring","ringOffset","lineHeight","replace","MenuButton","anchor","setAnchor","useState","handleClick","event","currentTarget","clickHandler","handleClose","closeHandler","open","Boolean","define","value","undefined","TooltipButton","Icon","ViewModuleRounded","onClick","interactive","hover","Menu","anchorEl","disableAutoFocusItem","marginLeft","marginTop","width","backdropFilter","border","boxShadow","onClose","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","Home","useEffect","document","PAGE_TITLES","home","Grid","container","background","surface","boxSizing","top","zIndex","justifyContent","href","URLS","githubProfile","target","rel","GitHub","spacing","size","Fade","in","timeout","TYPOGRAPHY","body","semibold","text","bold","wordBreak","hyphens","PERSONAL_INFO","name","secondary","LocationOn","medium","location","flexWrap","element","getElementById","scrollIntoView","behavior","block","inline","selected","full","ANIMATIONS","cursor","ArrowForward","GlassCard","subheading","gridTemplateColumns","SKILLS","skill","index","ICON_MAP","Work","minWidth","overflow","presets","cardHover","whiteSpace","textOverflow","flexShrink","Button","variant","startIcon","textDecoration","endIcon","h2","textAlign","PUBLICATIONS","publication","url","interactiveCard","caption","OpenInNew","conference","PROJECTS","Error","error","concat","normal","HomeButton","getRandom","max","Math","floor","random","mapBoard","board","change","newBoard","cell","handleResize","state","rows","cols","head","next","length","reduceBoard","velocity","buffer","gridMove","exclude","pos","addNext","first","rest","handleAction","action","type","payload","getDirection","key","create","createTimer","useTimer","createKeys","useKeys","useWindow","GAME_CONSTANTS","snake","initialLength","segmentSize","randomMovesEnabled","setRandomMovesEnabled","randomMovesRef","useRef","showArrows","setShowArrows","useMemo","convertPixels","initial","initialVelocity","dispatch","useReducer","controlHandler","useCallback","controls","arrowPrefix","chooseColor","row","col","dark","repeat","wrapDispatch","current","CustomGrid","cellProps","Controls","handler","onRandom","randomEnabled","hide","ArrowsButton","show","setShow","Board","frontProps","backProps","Centered","space","style","useGetters","getTile","palette","getColor","front","back","getBorder","self","upCheck","downCheck","leftCheck","rightCheck","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderHandler","getFiller","topLeft","topRight","botLeft","botRight","fillerHandler","getGrid","Array","fill","flipAdj","grid","randomize","r","c","handleBoard","score","flat","flatMap","includes","newRows","newCols","countBits","num","count","multiplySym","matrixA","matrixB","output","rowA","outputRow","push","getIdentity","symmetricPow","matrix","power","k","addSym","sortMatrices","identity","sorted","keys","sort","a","b","getProduct","input","getMatrix","product","poly","degree","evalPolynomial","curr","prev","double","getPolynomial","inverse","original","inverted","pow","alt","invertMatrix","binary","parseInt","join","chaseLights","states","dims","newStates","at","extendBack","extend","extendFront","unshift","getStates","start","last","blank","inputStates","outputStates","fillRow","before","boardStates","after","propHandler","getter","frames","percent","getFrames","animation","getRange","rowTiles","dRange","lRange","Bifold","Title","Example","small","useMobile","boardTiles","gridTiles","inputTiles","outputTiles","getRow","s","getBoard","getInput","getOutput","useHandler","Info","toggleOpen","isMobile","isLargeScreen","setRow","newRow","res","inputGetters","outputGetters","inputProps","getters","toggleTile","CircleRounded","stopPropagation","outputProps","Backdrop","card","maxHeight","mx","subtle","pt","pb","px","gutterBottom","mb","KeyboardArrowDown","mr","ml","Calculate","Replay","getFrontProps","LightsOut","mobile","gridSizes","desktop","lightsOut","InfoRounded","_viewTypes$find","_viewTypes$find2","subtitle","githubUrl","chartData","chartConfig","lines","xAxisKey","yAxisFormatter","toFixed","yAxisDomain","dualYAxis","rightYAxisFormatter","rightYAxisDomain","tooltipLabelFormatter","tooltipFormatter","viewTypes","currentViewType","onViewTypeChange","loading","loadingMessage","onReset","resetLabel","chartTitle","currentData","getCurrentChartData","currentView","find","view","dataProcessor","currentChartConfig","IconButton","CHART_DIMENSIONS","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","CHART_FORMATTING","strokeDashArray","stroke","XAxis","dataKey","tick","YAxis","yAxisId","tickFormatter","domain","orientation","RechartsTooltip","contentStyle","labelFormatter","formatter","line","Line","strokeWidth","dot","defaultStrokeWidth","dotRadius","SettingsRounded","light","min","viewType","borderColor","borderWidth","borderStyle","label","Refresh","control","ToggleButtonGroup","exclusive","onChange","e","newValue","borderLeft","hoverColor","options","option","ToggleButton","generateFallbackData","i","ZSHARP_DEFAULTS","maxEpochs","sgdAccuracy","baseAccuracy","maxAccuracy","zsharpAccuracy","improvement","sgdLoss","baseLoss","minLoss","zsharpLoss","lossReduction","epoch","sgd","zsharp","setChartData","setLoading","setViewType","async","_realData$SGDBaselin","_realData$ZSharp","_realData$SGDBaselin2","_realData$ZSharp2","DecompressionStream","response","fetch","ok","status","compressedData","arrayBuffer","decompressedData","Response","ReadableStream","controller","decompressionStream","writer","writable","getWriter","reader","readable","getReader","write","then","close","pump","read","done","enqueue","realData","JSON","parse","sgdAccuracies","train_accuracies","zsharpAccuracies","sgdLosses","train_losses","zsharpLosses","PERCENTAGE","divisor","loadRealZSharpData","console","loadData","BarChartRounded","multiplier","TrendingUpRounded","point","ShowChartRounded","AnalyticsRounded","prevPoint","ResearchDemo","zsharpRepo","filterMatrixData","matrixData","numFirms","modelType","demandElasticity","basePrice","collusionEnabled","generateFallbackOligopolyData","filtered","filter","item","num_firms","model_type","demand_elasticity","base_price","collusion_enabled","round","slice","oligopoly","maxRounds","sim","simulation","price","fallbackPrice","sin","priceFrequency","priceAmplitude","hhi","fallbackHHI","hhiFrequency","hhiAmplitude","collusion","collusionStart","collusionEnd","setNumFirms","defaultFirms","setDemandElasticity","defaultElasticity","setBasePrice","defaultBasePrice","marketData","setMarketData","setMatrixData","modelTypes","cournot","isArray","loadRealSimulationMatrix","initialData","filteredData","BusinessRounded","AttachMoneyRounded","oligopolyRepo","resetToDefaults","interpreters","TextFields","GridView","direction","esolangsRepo","interpreter","wordWrap","overflowWrap","ROUTES","pages","getWindow","innerWidth","innerHeight","window","getContainer","offsetHeight","offsetWidth","useSize","getSize","setSize","addEventListener","addEvent","removeEventListener","removeEvent","useContainer","wrapper","newSize","useMediaQuery","theme","breakpoints","down","globalTimer","globalRepeat","globalSpeed","delay","speed","newRepeat","newSpeed","clearInterval","setInterval","clear","oldHandler","useCache","getState","cache","processingRef","PROCESSING","doubleProcessingPrevention","result","setTimeout","resetDelay","prevResult"],"sourceRoot":""}