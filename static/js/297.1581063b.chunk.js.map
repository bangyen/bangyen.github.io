{"version":3,"file":"static/js/297.1581063b.chunk.js","mappings":"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","sources":["helpers.js","calculate.js","hooks.js","Interpreters/Display.js","Interpreters/Toolbar.js","Interpreters/Editor.js","Interpreters/Text/TextEditor.js","Interpreters/Text/StunStep.js","Interpreters/Text/Suffolk.js","Interpreters/Grid/eventHandlers.js","Interpreters/Grid/GridEditor.js","Interpreters/Grid/WII2D.js","Interpreters/Grid/Back.js","Interpreters/index.js"],"sourcesContent":["import { Tooltip, IconButton, Paper, Box, Grid } from './components/mui';\nimport {\n    Refresh,\n    HomeRounded,\n    CloseRounded,\n    GamepadRounded,\n    KeyboardArrowUpRounded,\n    KeyboardArrowDownRounded,\n    KeyboardArrowLeftRounded,\n    KeyboardArrowRightRounded,\n    Code,\n    Psychology,\n    Cloud,\n    Work,\n} from './components/icons';\nimport React, { useCallback, forwardRef } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { getSpace } from './calculate';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    ANIMATIONS,\n    COMPONENT_VARIANTS,\n} from './config/theme';\n\n/**\n * Icon mapping utility to eliminate repetitive icon selection logic\n * Maps skill icon names to their corresponding Material-UI icon components\n */\nexport const ICON_MAP = {\n    Code: Code,\n    Psychology: Psychology,\n    Cloud: Cloud,\n    Work: Work,\n};\n\n/**\n * TooltipButton component provides accessible icon buttons with tooltips\n * for improved user experience and screen reader support.\n */\nexport function TooltipButton(props) {\n    const { Icon, title, ...rest } = props;\n\n    return (\n        <Tooltip title={title}>\n            <IconButton size=\"large\" aria-label={title} {...rest}>\n                <Icon fontSize=\"inherit\" aria-hidden=\"true\" />\n            </IconButton>\n        </Tooltip>\n    );\n}\n\n/**\n * HomeButton component provides accessible navigation to home page\n * with proper ARIA labels and keyboard navigation support.\n */\nexport function HomeButton({ hide, ...rest }) {\n    if (hide) return null;\n\n    return (\n        <TooltipButton\n            to=\"/\"\n            key=\"Home\"\n            title=\"Navigate to Home\"\n            component={Link}\n            Icon={HomeRounded}\n            aria-label=\"Navigate to Home page\"\n            {...rest}\n        />\n    );\n}\n\nfunction Cell({ size, children, ...rest }) {\n    const remSize = `${size}rem`;\n    const radius = `${size / 4}rem`;\n\n    const props = {\n        ...COMPONENT_VARIANTS.flexCenter,\n        borderRadius: radius,\n        height: remSize,\n        width: remSize,\n        fontSize: `${size * 0.25}rem`,\n        fontWeight: TYPOGRAPHY.fontWeight.semibold,\n        fontFamily: 'monospace',\n        transition: ANIMATIONS.transition,\n    };\n\n    const combined = {\n        ...props,\n        ...rest,\n    };\n\n    return <Box {...combined}>{children}</Box>;\n}\n\nfunction Row(props) {\n    const { cols, size, index, spacing, cellProps } = props;\n\n    const WrappedCell = (_, j) => (\n        <Cell {...cellProps(index, j)} key={`${index}_${j}`} size={size} />\n    );\n\n    return (\n        <Grid container size={12} spacing={spacing} justifyContent=\"center\">\n            {Array.from({ length: cols }, WrappedCell)}\n        </Grid>\n    );\n}\n\n/**\n * CustomGrid component provides accessible grid layout with proper\n * ARIA roles and semantic structure for screen readers.\n */\nexport function CustomGrid(props) {\n    const { size, rows, cols, cellProps, ...rest } = props;\n\n    const auto = getSpace(size);\n    const { space = auto } = props;\n    const rem = `${space}rem`;\n\n    const getRow = useCallback(\n        (_, i) => (\n            <Row\n                index={i}\n                cols={cols}\n                size={size}\n                spacing={rem}\n                key={`row_${i}`}\n                cellProps={cellProps}\n            />\n        ),\n        [cols, size, rem, cellProps]\n    );\n\n    return (\n        <Grid\n            container\n            size={12}\n            spacing={rem}\n            alignItems=\"center\"\n            role=\"grid\"\n            aria-label={`Grid with ${rows} rows and ${cols} columns`}\n            {...rest}\n        >\n            {Array.from({ length: rows }, getRow)}\n        </Grid>\n    );\n}\n\n/**\n * Navigation component provides accessible navigation controls\n * with proper ARIA landmarks and keyboard navigation support.\n */\nexport function Navigation({ children, ...rest }) {\n    return (\n        <Paper\n            elevation={0}\n            component=\"nav\"\n            role=\"navigation\"\n            aria-label=\"Game controls navigation\"\n            sx={{\n                transform: 'translateX(-50%)',\n                position: 'absolute',\n                bottom: 50,\n                left: '50%',\n                zIndex: 10,\n                backgroundColor: 'hsla(0, 0%, 3%, 0.95)',\n                backdropFilter: 'blur(24px) saturate(180%)',\n                border: `1px solid ${COLORS.border.subtle}`,\n                borderRadius: SPACING.borderRadius.lg,\n                boxShadow: '0 8px 32px hsla(0, 0%, 0%, 0.35)',\n                padding: '16px 24px',\n                ...rest,\n            }}\n        >\n            <Grid\n                container\n                spacing={2}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexWrap: 'nowrap',\n                    minWidth: 0, // Allow shrinking on mobile\n                }}\n            >\n                {children}\n            </Grid>\n        </Paper>\n    );\n}\n\n/**\n * RandomButton component provides a reusable random action button\n * with consistent styling and accessibility across different games.\n */\nexport function RandomButton({\n    title = 'Randomize',\n    onClick,\n    enabled = false,\n    enabledTitle = 'Disable Random',\n    disabledTitle = 'Enable Random',\n    showToggleState = false,\n    hide = false,\n    ...props\n}) {\n    if (hide) return null;\n\n    const buttonTitle = showToggleState\n        ? enabled\n            ? enabledTitle\n            : disabledTitle\n        : title;\n\n    const ariaLabel = showToggleState\n        ? enabled\n            ? enabledTitle\n            : disabledTitle\n        : title;\n\n    return (\n        <TooltipButton\n            title={buttonTitle}\n            Icon={Refresh}\n            onClick={onClick}\n            aria-label={ariaLabel}\n            sx={{\n                color:\n                    showToggleState && enabled\n                        ? COLORS.primary.main\n                        : 'inherit',\n                backgroundColor:\n                    showToggleState && enabled\n                        ? `${COLORS.primary.main}20`\n                        : 'transparent',\n                ...props.sx,\n            }}\n            {...props}\n        />\n    );\n}\n\n/**\n * Controls component provides accessible game controls with proper\n * keyboard navigation and screen reader announcements.\n * Layout: [Home] [Random] [GameSpecificButton]\n */\nexport function Controls({\n    handler,\n    onRandom,\n    randomEnabled,\n    children,\n    size = 'inherit',\n    hide = false,\n}) {\n    const opacity = hide ? 0.8 : 1;\n\n    return (\n        <Navigation opacity={opacity}>\n            <HomeButton hide={hide} size={size} />\n            {onRandom && (\n                <RandomButton\n                    onClick={onRandom}\n                    enabled={randomEnabled}\n                    showToggleState={!!randomEnabled}\n                    enabledTitle=\"Disable Random Moves\"\n                    disabledTitle=\"Enable Random Moves\"\n                    hide={hide}\n                    size={size}\n                />\n            )}\n            {children}\n        </Navigation>\n    );\n}\n\n/**\n * ArrowsButton component provides a toggle button for showing/hiding\n * directional controls with proper accessibility.\n */\nexport function ArrowsButton({\n    show = false,\n    setShow,\n    handler,\n    size = 'inherit',\n    hide = false,\n}) {\n    const flip = useCallback(() => setShow(!show), [show, setShow]);\n\n    if (hide) return null;\n\n    if (!show) {\n        return (\n            <TooltipButton\n                title=\"Show Game Controls\"\n                Icon={GamepadRounded}\n                onClick={flip}\n                aria-label=\"Show game controls\"\n                size={size}\n            />\n        );\n    }\n\n    return (\n        <Grid role=\"group\" aria-label=\"Directional controls\">\n            <Grid width=\"100%\" display=\"flex\" justifyContent=\"center\">\n                <TooltipButton\n                    title=\"Move Up\"\n                    Icon={KeyboardArrowUpRounded}\n                    onClick={handler('up')}\n                    aria-label=\"Move up\"\n                    size={size}\n                />\n            </Grid>\n            <Grid>\n                <TooltipButton\n                    title=\"Move Left\"\n                    Icon={KeyboardArrowLeftRounded}\n                    onClick={handler('left')}\n                    aria-label=\"Move left\"\n                    size={size}\n                />\n                <IconButton\n                    size={size === 'inherit' ? 'large' : size}\n                    onClick={flip}\n                    aria-label=\"Hide controls\"\n                >\n                    <CloseRounded fontSize=\"inherit\" aria-hidden=\"true\" />\n                </IconButton>\n                <TooltipButton\n                    title=\"Move Right\"\n                    Icon={KeyboardArrowRightRounded}\n                    onClick={handler('right')}\n                    aria-label=\"Move right\"\n                    size={size}\n                />\n            </Grid>\n            <Grid width=\"100%\" display=\"flex\" justifyContent=\"center\">\n                <TooltipButton\n                    title=\"Move Down\"\n                    Icon={KeyboardArrowDownRounded}\n                    onClick={handler('down')}\n                    aria-label=\"Move down\"\n                    size={size}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\n/**\n * GlassCard component provides a consistent glassmorphism container\n * with backdrop blur, subtle borders, and elevation shadows.\n * Replaces repetitive glass container styling across components.\n * Uses forwardRef to support Material-UI transitions like Fade.\n *\n * @param {boolean} interactive - Whether the card should have hover effects and pointer cursor\n */\nexport const GlassCard = forwardRef(function GlassCard(\n    {\n        children,\n        padding = SPACING.padding.md,\n        sx,\n        className,\n        interactive = false,\n        ...props\n    },\n    ref\n) {\n    return (\n        <Box\n            ref={ref}\n            className={`glass-card ${className || ''}`}\n            sx={{\n                ...(interactive\n                    ? COMPONENT_VARIANTS.interactiveCard\n                    : COMPONENT_VARIANTS.card),\n                padding,\n                ...sx,\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n});\n","import { CALCULATION } from './config/constants';\n\nexport function getSpace(size) {\n    return size / CALCULATION.spaceDivisor;\n}\n\nexport function convertPixels(size, height, width) {\n    const space = getSpace(size);\n    const pixel = CALCULATION.pixelMultiplier * (size + space);\n    const rows = Math.floor(height / pixel);\n    const cols = Math.floor(width / pixel);\n\n    return { rows, cols };\n}\n\nexport function getDirection(arrow) {\n    switch (arrow.toLowerCase()) {\n        case 'arrowup':\n        case 'w':\n            return -2;\n        case 'arrowdown':\n        case 's':\n            return 2;\n        case 'arrowleft':\n        case 'a':\n            return -1;\n        case 'arrowright':\n        case 'd':\n            return 1;\n        default:\n            return 0;\n    }\n}\n\nexport function gridMove(start, arrow, rows, cols) {\n    const jump = cols - 1;\n    const max = rows * cols;\n\n    switch (arrow) {\n        case 2:\n            start += cols;\n            break;\n        case -2:\n            start -= cols;\n            break;\n        case 1:\n            if (start % cols === jump) start -= jump;\n            else start += 1;\n            break;\n        case -1:\n            if (start % cols === 0) start += jump;\n            else start -= 1;\n            break;\n        default:\n            break;\n    }\n\n    return (start + max) % max;\n}\n","import { useMediaQuery } from './components/mui';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction getWindow() {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return { width, height };\n}\n\nfunction getContainer(container) {\n    if (!container || !container.current) return getWindow();\n\n    const { offsetHeight: height, offsetWidth: width } = container.current;\n\n    return { width, height };\n}\n\nfunction useSize(getSize) {\n    const [size, setSize] = useState(getSize());\n\n    const { addEventListener: addEvent, removeEventListener: removeEvent } =\n        window;\n\n    useEffect(() => {\n        function handleResize() {\n            setSize(getSize());\n        }\n\n        addEvent('resize', handleResize);\n\n        return () => removeEvent('resize', handleResize);\n    }, [getSize, addEvent, removeEvent]);\n\n    return { size, setSize };\n}\n\nexport function useContainer(container) {\n    const wrapper = () => getContainer(container);\n\n    const { size, setSize } = useSize(wrapper);\n\n    useEffect(() => {\n        const newSize = getContainer(container);\n\n        setSize(newSize);\n    }, [container, setSize]);\n\n    return size;\n}\n\nexport function useWindow() {\n    const { size } = useSize(getWindow);\n\n    return size;\n}\n\nexport function useMobile(size) {\n    return useMediaQuery(theme => theme.breakpoints.down(size));\n}\n\n// Global timer reference to handle React StrictMode multiple instances\nlet globalTimer = null;\nlet globalRepeat = null;\nlet globalSpeed = 200;\n\nexport function useTimer(delay) {\n    const repeat = useRef(null);\n    const speed = useRef(delay);\n\n    const create = useCallback(({ repeat: newRepeat, speed: newSpeed }) => {\n        // Clear any existing timer first\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n        }\n\n        globalRepeat = newRepeat || globalRepeat;\n        globalSpeed = newSpeed || globalSpeed;\n        repeat.current = globalRepeat;\n        speed.current = globalSpeed;\n\n        globalTimer = setInterval(globalRepeat, globalSpeed);\n    }, []);\n\n    const clear = useCallback(() => {\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n            globalTimer = null;\n        }\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (globalTimer !== null) {\n                clearInterval(globalTimer);\n                globalTimer = null;\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useKeys() {\n    const oldHandler = useRef(null);\n\n    const create = useCallback(handler => {\n        oldHandler.current = handler;\n\n        document.addEventListener('keydown', handler);\n    }, []);\n\n    const clear = useCallback(handler => {\n        handler ||= oldHandler.current;\n\n        document.removeEventListener('keydown', handler);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (oldHandler.current) {\n                document.removeEventListener('keydown', oldHandler.current);\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useCache(getState) {\n    const cache = useRef([]);\n    const index = useRef(0);\n    const processingRef = useRef(false);\n\n    return useCallback(\n        ({ type, payload }) => {\n            const states = cache.current;\n\n            switch (type) {\n                case 'next':\n                    // Prevent double processing in React StrictMode\n                    if (processingRef.current) {\n                        return { ...states[index.current] };\n                    }\n\n                    processingRef.current = true;\n\n                    const curr = index.current;\n\n                    if (curr + 1 === states.length) {\n                        const state = states[curr];\n                        const next = getState(state);\n\n                        if (next === state) {\n                            // No change, stay at current position\n                        } else {\n                            // Add new state and move to it\n                            states.push(next);\n                            index.current++;\n                        }\n                    } else {\n                        index.current++;\n                    }\n\n                    const result = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, 0);\n\n                    return result;\n                case 'prev':\n                    // Prevent double processing in React StrictMode\n                    if (processingRef.current) {\n                        return { ...states[index.current] };\n                    }\n\n                    processingRef.current = true;\n\n                    if (index.current) index.current--;\n\n                    const prevResult = { ...states[index.current] };\n\n                    // Reset processing flag after a short delay\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, 0);\n\n                    return prevResult;\n                case 'clear':\n                    cache.current = [{ ...payload }];\n                    index.current = 0;\n\n                    break;\n                default:\n                    break;\n            }\n\n            return payload;\n        },\n        [getState]\n    );\n}\n","import { EditorContext, Text } from './Editor';\n\nimport { Box, Typography, Chip, IconButton } from '../components/mui';\nimport { useContext, memo } from 'react';\nimport { COLORS, TYPOGRAPHY } from '../config/theme';\nimport { GlassCard } from '../helpers';\n\nimport {\n    CodeRounded,\n    DataArrayRounded,\n    TextFieldsRounded,\n    PlusOneRounded,\n    ViewModuleRounded,\n    ViewListRounded,\n} from '../components/icons';\n\nexport const Program = memo(function Program({ compact = false }) {\n    const { code, index } = useContext(EditorContext);\n\n    if (code === undefined) return null;\n\n    if (compact) {\n        return (\n            <CompactDisplay\n                Icon={CodeRounded}\n                title=\"Program\"\n                data={[...code]}\n                pointer={index}\n            />\n        );\n    }\n\n    return (\n        <Display\n            Icon={CodeRounded}\n            title=\"Program\"\n            data={[...code]}\n            pointer={index}\n        >\n            <Text text={'\\xA0'} />\n        </Display>\n    );\n});\n\nexport const Tape = memo(function Tape({ compact = false }) {\n    const { tape, pointer, tapeFlag } = useContext(EditorContext);\n\n    if (!tapeFlag) return null;\n\n    if (compact) {\n        return (\n            <CompactDisplay\n                Icon={DataArrayRounded}\n                title=\"Tape\"\n                data={tape}\n                pointer={pointer}\n            />\n        );\n    }\n\n    return (\n        <Display\n            Icon={DataArrayRounded}\n            title=\"Tape\"\n            data={tape}\n            pointer={pointer}\n        >\n            <Text text={'\\xA0'} />\n        </Display>\n    );\n});\n\nexport const Output = memo(function Output({ compact = false }) {\n    const { output, outFlag } = useContext(EditorContext);\n\n    if (!outFlag) return null;\n\n    if (compact) {\n        return (\n            <CompactDisplay\n                Icon={TextFieldsRounded}\n                title=\"Output\"\n                data={[output]}\n            />\n        );\n    }\n\n    return (\n        <Display Icon={TextFieldsRounded} title=\"Output\" data={[output]}>\n            <Text text={'\\xA0'} />\n        </Display>\n    );\n});\n\nexport const Register = memo(function Register({ compact = false }) {\n    const { register, regFlag } = useContext(EditorContext);\n\n    if (!regFlag) return null;\n\n    if (compact) {\n        return (\n            <CompactDisplay\n                Icon={PlusOneRounded}\n                title=\"Register\"\n                data={[register]}\n            />\n        );\n    }\n\n    return (\n        <Display Icon={PlusOneRounded} title=\"Register\" data={[register]}>\n            <Text text={'\\xA0'} />\n        </Display>\n    );\n});\n\nfunction Display(props) {\n    const { Icon, title, data, pointer, children } = props;\n\n    const values = data.map((val, ind) => {\n        const color = pointer === ind ? 'info' : 'inherit';\n\n        return (\n            <Text\n                key={title + ind}\n                color={color}\n                text={val}\n                sx={{\n                    fontSize: TYPOGRAPHY.fontSize.body,\n                    fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                    fontFamily: 'monospace',\n                }}\n            />\n        );\n    });\n\n    return (\n        <Box sx={{ height: '100%' }}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    marginBottom: 1,\n                }}\n            >\n                <Icon sx={{ color: COLORS.primary.main }} />\n                <Typography\n                    variant=\"subtitle2\"\n                    sx={{\n                        color: COLORS.primary.main,\n                        fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                        fontSize: TYPOGRAPHY.fontSize.body,\n                    }}\n                >\n                    {title}\n                </Typography>\n            </Box>\n            <Scrollable>\n                {values}\n                {children}\n            </Scrollable>\n        </Box>\n    );\n}\n\nfunction CompactDisplay(props) {\n    const { Icon, title, data, pointer } = props;\n\n    const values = data.map((val, ind) => {\n        const color = pointer === ind ? 'info' : 'inherit';\n        return (\n            <Chip\n                key={title + ind}\n                label={val}\n                size=\"small\"\n                sx={{\n                    backgroundColor:\n                        color === 'info'\n                            ? COLORS.primary.main\n                            : COLORS.surface.glass,\n                    color:\n                        color === 'info'\n                            ? COLORS.text.primary\n                            : COLORS.text.primary,\n                    fontFamily: 'monospace',\n                    fontSize: TYPOGRAPHY.fontSize.caption,\n                    height: '32px',\n                    border: `1px solid ${COLORS.border.subtle}`,\n                    backdropFilter: 'blur(24px) saturate(180%)',\n                }}\n            />\n        );\n    });\n\n    return (\n        <GlassCard\n            sx={{\n                height: '100%',\n                minHeight: '24rem',\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    marginBottom: 1,\n                }}\n            >\n                <Icon\n                    sx={{\n                        color: COLORS.primary.main,\n                        fontSize: TYPOGRAPHY.fontSize.body,\n                    }}\n                />\n                <Typography\n                    variant=\"caption\"\n                    sx={{\n                        color: COLORS.primary.main,\n                        fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                        fontSize: TYPOGRAPHY.fontSize.caption,\n                    }}\n                >\n                    {title}\n                </Typography>\n            </Box>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {values}\n            </Box>\n        </GlassCard>\n    );\n}\n\nexport function DisplayModeToggle({ compactMode, setCompactMode }) {\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                marginBottom: 2,\n            }}\n        >\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                Display Mode:\n            </Typography>\n            <IconButton\n                onClick={() => setCompactMode(!compactMode)}\n                sx={{\n                    color: compactMode ? 'primary.light' : 'text.secondary',\n                    padding: 0.5,\n                }}\n            >\n                {compactMode ? <ViewModuleRounded /> : <ViewListRounded />}\n            </IconButton>\n            <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                {compactMode ? 'Compact' : 'Expanded'}\n            </Typography>\n        </Box>\n    );\n}\n\nfunction Scrollable(props) {\n    return (\n        <GlassCard\n            sx={{\n                overflowX: 'auto',\n                width: '100%',\n                maxWidth: '100%',\n                height: '60px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                padding: 2,\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    width: 'max-content',\n                    minWidth: 0,\n                }}\n            >\n                {props.children}\n            </Box>\n        </GlassCard>\n    );\n}\n","import { useContext, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { TooltipButton } from '../helpers';\nimport { EditorContext } from './Editor';\nimport { useMobile } from '../hooks';\n\nimport {\n    NavigateBeforeRounded,\n    NavigateNextRounded,\n    PlayArrowRounded,\n    FirstPageRounded,\n    LastPageRounded,\n    PauseRounded,\n    InfoRounded,\n    HomeRounded,\n} from '../components/icons';\n\nexport function Toolbar() {\n    const { name, dispatch, fastForward, pause } = useContext(EditorContext);\n\n    const notMobile = !useMobile('sm');\n\n    const link = 'https://esolangs.org/wiki/' + name.replace(' ', '_');\n\n    const TimerButton = useMemo(\n        () =>\n            pause ? (\n                <TooltipButton\n                    key=\"Run\"\n                    title=\"Run\"\n                    onClick={dispatch('run')}\n                    Icon={PlayArrowRounded}\n                />\n            ) : (\n                <TooltipButton\n                    key=\"Pause\"\n                    title=\"Pause\"\n                    onClick={dispatch('stop')}\n                    Icon={PauseRounded}\n                />\n            ),\n        [dispatch, pause]\n    );\n\n    const buttonData = {\n        Reset: {\n            icon: FirstPageRounded,\n            action: 'reset',\n            flag: true,\n        },\n        'Fast Forward': {\n            icon: LastPageRounded,\n            flag: fastForward,\n            action: 'ff',\n        },\n        Previous: {\n            icon: NavigateBeforeRounded,\n            flag: notMobile,\n            action: 'prev',\n        },\n        Next: {\n            icon: NavigateNextRounded,\n            flag: notMobile,\n            action: 'next',\n        },\n        Info: {\n            icon: InfoRounded,\n            props: { href: link },\n        },\n        Home: {\n            icon: HomeRounded,\n            props: {\n                component: Link,\n                to: '/',\n            },\n        },\n    };\n\n    const buttons = [TimerButton];\n\n    for (const key in buttonData) {\n        const { icon, flag, action, props } = buttonData[key];\n\n        if (action && flag)\n            buttons.push(\n                <TooltipButton\n                    key={key}\n                    title={key}\n                    Icon={icon}\n                    onClick={dispatch(action)}\n                />\n            );\n        else if (props)\n            buttons.push(\n                <TooltipButton key={key} title={key} Icon={icon} {...props} />\n            );\n    }\n\n    return buttons;\n}\n\nfunction updateHandler(payload) {\n    return (type, flag) => {\n        const { nextIter, clear } = payload;\n\n        if (flag) clear();\n\n        const result = nextIter({ type });\n\n        return {\n            ...result,\n            select: null,\n        };\n    };\n}\n\nexport function handleToolbar(state, action) {\n    const { type, payload } = action;\n    let newState = {};\n\n    const { dispatch, nextIter, create, clear, start } = payload;\n\n    const update = updateHandler(payload);\n\n    const repeat = () => {\n        dispatch({\n            type: 'timer',\n            payload,\n        });\n    };\n\n    // Consolidated pause state management\n    const pauseStateMap = {\n        run: false,\n        stop: true,\n        reset: true,\n        prev: true,\n    };\n\n    switch (type) {\n        case 'run':\n            create({ repeat, speed: 200 }); // Always use default speed\n            newState.pause = pauseStateMap.run;\n            break;\n        case 'timer':\n            const newType = state.end ? 'stop' : 'next';\n\n            dispatch({\n                type: newType,\n                payload,\n            });\n            break;\n        case 'stop':\n            clear();\n            newState.pause = pauseStateMap.stop;\n            break;\n        case 'reset':\n            clear();\n\n            newState = nextIter({\n                type: 'clear',\n                payload: {\n                    ...state,\n                    ...start,\n                },\n            });\n            newState.pause = pauseStateMap.reset;\n            break;\n        case 'prev':\n            newState = update('prev', true);\n            newState.pause = pauseStateMap.prev;\n            break;\n        case 'next':\n            newState = update('next', false);\n            break;\n        default:\n            break;\n    }\n\n    return newState;\n}\n","import { Program, Output, Tape, Register } from './Display';\nimport { CustomGrid } from '../helpers';\nimport { Grid, Typography, TextField } from '../components/mui';\nimport { Toolbar } from './Toolbar';\nimport { COLORS, SPACING, TYPOGRAPHY } from '../config/theme';\n\nimport React, { createContext, useContext, useMemo } from 'react';\n\nexport const EditorContext = createContext();\n\nexport default function Editor({ container, sideProps, hide, children }) {\n    const { name, tapeFlag, outFlag, regFlag, code } =\n        useContext(EditorContext);\n\n    const rightProps = { xs: 6, md: 4 };\n    let display, leftProps;\n\n    if (hide) {\n        display = 'none';\n        leftProps = 12;\n    } else {\n        leftProps = { xs: 6, md: 8 };\n        display = 'flex';\n    }\n\n    const titleProps = {\n        size: 'grow',\n        sx: {\n            display: {\n                xs: 'none',\n                md: 'block',\n            },\n        },\n    };\n\n    const contentProps = {\n        flex: 1,\n        spacing: 2,\n        ref: container,\n        container: true,\n        display: 'flex',\n        alignItems: 'center',\n        sx: { overflowY: 'auto' },\n    };\n\n    return (\n        <Grid\n            container\n            spacing={2}\n            height=\"100vh\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            padding=\"5vh 5vw 5vh 5vw\"\n            sx={{\n                background: COLORS.surface.background,\n                position: 'relative',\n            }}\n        >\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                <Grid {...titleProps}>\n                    <Typography\n                        variant=\"h4\"\n                        sx={{\n                            fontSize: TYPOGRAPHY.fontSize.h2,\n                            fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                </Grid>\n                <Toolbar />\n            </Grid>\n            <Grid {...contentProps}>\n                <Grid size={leftProps}>{children}</Grid>\n                <Grid display={display} size={rightProps}>\n                    <TextArea {...sideProps} />\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                sx={{ width: '100%', maxWidth: '100%' }}\n            >\n                {(() => {\n                    const fields = [];\n                    const fieldCount = [\n                        code !== undefined,\n                        tapeFlag,\n                        outFlag,\n                        regFlag,\n                    ].filter(Boolean).length;\n                    const gridSize =\n                        fieldCount === 1\n                            ? { xs: 12, md: 12 }\n                            : { xs: 12, md: 6 };\n\n                    if (code !== undefined) {\n                        fields.push(\n                            <Grid\n                                key=\"program\"\n                                size={gridSize}\n                                sx={{\n                                    width: '100%',\n                                    maxWidth: '100%',\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                <Program />\n                            </Grid>\n                        );\n                    }\n                    if (tapeFlag) {\n                        fields.push(\n                            <Grid\n                                key=\"tape\"\n                                size={gridSize}\n                                sx={{\n                                    width: '100%',\n                                    maxWidth: '100%',\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                <Tape />\n                            </Grid>\n                        );\n                    }\n                    if (outFlag) {\n                        fields.push(\n                            <Grid\n                                key=\"output\"\n                                size={gridSize}\n                                sx={{\n                                    width: '100%',\n                                    maxWidth: '100%',\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                <Output />\n                            </Grid>\n                        );\n                    }\n                    if (regFlag) {\n                        fields.push(\n                            <Grid\n                                key=\"register\"\n                                size={gridSize}\n                                sx={{\n                                    width: '100%',\n                                    maxWidth: '100%',\n                                    overflow: 'hidden',\n                                }}\n                            >\n                                <Register />\n                            </Grid>\n                        );\n                    }\n\n                    return fields;\n                })()}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport function GridArea({ handleClick, chooseColor, options, rows, cols }) {\n    const { size } = useContext(EditorContext);\n\n    // Memoize cell styles to prevent recalculation on every render\n    const cellStyles = useMemo(\n        () => ({\n            primary: {\n                bg: COLORS.surface.glass,\n                text: COLORS.primary.main,\n                border: `1px solid ${COLORS.primary.main}`,\n                hover: COLORS.interactive.selected,\n            },\n            info: {\n                bg: COLORS.interactive.focus,\n                text: COLORS.text.primary,\n                border: `1px solid ${COLORS.primary.main}`,\n                hover: COLORS.interactive.hover,\n            },\n            secondary: {\n                bg: COLORS.surface.glass,\n                text: COLORS.text.secondary,\n                border: `1px solid ${COLORS.border.subtle}`,\n                hover: COLORS.interactive.selected,\n            },\n        }),\n        []\n    );\n\n    const getCellStyles = useMemo(\n        () => color => {\n            return cellStyles[color] || cellStyles.secondary;\n        },\n        [cellStyles]\n    );\n\n    const cellProps = (row, col) => {\n        const pos = cols * row + col;\n        const color = chooseColor(pos);\n        const value = options[pos] || ' ';\n\n        const cellStyle = getCellStyles(color);\n\n        return {\n            color: cellStyle.text,\n            backgroundColor: cellStyle.bg,\n            onClick: handleClick(pos),\n            children: <Text text={value} />,\n            sx: {\n                borderRadius: SPACING.borderRadius.md,\n                border: cellStyle.border,\n                cursor: 'pointer',\n                transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                backdropFilter: 'blur(24px) saturate(180%)',\n                '&:hover': {\n                    backgroundColor: cellStyle.hover,\n                },\n            },\n        };\n    };\n\n    return (\n        <CustomGrid cellProps={cellProps} size={size} rows={rows} cols={cols} />\n    );\n}\n\nexport function TextArea({\n    value,\n    readOnly,\n    infoLabel,\n    fillValue,\n    handleChange,\n}) {\n    const { height } = useContext(EditorContext);\n    const rows = Math.floor(height / 32);\n\n    fillValue = fillValue || 'Hello, World!';\n    infoLabel = infoLabel || 'Program code';\n    readOnly = readOnly || false;\n\n    // Use controlled component if value is provided, otherwise use uncontrolled\n    const isControlled = value !== undefined && value !== null;\n    const textFieldProps = isControlled\n        ? {\n              value: value || '',\n              onChange: handleChange,\n          }\n        : {\n              defaultValue: fillValue,\n              onChange: handleChange,\n          };\n\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={infoLabel}\n            slotProps={{\n                inputLabel: { shrink: true },\n                htmlInput: { readOnly },\n            }}\n            fullWidth\n            multiline\n            rows={rows}\n            {...textFieldProps}\n            sx={{\n                '& .MuiInputBase-root': {\n                    alignItems: 'flex-start',\n                    backgroundColor: COLORS.surface.glass,\n                    backdropFilter: 'blur(24px) saturate(180%)',\n                    borderRadius: SPACING.borderRadius.md,\n                    border: `1px solid ${COLORS.border.subtle}`,\n                },\n                '& .MuiInputBase-input': {\n                    fontFamily: 'monospace',\n                    color: 'text.primary',\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: COLORS.border.subtle,\n                },\n                '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: COLORS.border.subtle,\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.light',\n                },\n                '& .MuiInputLabel-root': {\n                    color: 'text.secondary',\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                    color: 'primary.light',\n                },\n            }}\n        />\n    );\n}\n\nexport function Text({ text, ...props }) {\n    return (\n        <Typography\n            {...props}\n            sx={{\n                fontSize: 'inherit',\n                fontWeight: 'inherit',\n                fontFamily: 'inherit',\n                userSelect: 'none',\n                lineHeight: 1,\n                ...props.sx,\n            }}\n        >\n            {text}\n        </Typography>\n    );\n}\n","import { useEffect, useRef, useCallback, useReducer } from 'react';\nimport Editor, { EditorContext, TextArea } from '../Editor';\nimport { useTimer, useCache, useContainer } from '../../hooks';\nimport { handleToolbar } from '../Toolbar';\nimport { PAGE_TITLES } from '../../config/constants';\n\nfunction handleAction(state, action) {\n    const { type, payload } = action;\n    const { nextIter, clear, create, dispatch } = payload;\n    let newState = {};\n\n    switch (type) {\n        case 'ff':\n            // Fast forward = increase speed or start if paused\n            const repeat = () => dispatch({ type: 'timer', payload });\n\n            if (state.pause) {\n                // If paused, start with fast speed\n                newState = { pause: false };\n                create({ repeat, speed: 50 }); // 50ms instead of 200ms\n            } else {\n                // If running, increase speed by stopping current timer and creating faster one\n                clear();\n                newState = { pause: false };\n                create({ repeat, speed: 10 }); // Even faster: 10ms\n            }\n            break;\n        case 'edit':\n            const { newText, clean } = payload;\n\n            newState = {\n                ...state,\n                text: newText,\n                code: clean(newText),\n            };\n\n            clear();\n            nextIter({\n                type: 'clear',\n                payload: newState,\n            });\n            newState.pause = true;\n            break;\n        default:\n            newState = handleToolbar(state, action);\n            break;\n    }\n\n    return {\n        ...state,\n        ...newState,\n    };\n}\n\nexport default function TextEditor(props) {\n    const { create, clear } = useTimer(200);\n\n    const { runner, clean, name, start, tape, output, register } = props;\n\n    const nextIter = useCache(runner);\n    const container = useRef(null);\n\n    const { height } = useContainer(container);\n\n    const initial = {\n        ...start,\n        pause: true,\n        text: '',\n        code: '',\n    };\n\n    const [state, dispatch] = useReducer(handleAction, initial);\n\n    const handleChange = useCallback(\n        event => {\n            const newText = event.target.value;\n\n            dispatch({\n                type: 'edit',\n                payload: {\n                    nextIter,\n                    newText,\n                    clean,\n                    clear,\n                },\n            });\n        },\n        [nextIter, dispatch, clean, clear]\n    );\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.interpreter(name);\n    }, [name]);\n\n    const wrapDispatch = useCallback(\n        type => () => {\n            const payload = {\n                start,\n                nextIter,\n                dispatch,\n                create,\n                clear,\n            };\n\n            dispatch({ type, payload });\n        },\n        [start, nextIter, create, clear]\n    );\n\n    const context = {\n        name,\n        ...state,\n        dispatch: wrapDispatch,\n        fastForward: true,\n        tapeFlag: tape,\n        outFlag: output,\n        regFlag: register,\n        readOnly: true,\n        height,\n    };\n\n    const sideProps = {\n        readOnly: true,\n        infoLabel: 'RISC-V Equivalent',\n        fillValue: 'addi x0, x0, 0',\n        value: '',\n    };\n\n    return (\n        <EditorContext.Provider value={context}>\n            <Editor hide container={container} sideProps={sideProps}>\n                <TextArea handleChange={handleChange} />\n            </Editor>\n        </EditorContext.Provider>\n    );\n}\n","import TextEditor from './TextEditor';\n\nfunction clean(input) {\n    let code = '';\n\n    for (const char of input) if ('+-><'.includes(char)) code += char;\n\n    return code;\n}\n\nfunction getState(state) {\n    let { pointer, index, tape, end } = state;\n    const { code } = state;\n\n    if (end)\n        if (!tape[pointer]) return state;\n        else end = false;\n\n    if (index === code.length)\n        return {\n            ...state,\n            index: 0,\n            end: true,\n        };\n\n    const char = code[index++];\n    tape = [...tape];\n\n    if (char === '+') {\n        tape[pointer]++;\n    } else if (tape[pointer]) {\n        if (char === '-') {\n            tape[pointer]--;\n        } else if (char === '>') {\n            if (tape.length === ++pointer) tape.push(1);\n        } else if (pointer) {\n            pointer--;\n        }\n    }\n\n    return {\n        pointer,\n        index,\n        code,\n        tape,\n        end,\n    };\n}\n\nexport default function Editor() {\n    const start = {\n        pointer: 0,\n        index: 0,\n        tape: [1],\n        end: false,\n    };\n\n    return (\n        <TextEditor\n            name=\"Stun Step\"\n            runner={getState}\n            clean={clean}\n            start={start}\n            tape\n        />\n    );\n}\n","import TextEditor from './TextEditor';\n\nfunction cleanInput(input) {\n    let code = '';\n\n    for (const char of input) if ('><!,.'.includes(char)) code += char;\n\n    return code;\n}\n\nfunction getState(state) {\n    let { register, pointer, output, index, tape, end } = state;\n    const { code } = state;\n\n    if (end) end = false;\n\n    if (index === code.length)\n        return {\n            ...state,\n            index: 0,\n            end: true,\n        };\n\n    const char = code[index++];\n    tape = [...tape];\n\n    switch (char) {\n        case '>':\n            if (tape.length === ++pointer) tape.push(0);\n            break;\n        case '<':\n            register += tape[pointer];\n            pointer = 0;\n            break;\n        case '!':\n            tape[pointer] -= register - 1;\n\n            if (tape[pointer] < 0) tape[pointer] = 0;\n\n            register = 0;\n            pointer = 0;\n            break;\n        case ',':\n            const input = prompt('Input: ');\n\n            if (input.length) register = input.charCodeAt(0);\n            else register = 0;\n            break;\n        case '.':\n            if (register > 0) output += String.fromCharCode(register - 1);\n            break;\n        default:\n            break;\n    }\n\n    return {\n        register,\n        pointer,\n        output,\n        index,\n        code,\n        tape,\n        end,\n    };\n}\n\nexport default function Editor() {\n    const start = {\n        register: 0,\n        pointer: 0,\n        output: '',\n        tape: [0],\n        index: 0,\n        end: false,\n    };\n\n    return (\n        <TextEditor\n            name=\"Suffolk\"\n            start={start}\n            runner={getState}\n            clean={cleanInput}\n            tape\n            output\n            register\n        />\n    );\n}\n","import { gridMove, getDirection } from '../../calculate';\nimport { handleToolbar } from '../Toolbar';\n\nfunction handleKeys(state, payload) {\n    let { grid, select } = state;\n    let value;\n\n    const { key, resetState } = payload;\n\n    if (select === null) return {};\n\n    if (key.includes('Arrow')) {\n        const arrow = getDirection(key);\n        const { rows, cols } = state;\n\n        select = gridMove(select, arrow, rows, cols);\n        return { select };\n    }\n\n    if (key.length === 1) {\n        value = key;\n    } else if (key === 'Backspace' || key === 'Delete') {\n        value = ' ';\n    } else {\n        return {};\n    }\n\n    const before = grid.slice(0, select);\n    const after = grid.slice(select + 1);\n\n    grid = before + value + after;\n    resetState(grid);\n\n    return { grid, pause: true };\n}\n\nfunction handleResize(state, payload) {\n    const { resetState, ...rest } = payload;\n    let { grid } = state;\n    const { rows, cols } = state;\n    let resize = '';\n\n    const { rows: newRows, cols: newCols } = rest;\n\n    if (newRows > rows) {\n        const diff = newRows - rows;\n        const prod = diff * cols;\n\n        grid += ' '.repeat(prod);\n    }\n\n    for (let k = 0; k < newRows; k++) {\n        const start = k * cols;\n        let end = start;\n\n        if (newCols > cols) end += cols;\n        else end += newCols;\n\n        resize += grid.substring(start, end).padEnd(newCols, ' ');\n    }\n\n    resetState(resize);\n\n    return {\n        ...rest,\n        grid: resize,\n        pause: true,\n    };\n}\n\nexport function handleAction(state, action) {\n    const { type, payload } = action;\n    let newState = {};\n\n    switch (type) {\n        case 'edit':\n            newState = handleKeys(state, payload);\n            break;\n        case 'resize':\n            newState = handleResize(state, payload);\n            break;\n        case 'click':\n            let { select } = payload;\n\n            if (select === state.select) select = null;\n\n            newState = { select };\n            break;\n        default:\n            newState = handleToolbar(state, action);\n            break;\n    }\n\n    return {\n        ...state,\n        ...newState,\n    };\n}\n","import Editor, { EditorContext, GridArea } from '../Editor';\nimport { convertPixels } from '../../calculate';\nimport { handleAction } from './eventHandlers';\nimport { PAGE_TITLES } from '../../config/constants';\n\nimport {\n    useContainer,\n    useTimer,\n    useKeys,\n    useCache,\n    useMobile,\n} from '../../hooks';\n\nimport { useRef, useEffect, useReducer, useCallback, useMemo } from 'react';\n\nfunction useWrappers(state, props, dispatch) {\n    const { runner, start } = props;\n    const { rows, cols } = state;\n\n    const { create, clear } = useTimer(200);\n    const nextIter = useCache(runner);\n\n    const resetState = useCallback(\n        grid => {\n            clear();\n\n            return nextIter({\n                type: 'clear',\n                payload: {\n                    ...start,\n                    grid,\n                    rows,\n                    cols,\n                },\n            });\n        },\n        [start, clear, nextIter, rows, cols]\n    );\n\n    const handleClick = useCallback(\n        select => () => {\n            dispatch({\n                type: 'click',\n                payload: { select },\n            });\n        },\n        [dispatch]\n    );\n\n    const chooseColor = useCallback(\n        square => {\n            const { position, select } = state;\n\n            if (square === select) return 'primary';\n            if (position !== null && square === position) return 'info';\n\n            return 'secondary';\n        },\n        [state]\n    );\n\n    const wrapDispatch = useCallback(\n        type => () => {\n            const payload = {\n                start,\n                resetState,\n                nextIter,\n                dispatch,\n                create,\n                clear,\n            };\n\n            dispatch({ type, payload });\n        },\n        [resetState, nextIter, dispatch, create, clear, start]\n    );\n\n    return {\n        resetState,\n        handleClick,\n        chooseColor,\n        wrapDispatch,\n    };\n}\n\nexport default function GridEditor(props) {\n    const { create: createKeys, clear: clearKeys } = useKeys();\n\n    const { name, start, tape, output, register } = props;\n\n    const container = useRef(null);\n    let { height, width } = useContainer(container);\n\n    const mobile = useMobile('sm');\n    const size = mobile ? 4 : 6;\n    const hide = true;\n\n    // Add fallback dimensions to prevent empty grids\n    height = (height || 400) * 0.8;\n    width = (width || 600) * 0.95;\n\n    if (!hide) {\n        if (mobile) width /= 2;\n        else width /= 1.5;\n    }\n\n    const { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    const initial = {\n        ...start,\n        grid: ' '.repeat(rows * cols),\n        select: null,\n        pause: true,\n        rows,\n        cols,\n    };\n\n    const [state, dispatch] = useReducer(handleAction, initial);\n\n    const { resetState, handleClick, chooseColor, wrapDispatch } = useWrappers(\n        state,\n        props,\n        dispatch\n    );\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            payload: {\n                rows,\n                cols,\n                resetState,\n            },\n        });\n    }, [rows, cols, resetState]);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.interpreter(name);\n\n        const wrapper = event => {\n            dispatch({\n                type: 'edit',\n                payload: {\n                    key: event.key,\n                    resetState,\n                },\n            });\n        };\n\n        createKeys(wrapper);\n\n        return () => clearKeys();\n    }, [name, createKeys, resetState, clearKeys]);\n\n    const context = {\n        name,\n        size,\n        ...state,\n        dispatch: wrapDispatch,\n        tapeFlag: tape,\n        outFlag: output,\n        regFlag: register,\n        height: height / 0.8,\n    };\n\n    return (\n        <EditorContext.Provider value={context}>\n            <Editor hide={hide} container={container}>\n                <GridArea\n                    rows={rows}\n                    cols={cols}\n                    options={state.grid}\n                    handleClick={handleClick}\n                    chooseColor={chooseColor}\n                />\n            </Editor>\n        </EditorContext.Provider>\n    );\n}\n","import { gridMove } from '../../calculate';\nimport GridEditor from './GridEditor';\nimport React from 'react';\n\nfunction getDistance(x, y, cols) {\n    const xWidth = x % cols;\n    const yWidth = y % cols;\n    x -= xWidth;\n    y -= yWidth;\n\n    const differ = Math.abs(x - y);\n    const height = Math.floor(differ / cols);\n    const width = Math.abs(xWidth - yWidth);\n\n    return height + width;\n}\n\nfunction getComparison(position, cols) {\n    return (x, y) =>\n        getDistance(position, x, cols) - getDistance(position, y, cols);\n}\n\nfunction getClosest(position, grid, cols) {\n    const warp = [];\n\n    for (let k = 0; k < grid.length; k++) if (grid[k] === '@') warp.push(k);\n\n    if (warp.length === 1) return position;\n\n    const compare = getComparison(position, cols);\n\n    warp.sort(compare);\n    return warp[1];\n}\n\nfunction getState(state) {\n    const arrows = '^<>v';\n\n    let { position, velocity, output, register, end } = state;\n    const { grid, rows, cols } = state;\n\n    if (end) return state;\n\n    if (position === null) {\n        const index = grid.indexOf('!');\n        const double = grid.lastIndexOf('!');\n\n        if (index === -1 || index !== double) return { ...state, end: true };\n\n        position = index;\n    }\n\n    const char = grid[position];\n\n    if (arrows.includes(char)) {\n        const index = arrows.indexOf(char);\n        velocity = (index % 2) + 1;\n\n        if (index < 2) velocity -= 3;\n    } else if (+char) {\n        register = +char;\n    }\n\n    switch (char) {\n        case '|':\n            velocity *= -1;\n            break;\n        case '@':\n            position = getClosest(position, grid, cols);\n            position -= cols;\n\n            if (position < 0) position += rows * cols;\n            break;\n        case '+':\n            register++;\n            break;\n        case '-':\n            register--;\n            break;\n        case '*':\n            register *= 2;\n            break;\n        case 's':\n            register *= register;\n            break;\n        case '/':\n            register = Math.floor(register / 2);\n            break;\n        case '~':\n            output += String.fromCharCode(register);\n            break;\n        case '?':\n            const rand = Math.random() * 4;\n            const floor = Math.floor(rand);\n            velocity = floor - 2 + (floor > 1);\n            break;\n        case '.':\n            position = null;\n            end = true;\n            break;\n        default:\n            break;\n    }\n\n    if (position !== null && char !== '@')\n        position = gridMove(position, velocity, rows, cols);\n\n    return {\n        position,\n        velocity,\n        grid,\n        output,\n        register,\n        end,\n        rows,\n        cols,\n    };\n}\n\nexport default function Editor() {\n    const start = {\n        position: null,\n        velocity: -2,\n        end: false,\n        output: '',\n        register: 0,\n    };\n\n    return (\n        <GridEditor\n            name=\"WII2D\"\n            start={start}\n            runner={getState}\n            output\n            register\n        />\n    );\n}\n","import { gridMove } from '../../calculate';\nimport GridEditor from './GridEditor';\n\nfunction getState(state) {\n    let { velocity, position, pointer, tape, end } = state;\n    const { grid, rows, cols } = state;\n\n    if (end) return state;\n\n    const sum = velocity > 0 ? 3 : -3;\n    const char = grid[position];\n    tape = [...tape];\n\n    switch (char) {\n        case '\\\\':\n            velocity = sum - velocity;\n            break;\n        case '/':\n            velocity -= sum;\n            break;\n        case '<':\n            if (pointer) pointer--;\n            break;\n        case '>':\n            if (++pointer === tape.length) tape.push(0);\n            break;\n        case '-':\n            tape[pointer] ^= 1;\n            break;\n        case '+':\n            let next;\n\n            if (!tape[pointer])\n                do {\n                    position = gridMove(position, velocity, rows, cols);\n\n                    next = grid[position];\n                } while (!'\\\\/<>-+*'.includes(next));\n            break;\n        case '*':\n            position = null;\n            end = true;\n            break;\n        default:\n            break;\n    }\n\n    if (position !== null) position = gridMove(position, velocity, rows, cols);\n\n    return {\n        velocity,\n        position,\n        pointer,\n        grid,\n        tape,\n        rows,\n        cols,\n        end,\n    };\n}\n\nexport default function Editor() {\n    const start = {\n        velocity: 1,\n        pointer: 0,\n        position: 0,\n        tape: [0],\n        end: false,\n    };\n\n    return <GridEditor name=\"Back\" start={start} runner={getState} tape />;\n}\n","import { ROUTES } from '../config/constants';\n\nexport { default as Stun_Step } from './Text/StunStep';\nexport { default as Suffolk } from './Text/Suffolk';\nexport { default as WII2D } from './Grid/WII2D';\nexport { default as Back } from './Grid/Back';\n\nexport const names = ROUTES.interpreters;\n"],"names":["ICON_MAP","Code","Psychology","Cloud","Work","TooltipButton","props","Icon","title","rest","_objectWithoutProperties","_excluded","_jsx","Tooltip","children","IconButton","_objectSpread","size","fontSize","HomeButton","_ref","hide","_excluded2","to","component","Link","HomeRounded","Cell","_ref2","_excluded3","remSize","concat","radius","COMPONENT_VARIANTS","flexCenter","borderRadius","height","width","fontWeight","TYPOGRAPHY","semibold","fontFamily","transition","ANIMATIONS","combined","Box","Row","cols","index","spacing","cellProps","Grid","container","justifyContent","Array","from","length","WrappedCell","_","j","_createElement","key","CustomGrid","rows","_excluded4","auto","getSpace","space","rem","getRow","useCallback","i","alignItems","role","Navigation","_ref3","_excluded5","Paper","elevation","sx","transform","position","bottom","left","zIndex","backgroundColor","backdropFilter","border","COLORS","subtle","SPACING","lg","boxShadow","padding","flexWrap","minWidth","RandomButton","_ref4","onClick","enabled","enabledTitle","disabledTitle","showToggleState","_excluded6","buttonTitle","ariaLabel","Refresh","color","primary","main","Controls","_ref5","handler","onRandom","randomEnabled","opacity","_jsxs","ArrowsButton","_ref6","show","setShow","flip","display","KeyboardArrowUpRounded","KeyboardArrowLeftRounded","CloseRounded","KeyboardArrowRightRounded","KeyboardArrowDownRounded","GamepadRounded","GlassCard","forwardRef","_ref7","ref","md","className","interactive","_excluded7","interactiveCard","card","CALCULATION","spaceDivisor","convertPixels","pixel","pixelMultiplier","Math","floor","getDirection","arrow","toLowerCase","gridMove","start","jump","max","getWindow","innerWidth","innerHeight","window","getContainer","current","offsetHeight","offsetWidth","useSize","getSize","setSize","useState","addEventListener","addEvent","removeEventListener","removeEvent","useEffect","handleResize","useContainer","wrapper","newSize","useWindow","useMobile","useMediaQuery","theme","breakpoints","down","globalTimer","globalRepeat","globalSpeed","useTimer","delay","repeat","useRef","speed","create","newRepeat","newSpeed","clearInterval","setInterval","clear","useKeys","oldHandler","document","useCache","getState","cache","processingRef","type","payload","states","curr","state","next","push","result","setTimeout","prevResult","Program","memo","compact","code","useContext","EditorContext","undefined","CompactDisplay","CodeRounded","data","pointer","Display","Text","text","Tape","tape","tapeFlag","DataArrayRounded","Output","output","outFlag","TextFieldsRounded","Register","register","regFlag","PlusOneRounded","values","map","val","ind","body","gap","marginBottom","Typography","variant","Scrollable","Chip","label","surface","glass","caption","minHeight","overflowX","maxWidth","flexDirection","Toolbar","name","dispatch","fastForward","pause","notMobile","link","replace","TimerButton","useMemo","PlayArrowRounded","PauseRounded","buttonData","Reset","icon","FirstPageRounded","action","flag","LastPageRounded","Previous","NavigateBeforeRounded","Next","NavigateNextRounded","Info","InfoRounded","href","Home","buttons","handleToolbar","newState","nextIter","update","select","updateHandler","pauseStateMap","newType","end","createContext","Editor","sideProps","leftProps","xs","contentProps","flex","overflowY","background","h2","TextArea","fields","gridSize","filter","Boolean","overflow","GridArea","handleClick","chooseColor","options","cellStyles","bg","hover","selected","info","focus","secondary","getCellStyles","row","col","pos","value","cellStyle","cursor","readOnly","infoLabel","fillValue","handleChange","textFieldProps","onChange","defaultValue","TextField","slotProps","inputLabel","shrink","htmlInput","fullWidth","multiline","borderColor","userSelect","lineHeight","handleAction","newText","clean","TextEditor","runner","initial","useReducer","event","target","PAGE_TITLES","interpreter","wrapDispatch","context","Provider","input","char","includes","cleanInput","prompt","charCodeAt","String","fromCharCode","grid","resetState","before","slice","after","handleKeys","resize","newRows","newCols","k","substring","padEnd","GridEditor","createKeys","clearKeys","mobile","square","useWrappers","getDistance","x","y","xWidth","yWidth","differ","abs","getClosest","warp","compare","getComparison","sort","arrows","velocity","indexOf","double","lastIndexOf","rand","random","sum","ROUTES","interpreters"],"sourceRoot":""}