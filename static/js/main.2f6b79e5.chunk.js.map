{"version":3,"sources":["Components/Snake.js","helpers.js","Components/Buttons.js","Components/Grid.js","back.js","Components/Home.js","index.js"],"names":["createArr","x","window","innerHeight","y","innerWidth","Math","round","arr","Array","map","_","fill","a","floor","random","b","Snake","props","updateDim","bind","changeDir","state","row","length","col","len","pos","vel","move","buff","this","setState","e","s","key","toLowerCase","old","timerID","setInterval","document","addEventListener","clearInterval","removeEventListener","n","num","randomPos","console","log","className","style","height","width","val","bgcolor","cursor","to","marginBottom","type","React","Component","emptyArray","size","pairEquals","Buttons","run","set","onClick","curr","select","pointer","breaks","output","tape","cell","push","grid","pop","navigator","clipboard","writeText","join","Grid","changeText","mode","temp","every","includes","alert","func","code","end","ind","back","c","obj","value","changeColor","chooseColor","tile","fontSize","textAlign","href","m","runCode","color","Home","action","display","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f6b79e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.round(x / 50);\r\n    y = Math.round(y / 50);\r\n    let arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    let a = Math.floor(Math.random() * x);\r\n    let b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        let arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            arr: arr,\r\n            move: true,\r\n            buff: null\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        let arr = [...this.state.arr];\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr: arr});\r\n    }\r\n\r\n    updateDim() {\r\n        let arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr: arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        let s = e.key.toLowerCase();\r\n        let old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (this.state.move) {\r\n            if (old[0] + vel[0])\r\n                this.setState({\r\n                    vel: vel,\r\n                    move: false});\r\n        } else {\r\n            this.setState({\r\n                buff: vel});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        let [a, b] = this.state.vel;\r\n        let {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            let num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n            console.log(this.state.arr);\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        let buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: true,\r\n            pos: [x, y],\r\n            arr: arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr>{\r\n                                a.map((val, col) =>\r\n                                <td bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","export function emptyArray(size) {\r\n    let arr = Array(size).fill(' ');\r\n    return arr.map(x => [...arr]);\r\n}\r\n\r\nexport function pairEquals(x, y) {\r\n    if (x === null || y === null)\r\n        return x === y;\r\n\r\n    return x[0] === y[0]\r\n        && x[1] === y[1];\r\n}","import {Link} from 'react-router-dom';\r\n\r\nexport default function Buttons(props) {\r\n    let {run, set, arr} = props;\r\n\r\n    return (<div>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('run')}>\r\n            ▶\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('back')}>\r\n            &nbsp;❮&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('fore')}>\r\n            &nbsp;❯&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => set({curr: {\r\n                        select: null,\r\n                        pointer: null,\r\n                        breaks: []\r\n                    },\r\n                    output: {\r\n                        tape: [],\r\n                        cell: 0\r\n                    }})}>\r\n            ✖\r\n        </button>\r\n        <br />\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length + 1;\r\n\r\n                    arr.map(x => x.push(' '));\r\n                    arr.push(Array(num).fill(' '));\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➕&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length - 1;\r\n                    if (!num) return;\r\n\r\n                    arr.pop();\r\n                    arr.map(x => x.pop());\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➖&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    navigator.clipboard.writeText(\r\n                        arr.map(x => x.join(''))\r\n                           .join('\\n')\r\n                )}}>\r\n            📥&#xfe0e;\r\n        </button>\r\n        <Link to='/'>\r\n            <button className='custom'\r\n                    type='button'>\r\n                🏠&#xfe0e;\r\n            </button>\r\n        </Link>\r\n    </div>);\r\n}","import {emptyArray, pairEquals} from '../helpers';\r\nimport Buttons from './Buttons';\r\nimport React from 'react';\r\nimport run from '../back';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeText =\r\n            this.changeText\r\n                .bind(this);\r\n        let size = 5;\r\n\r\n        this.state = {\r\n            output: {tape: []},\r\n            grid: emptyArray(size),\r\n            size,\r\n            curr: {\r\n                select: null,\r\n                pointer: null,\r\n                breaks: []\r\n            }\r\n        };\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let curr = this.state.curr;\r\n            curr.select = null;\r\n\r\n            if (this.state.grid.every(e => !e.includes('*'))) {\r\n                alert('No halt instruction detected!');\r\n                this.setState({curr: curr});\r\n                return;\r\n            }\r\n\r\n            if (curr.pointer === null) {\r\n                this.func = run(this.state.grid);\r\n                if (mode !== 'run') {\r\n                    curr.pointer = [0, 0];\r\n                    this.setState({\r\n                        curr: curr,\r\n                        output: {\r\n                            tape: [0],\r\n                            cell: 0\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let temp;\r\n            this.setState({curr: curr});\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!temp.end);\r\n            else if (mode === 'fore')\r\n                temp = this.func();\r\n            else if (mode === 'back')\r\n                temp = this.func(true);\r\n\r\n            let {pos, end, tape, cell} = temp;\r\n            curr.pointer = end ? null : pos;\r\n\r\n            this.setState({\r\n                curr: curr,\r\n                output: {\r\n                    tape: tape,\r\n                    cell: cell\r\n                }\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let obj = this.state.curr;\r\n\r\n        if (obj.select !== null) {\r\n            let arr = this.state.grid;\r\n            let [row, col] = obj.select;\r\n            let value;\r\n\r\n            if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                if (e.key.includes('Left'))\r\n                    col -= 1;\r\n                else if (e.key.includes('Right'))\r\n                    col += 1;\r\n                else if (e.key.includes('Up'))\r\n                    row -= 1;\r\n                else\r\n                    row += 1;\r\n\r\n                let size = this.state.size;\r\n                row = (row + size) % size;\r\n                col = (col + size) % size;\r\n                obj.select = [row, col];\r\n                this.setState({curr: obj});\r\n\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            arr[row][col] = value;\r\n            this.setState({grid: arr});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let curr = this.state.curr;\r\n            curr.select =\r\n                pairEquals(\r\n                        curr.select,\r\n                        pos)\r\n                    ? null : pos;\r\n            this.setState({curr: curr});\r\n        };\r\n    }\r\n\r\n    chooseColor(pos) {\r\n        let curr = this.state.curr;\r\n\r\n        if (pairEquals(\r\n                curr.select,\r\n                pos))\r\n            return 'grey';\r\n        else if (pairEquals(\r\n                curr.pointer,\r\n                pos))\r\n            return 'red';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    tile(val, row, col) {\r\n        let pos = [row, col];\r\n\r\n        return <td\r\n                onClick={this.changeColor(pos).bind(this)}\r\n                bgcolor={this.chooseColor(pos)}>\r\n            <div>&nbsp;{val}&nbsp;</div>\r\n        </td>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <table>\r\n                            <tbody>\r\n                                {this.state.grid.map((arr, row) =>\r\n                                    (<tr>{\r\n                                        arr.map((val, col) =>\r\n                                        this.tile(val, row, col))\r\n                                    }</tr>)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        <ul style={{fontSize: '75%', textAlign: 'left'}}>\r\n                            <li>Click to select/unselect</li>\r\n                            <li>Type to change selected cell</li>\r\n                            <li>\r\n                                Commands located&nbsp;\r\n                                <a href='https://esolangs.org/wiki/Back'>here</a>\r\n                            </li>\r\n                        </ul>\r\n                        <Buttons\r\n                            run={(m) => this.runCode(m)}\r\n                            set={(s) => this.setState(s)}\r\n                            arr={this.state.grid}\r\n                        />\r\n                        <br />\r\n                        <code>Output:</code>\r\n                        <br />\r\n                        <div className='output'>\r\n                            <code>&nbsp;</code>\r\n                            {this.state.output.tape.map((val, ind) => {\r\n                                let color = this.state.output.cell === ind\r\n                                    ? 'red' : 'white';\r\n                                return <code style={{color: color}}>\r\n                                    {val}&nbsp;\r\n                                </code>;})}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","export default function run(code) {\r\n    let row = code.length;\r\n    let col = code[0].length;\r\n    let arr = [{\r\n        end: false,\r\n        pos: [0, 0],\r\n        vel: [0, 1],\r\n        tape: [0],\r\n        cell: 0\r\n    }];\r\n    let ind = 0;\r\n\r\n    return function(back = false) {\r\n        let state = arr[arr.length - 1];\r\n\r\n        if (back && ind)\r\n            ind -= 1;\r\n        else if (!back && !state.end)\r\n            ind += 1;\r\n\r\n        if (ind < arr.length)\r\n            return arr[ind];\r\n\r\n        let {tape, cell, end} = state;\r\n        let [x, y] = state.pos;\r\n        let [a, b] = state.vel;\r\n        let c = code[x][y];\r\n        tape = [...tape];\r\n\r\n        if (c === '\\\\') {\r\n            [a, b] = [b, a];\r\n        } else if (c === '/') {\r\n            [a, b] = [-b, -a];\r\n        } else if (c === '<' && cell) {\r\n            cell -= 1;\r\n        } else if (c === '>') {\r\n            cell += 1;\r\n            if (cell === tape.length)\r\n                tape.push(0);\r\n        } else if (c === '-') {\r\n            tape[cell] ^= 1;\r\n        } else if (c === '+' && !tape[cell]) {\r\n            [x, y] = [x + a, y + b];\r\n        } else if (c === '*') {\r\n            end = true;\r\n        }\r\n\r\n        x = (x + a) % row;\r\n        y = (y + b) % col;\r\n        state = {\r\n            pos: [x, y],\r\n            vel: [a, b],\r\n            tape: tape,\r\n            cell: cell,\r\n            end: end\r\n        };\r\n        arr.push(state);\r\n\r\n        return state;\r\n    };\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <header className='App-header'>\r\n            <h1>Bangyen</h1>\r\n            <div>\r\n                <Link to='/back'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Interpreter\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom' />\r\n                </form>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport Snake from './Components/Snake';\nimport Grid from './Components/Grid';\nimport Home from './Components/Home';\nimport './index.css';\nimport './Grid.css';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router basename='/'>\n            <div>\n                <Switch>\n                    <Route path=\"/back\">\n                        <Grid />\n                    </Route>\n                    <Route path=\"/snake\">\n                        <Snake />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}