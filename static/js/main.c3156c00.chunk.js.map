{"version":3,"sources":["Components/Snake.js","helpers.js","Components/Buttons.js","Components/Grid.js","back.js","Components/Home.js","index.js"],"names":["createArr","x","window","innerHeight","y","innerWidth","Math","round","arr","Array","map","_","fill","a","floor","random","b","Snake","props","updateDim","bind","changeDir","state","row","length","col","len","pos","vel","move","buff","this","setState","e","s","key","toLowerCase","old","timerID","setInterval","document","title","addEventListener","clearInterval","removeEventListener","n","num","randomPos","console","log","className","style","height","width","val","bgcolor","cursor","to","marginBottom","type","React","Component","emptyArray","size","pairEquals","includes","pair","some","p","Buttons","run","set","onClick","curr","select","pointer","breaks","output","tape","cell","push","grid","pop","navigator","clipboard","writeText","join","Grid","changeText","mode","temp","every","alert","func","code","end","ind","back","c","obj","value","filter","changeColor","chooseColor","tile","fontSize","textAlign","href","m","runCode","color","Home","action","display","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3156c00.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.round(x / 50);\r\n    y = Math.round(y / 50);\r\n    let arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    let a = Math.floor(Math.random() * x);\r\n    let b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        let arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            arr: arr,\r\n            move: true,\r\n            buff: null\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        let arr = [...this.state.arr];\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr: arr});\r\n    }\r\n\r\n    updateDim() {\r\n        let arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr: arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        let s = e.key.toLowerCase();\r\n        let old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (this.state.move) {\r\n            if (old[0] + vel[0])\r\n                this.setState({\r\n                    vel: vel,\r\n                    move: false});\r\n        } else {\r\n            this.setState({\r\n                buff: vel});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        let [a, b] = this.state.vel;\r\n        let {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            let num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n            console.log(this.state.arr);\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        let buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: true,\r\n            pos: [x, y],\r\n            arr: arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr>{\r\n                                a.map((val, col) =>\r\n                                <td bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","export function emptyArray(size) {\r\n    let arr = Array(size).fill(' ');\r\n    return arr.map(x => [...arr]);\r\n}\r\n\r\nexport function pairEquals(x, y) {\r\n    if (x === null || y === null)\r\n        return x === y;\r\n\r\n    return x[0] === y[0]\r\n        && x[1] === y[1];\r\n}\r\n\r\nexport function includes(arr, pair) {\r\n    return arr.some(p =>\r\n        pairEquals(p, pair));\r\n}\r\n","import {Link} from 'react-router-dom';\r\n\r\nexport default function Buttons(props) {\r\n    let {run, set, arr} = props;\r\n\r\n    return (<div>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('run')}>\r\n            ▶\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('back')}>\r\n            &nbsp;❮&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('fore')}>\r\n            &nbsp;❯&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => set({curr: {\r\n                        select: null,\r\n                        pointer: null,\r\n                        breaks: []\r\n                    },\r\n                    output: {\r\n                        tape: [],\r\n                        cell: 0\r\n                    }})}>\r\n            ✖\r\n        </button>\r\n        <br />\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length + 1;\r\n\r\n                    arr.map(x => x.push(' '));\r\n                    arr.push(Array(num).fill(' '));\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➕&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length - 1;\r\n                    if (!num) return;\r\n\r\n                    arr.pop();\r\n                    arr.map(x => x.pop());\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➖&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    navigator.clipboard.writeText(\r\n                        arr.map(x => x.join(''))\r\n                           .join('\\n')\r\n                )}}>\r\n            📥&#xfe0e;\r\n        </button>\r\n        <Link to='/'>\r\n            <button className='custom'\r\n                    type='button'>\r\n                🏠&#xfe0e;\r\n            </button>\r\n        </Link>\r\n    </div>);\r\n}","import {emptyArray, pairEquals, includes} from '../helpers';\r\nimport Buttons from './Buttons';\r\nimport React from 'react';\r\nimport run from '../back';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeText =\r\n            this.changeText\r\n                .bind(this);\r\n        let size = 5;\r\n\r\n        this.state = {\r\n            output: {tape: []},\r\n            grid: emptyArray(size),\r\n            size,\r\n            curr: {\r\n                select: null,\r\n                pointer: null,\r\n                breaks: []\r\n            }\r\n        };\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let curr = this.state.curr;\r\n            curr.select = null;\r\n\r\n            if (this.state.grid.every(e => !e.includes('*'))) {\r\n                alert('No halt instruction detected!');\r\n                this.setState({curr: curr});\r\n                return;\r\n            }\r\n\r\n            if (curr.pointer === null) {\r\n                this.func = run(this.state.grid);\r\n                if (mode !== 'run') {\r\n                    curr.pointer = [0, 0];\r\n                    this.setState({\r\n                        curr: curr,\r\n                        output: {\r\n                            tape: [0],\r\n                            cell: 0\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let temp;\r\n            this.setState({curr: curr});\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(includes(\r\n                    this.state.curr.breaks,\r\n                    temp.pos) || temp.end));\r\n            else if (mode === 'fore')\r\n                temp = this.func();\r\n            else if (mode === 'back')\r\n                temp = this.func(true);\r\n\r\n            let {pos, end, tape, cell} = temp;\r\n            curr.pointer = end ? null : pos;\r\n\r\n            this.setState({\r\n                curr: curr,\r\n                output: {\r\n                    tape: tape,\r\n                    cell: cell\r\n                }\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let obj = this.state.curr;\r\n\r\n        if (obj.select !== null) {\r\n            let arr = this.state.grid;\r\n            let [row, col] = obj.select;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                let curr = {...this.state.curr};\r\n                let breaks = curr.breaks;\r\n                let select = curr.select;\r\n\r\n                if (includes(breaks, select))\r\n                    curr.breaks = breaks.filter(p =>\r\n                        !pairEquals(p, select));\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({curr: curr});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                if (e.key.includes('Left'))\r\n                    col -= 1;\r\n                else if (e.key.includes('Right'))\r\n                    col += 1;\r\n                else if (e.key.includes('Up'))\r\n                    row -= 1;\r\n                else\r\n                    row += 1;\r\n\r\n                let size = this.state.size;\r\n                row = (row + size) % size;\r\n                col = (col + size) % size;\r\n                obj.select = [row, col];\r\n                this.setState({curr: obj});\r\n\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            arr[row][col] = value;\r\n            this.setState({grid: arr});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let curr = this.state.curr;\r\n            curr.select =\r\n                pairEquals(\r\n                        curr.select,\r\n                        pos)\r\n                    ? null : pos;\r\n            this.setState({curr: curr});\r\n        };\r\n    }\r\n\r\n    chooseColor(pos) {\r\n        let curr = this.state.curr;\r\n\r\n        if (pairEquals(\r\n                curr.select,\r\n                pos))\r\n            return 'grey';\r\n        else if (pairEquals(\r\n                curr.pointer,\r\n                pos))\r\n            return 'red';\r\n        else if (includes(\r\n                curr.breaks,\r\n                pos))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    tile(val, row, col) {\r\n        let pos = [row, col];\r\n\r\n        return <td\r\n                onClick={this.changeColor(pos).bind(this)}\r\n                bgcolor={this.chooseColor(pos)}>\r\n            <div>&nbsp;{val}&nbsp;</div>\r\n        </td>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <table>\r\n                            <tbody>\r\n                                {this.state.grid.map((arr, row) =>\r\n                                    (<tr>{\r\n                                        arr.map((val, col) =>\r\n                                        this.tile(val, row, col))\r\n                                    }</tr>)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        <ul style={{fontSize: '75%', textAlign: 'left'}}>\r\n                            <li>Click to select/unselect</li>\r\n                            <li>Type to change selected cell</li>\r\n                            <li>\r\n                                Commands located&nbsp;\r\n                                <a href='https://esolangs.org/wiki/Back'>here</a>\r\n                            </li>\r\n                        </ul>\r\n                        <Buttons\r\n                            run={(m) => this.runCode(m)}\r\n                            set={(s) => this.setState(s)}\r\n                            arr={this.state.grid}\r\n                        />\r\n                        <br />\r\n                        <code>Output:</code>\r\n                        <br />\r\n                        <div className='output'>\r\n                            <code>&nbsp;</code>\r\n                            {this.state.output.tape.map((val, ind) => {\r\n                                let color = this.state.output.cell === ind\r\n                                    ? 'red' : 'white';\r\n                                return <code style={{color: color}}>\r\n                                    {val}&nbsp;\r\n                                </code>;})}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","export default function run(code) {\r\n    let row = code.length;\r\n    let col = code[0].length;\r\n    let arr = [{\r\n        end: false,\r\n        pos: [0, 0],\r\n        vel: [0, 1],\r\n        tape: [0],\r\n        cell: 0\r\n    }];\r\n    let ind = 0;\r\n\r\n    return function(back = false) {\r\n        let state = arr[arr.length - 1];\r\n\r\n        if (back && ind)\r\n            ind -= 1;\r\n        else if (!back && !state.end)\r\n            ind += 1;\r\n\r\n        if (ind < arr.length)\r\n            return arr[ind];\r\n\r\n        let {tape, cell, end} = state;\r\n        let [x, y] = state.pos;\r\n        let [a, b] = state.vel;\r\n        let c = code[x][y];\r\n        tape = [...tape];\r\n\r\n        if (c === '\\\\') {\r\n            [a, b] = [b, a];\r\n        } else if (c === '/') {\r\n            [a, b] = [-b, -a];\r\n        } else if (c === '<' && cell) {\r\n            cell -= 1;\r\n        } else if (c === '>') {\r\n            cell += 1;\r\n            if (cell === tape.length)\r\n                tape.push(0);\r\n        } else if (c === '-') {\r\n            tape[cell] ^= 1;\r\n        } else if (c === '+' && !tape[cell]) {\r\n            [x, y] = [x + a, y + b];\r\n        } else if (c === '*') {\r\n            end = true;\r\n        }\r\n\r\n        x = (x + a) % row;\r\n        y = (y + b) % col;\r\n        state = {\r\n            pos: [x, y],\r\n            vel: [a, b],\r\n            tape: tape,\r\n            cell: cell,\r\n            end: end\r\n        };\r\n        arr.push(state);\r\n\r\n        return state;\r\n    };\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    document.title = 'Home';\r\n    return (\r\n        <header className='App-header'>\r\n            <h1>Bangyen</h1>\r\n            <div>\r\n                <Link to='/back'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Interpreter\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom' />\r\n                </form>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport Snake from './Components/Snake';\nimport Grid from './Components/Grid';\nimport Home from './Components/Home';\nimport './index.css';\nimport './Grid.css';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router basename='/'>\n            <div>\n                <Switch>\n                    <Route path=\"/back\">\n                        <Grid />\n                    </Route>\n                    <Route path=\"/snake\">\n                        <Snake />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}