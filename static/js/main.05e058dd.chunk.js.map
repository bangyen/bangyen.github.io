{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Interpreters/WII2D.js","Components/Snake.js","Components/Home.js","Components/Error.js","Components/Videos.js","index.js"],"names":["button","sym","func","className","type","onClick","resize","str","arr","split","map","val","length","col","Math","max","row","move","obj","pos","vel","old","size","wrap","quo","mod","floor","bind","num","lim","Grid","props","changeColor","changeText","changeSize","changeGrid","state","start","grid","repeat","select","breaks","text","edit","document","title","this","name","addEventListener","removeEventListener","mode","clean","run","temp","setState","includes","end","e","value","key","toLowerCase","filter","p","push","substring","cell","event","target","v","trimEnd","len","join","empty","Array","keys","i","onChange","onPaste","rows","cols","table","x","j","bgcolor","chooseColor","toString","link","style","fontSize","textAlign","href","runCode","to","tape","ind","color","out","reg","acc","getTable","getInfo","getButtons","getTape","getOutput","getRegister","React","Component","Back","code","every","alert","back","c","a","b","outer","handleChange","prog","ptr","getProgram","Suffolk","input","inp","prompt","charCodeAt","String","fromCharCode","StunStep","error","res","dist","y","diff","abs","close","warp","sort","comp","dir","indexOf","rnd","random","WII2D","createArr","window","innerHeight","innerWidth","_","fill","Snake","updateDim","changeDir","buff","s","timerID","setInterval","clearInterval","n","randomPos","height","width","cursor","marginBottom","Home","action","display","Error","padding","getVideo","embedId","src","frameBorder","allow","allowFullScreen","Videos","id","change","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05e058dd.chunk.js","sourcesContent":["export function button(sym, func) {\r\n    return <button className='custom'\r\n                type='button'\r\n                onClick={func}>\r\n            {sym}\r\n        </button>;\r\n}\r\n\r\nexport function resize(str) {\r\n    const arr = str.split('\\n')\r\n        .map(val => val.length);\r\n    let col = Math.max(...arr);\r\n    let row = arr.length;\r\n\r\n    if (row < 15)\r\n        row = 15;\r\n    if (col < 65)\r\n        col = 65;\r\n\r\n    return [row, col];\r\n}\r\n\r\nexport function move(obj) {\r\n    const {\r\n        pos, vel, old,\r\n        size = old,\r\n        wrap = true\r\n    } = obj;\r\n\r\n    let [quo, mod] = vel;\r\n    quo += Math.floor(pos / old);\r\n    mod += pos % old;\r\n\r\n    if (wrap) {\r\n        quo = (quo + size) % size;\r\n        mod = (mod + size) % size;\r\n    } else {\r\n        quo = bind(quo, size);\r\n        mod = bind(mod, size);\r\n    }\r\n\r\n    return quo * size + mod;\r\n}\r\n\r\nfunction bind(num, lim) {\r\n    if (num >= lim)\r\n        num = lim - 1;\r\n    else if (num < 0)\r\n        num = 0;\r\n\r\n    return num;\r\n}","import {button, resize, move} from './helper';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText = this.changeText.bind(this);\r\n        this.changeSize = this.changeSize.bind(this);\r\n        this.changeGrid = this.changeGrid.bind(this);\r\n        const size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: ' '.repeat(size * size),\r\n            size,\r\n            select: null,\r\n            pos:    null,\r\n            breaks: [],\r\n            text: false,\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.edit)\r\n                this.clean();\r\n\r\n            if (this.state.pos === null) {\r\n                this.func = this.props.run(\r\n                    this.state.grid);\r\n\r\n                if (mode !== 'run') {\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        select: null,\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.setState({select: null});\r\n            let temp;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(this.state\r\n                               .breaks\r\n                               .includes(temp.pos)\r\n                    || temp.end));\r\n            else if (mode === 'next')\r\n                temp = this.func();\r\n            else if (mode === 'prev')\r\n                temp = this.func(true);\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks, text} = this.state;\r\n\r\n        if (select !== null && !text) {\r\n            let str = this.state.grid;\r\n            const size = str.length;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (breaks.includes(select))\r\n                    breaks = breaks.filter(p =>\r\n                        p !== select);\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                let vel;\r\n\r\n                if (e.key.includes('Left'))\r\n                    vel = [0, -1];\r\n                else if (e.key.includes('Right'))\r\n                    vel = [0, 1];\r\n                else if (e.key.includes('Up'))\r\n                    vel = [-1, 0];\r\n                else if (e.key.includes('Down'))\r\n                    vel = [1, 0];\r\n\r\n                select = move({\r\n                    pos: select,\r\n                    old: size,\r\n                    vel\r\n                });\r\n\r\n                this.setState({select});\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            str = str.substring(0, select)\r\n                + value\r\n                + str.substring(select + 1);\r\n            this.setState({grid: str});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = select === pos\r\n                ? null : pos;\r\n            this.setState({select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        const {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (cell === select)\r\n            return 'grey';\r\n        else if (cell === pos)\r\n            return 'red';\r\n        else if (breaks.includes(cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    changeGrid(event) {\r\n        const val = event.target.value;\r\n        this.setState({\r\n            grid: val,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    clean() {\r\n        let val = this.state.grid\r\n            .split('\\n')\r\n            .map(v => v.trimEnd())\r\n            .filter(v => v !== '');\r\n\r\n        const max = Math.max(val.length,\r\n            ...val.map(v => v.length));\r\n\r\n        while (val.length < max)\r\n            val.push('');\r\n\r\n        val = val.map(v => {\r\n            const len = v.length;\r\n\r\n            if (len < max)\r\n                v += ' '.repeat(max - len);\r\n            else\r\n                v = v.substring(0, max);\r\n\r\n            return v;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.props.start,\r\n            grid: val.join(''),\r\n            size: max,\r\n            pos: null,\r\n            text: false,\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    getTable() {\r\n        const {grid, size, edit} = this.state;\r\n\r\n        if (this.state.text) {\r\n            let value = '';\r\n\r\n            if (edit) {\r\n                value = grid;\r\n            } else {\r\n                if (grid === ' '.repeat(size * size)) {\r\n                    value = 'Input program here...';\r\n                } else {\r\n                    const empty = ' '.repeat(size);\r\n                    const split = [...Array(5).keys()]\r\n                        .map(v => grid.substring(\r\n                            size * v, size * (v + 1)))\r\n                        .filter(v => v !== empty);\r\n                    const len = split.length;\r\n\r\n                    for (let i = 0; i < len; i++) {\r\n                        value += split[i].trimEnd();\r\n\r\n                        if (i + 1 !== len)\r\n                            value += '\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            const [row, col]\r\n                = resize(value);\r\n\r\n            return <form>\r\n                <label>\r\n                    <textarea\r\n                        value={value}\r\n                        onChange={this.changeGrid}\r\n                        onPaste={this.changeGrid}\r\n                        rows={row} cols={col} />\r\n                </label>\r\n            </form>;\r\n        }\r\n\r\n        let table = [...Array(size)]\r\n            .map(x => Array(size));\r\n        let pos;\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                pos = size * i + j;\r\n                table[i][j] = <td key={`${pos}`}\r\n                        className='cell select'\r\n                        onClick={this.changeColor(pos)}\r\n                        bgcolor={this.chooseColor(pos)}>\r\n                    <div>\r\n                        &nbsp;{grid[pos]}&nbsp;\r\n                    </div>\r\n                </td>;\r\n            }\r\n        }\r\n\r\n        return <table className='grid'>\r\n            <tbody>\r\n                {table.map((arr, row) =>\r\n                    <tr key={row.toString()}>\r\n                        {arr}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n\r\n    getInfo() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{\r\n                    fontSize: '75%',\r\n                    textAlign: 'left'}}>\r\n                <li>Click to select/unselect</li>\r\n                <li>Type to change selected cell</li>\r\n                <li>Press (b) to use breakpoints</li>\r\n                <li>\r\n                    {name} commands located&nbsp;\r\n                    <a href={link}>here</a>\r\n                </li>\r\n            </ul>;\r\n    }\r\n\r\n    changeSize(num) {\r\n        let {\r\n            grid, size,\r\n            select, text\r\n        } = this.state;\r\n\r\n        return function() {\r\n            if (!num || text)\r\n                return;\r\n\r\n            let arr = '';\r\n            select = move({\r\n                pos: select,\r\n                vel: [0, 0],\r\n                old: size,\r\n                size: num,\r\n                wrap: false\r\n            });\r\n\r\n            for (let i = 0; i < num; i++)\r\n                for (let j = 0; j < num; j++)\r\n                    if (i < size && j < size)\r\n                        arr += grid[size * i + j];\r\n                    else\r\n                        arr += ' ';\r\n\r\n            this.setState({\r\n                grid: arr,\r\n                size: num,\r\n                select\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    getButtons() {\r\n        const {size, text, edit} = this.state;\r\n\r\n        return (<div>\r\n                {button('▶', this.runCode('run'))}\r\n                {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                {button('✖', () => {\r\n                    if (this.state.text)\r\n                        return;\r\n\r\n                    const obj = this.props.start;\r\n                    obj.pos = null;\r\n\r\n                    this.setState(obj);\r\n                })}\r\n                <br />\r\n                {button('➕\\ufe0e', this.changeSize(size + 1))}\r\n                {button('➖\\ufe0e', this.changeSize(size - 1))}\r\n                {button('📥\\ufe0e',\r\n                    () => {\r\n                        if (edit)\r\n                            this.clean();\r\n                         else\r\n                            this.setState({\r\n                                text: !text\r\n                    })})}\r\n                <Link to='/'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;\r\n        });\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        {this.getTable()}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        {this.getInfo()}\r\n                        {this.getButtons()}\r\n                        <br />\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code) {\r\n        if (code.every(\r\n                e => !e.includes('*'))) {\r\n            alert('No halt instruction detected!');\r\n        }\r\n\r\n        let size = code.length;\r\n        let vel = [0, 1];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let c = code[pos];\r\n            let [a, b] = vel;\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                vel = [b, a];\r\n            } else if (c === '/') {\r\n                vel = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                do {\r\n                    pos = wrap(pos);\r\n                    c = code[pos];\r\n                } while (!'\\\\/<>-+*'.includes(c));\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            if (pos !== null)\r\n                pos = wrap(pos);\r\n\r\n            state = {\r\n                pos,\r\n                tape,\r\n                cell,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        pos: 0,\r\n        end: false,\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {button, resize} from './helper';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let state;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    state = this.func();\r\n                } while (!state.end);\r\n            else if (mode === 'prev')\r\n                state = this.func(true);\r\n            else\r\n                state = this.func();\r\n\r\n            this.setState(state);\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            const {run, code}\r\n                = this.props.run(val);\r\n\r\n            this.func = run;\r\n            this.setState({\r\n                ...this.props.start,\r\n                value: val,\r\n                code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        const code = this.state.code;\r\n        const prog = [...code].map((val, ind) => {\r\n            const color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        const {name, link} = this.props;\r\n        const [row, col]\r\n            = resize(this.state.value);\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name + ' '}\r\n                            (<a href={'https://esolangs.org/wiki/'\r\n                                    + (link ? link : name)}>\r\n                                Commands\r\n                            </a>)\r\n                        </code>\r\n                        <br /><br />\r\n                        <form>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col} />\r\n                            </label>\r\n                        </form>\r\n                        {button('▶', this.runCode('run'))}\r\n                        {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                        {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                        <Link to='/'>\r\n                            <button className='custom'\r\n                                    type='button'>\r\n                                🏠&#xfe0e;\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getProgram()}\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('><!,.'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape, acc, ind,\r\n                ptr,  out, end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('+-><'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape,\r\n                ind,\r\n                ptr,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function error(str) {\r\n        alert(str + ' start '\r\n            + 'location detected!');\r\n\r\n        let res = {end: true};\r\n        obj.pos = null;\r\n\r\n        return () => res;\r\n    }\r\n\r\n    function dist(x, y, size) {\r\n        let diff = Math.abs(x - y);\r\n        let quo = Math.floor(diff / size);\r\n        let mod = diff % size;\r\n\r\n        return quo + mod;\r\n    }\r\n\r\n    function comp(pos, size) {\r\n        return (x, y) =>\r\n            dist(pos, x, size)\r\n          - dist(pos, y, size);\r\n    }\r\n\r\n    function close(pos, arr) {\r\n        let size = arr.length;\r\n        let warp = [];\r\n\r\n        for (let i in arr)\r\n            for (let j in arr)\r\n                if (arr[i][j] === '@')\r\n                    warp.push(size * i + +j);\r\n\r\n        warp.sort(comp(pos, size));\r\n        return warp.length > 1\r\n            ? warp[1] : pos;\r\n    }\r\n\r\n    let str = '^v<>';\r\n    let dir = [\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [0, 1]\r\n        ];\r\n\r\n    function run(code) {\r\n        let size = code.length;\r\n        let vel = dir[0];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        if (code.every(\r\n                e => !e.includes('!'))) {\r\n            return error('No');\r\n        }\r\n\r\n        for (let i in code)\r\n            for (let j in code)\r\n                if (code[i][j] === '!') {\r\n                    if (obj.pos !== null)\r\n                        return error('Additional');\r\n\r\n                    obj.pos = size * i + +j;\r\n                }\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {pos, end, out, acc} = state;\r\n            let c = code[pos];\r\n\r\n            if (str.includes(c)) {\r\n                vel = dir[str.indexOf(c)];\r\n            } else if (c === '|') {\r\n                vel = [-vel[0], -vel[1]];\r\n            } else if (c === '@') {\r\n                pos = close(pos, code);\r\n                pos -= size;\r\n\r\n                if (pos < 0)\r\n                    pos += size * size;\r\n            } else if (+c) {\r\n                acc = +c;\r\n            } else if (c === '+') {\r\n                acc += 1;\r\n            } else if (c === '-') {\r\n                acc -= 1;\r\n            } else if (c === '*') {\r\n                acc *= 2;\r\n            } else if (c === 's') {\r\n                acc = acc * acc;\r\n            } else if (c === '/') {\r\n                acc = Math.floor(acc / 2);\r\n            } else if (c === '~') {\r\n                out += String.fromCharCode(acc);\r\n            } else if (c === '?') {\r\n                let rnd = Math.random() * 4;\r\n                vel = dir[Math.floor(rnd)];\r\n            } else if (c === '.') {\r\n                obj.pos = null;\r\n                pos = null;\r\n                end = true;\r\n            }\r\n\r\n            if (pos !== null && c !== '@')\r\n                pos = wrap(pos);\r\n\r\n            state = {pos, end, out, acc};\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function WII2D() {\r\n    let obj = {\r\n        pos: null,\r\n        end: false,\r\n        out: '',\r\n        acc: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='WII2D'\r\n        start={obj}\r\n        run={run}\r\n        out={true}\r\n        reg={true} />;\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    const arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    const a = Math.floor(Math.random() * x);\r\n    const b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        const arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            move: true,\r\n            buff: null,\r\n            arr\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        const arr = [...this.state.arr];\r\n        const row = this.state.row;\r\n        const col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr});\r\n    }\r\n\r\n    updateDim() {\r\n        const arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        const s = e.key.toLowerCase();\r\n        const old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    move: false,\r\n                    vel});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        const [a, b] = this.state.vel;\r\n        const {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            const num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        const buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}\r\n                        className='grid'>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                    className='cell select'\r\n                                    bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default function Home() {\r\n    document.title = 'Home | Bangyen';\r\n\r\n    return (\r\n        <header className='App-header select'>\r\n            <h1 className='logo'>\r\n                Bangyen\r\n            </h1>\r\n            <div>\r\n                <div className='dropdown'>\r\n                    <button className='custom'>\r\n                        Interpreters\r\n                    </button>\r\n                    <div className='dropdown-content'>\r\n                        <Link to='/back'>\r\n                            Back\r\n                        </Link>\r\n                        <Link to='/stun_step'>\r\n                            Stun Step\r\n                        </Link>\r\n                        <Link to='/suffolk'>\r\n                            Suffolk\r\n                        </Link>\r\n                        <Link to='/WII2D'>\r\n                            WII2D\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Link to='/videos'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Videos\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom' />\r\n                </form>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Error() {\r\n    document.title = 'Page Not Found | Bangyen';\r\n    return (\r\n        <header className='App-header'>\r\n            <code style={{padding: '10px'}}>\r\n                This page isn't available.\r\n            </code>\r\n            <Link to='/' style={{ marginBottom: '20px' }}>\r\n                <button className='custom'\r\n                        type='button'>\r\n                    🏠&#xfe0e;\r\n                </button>\r\n            </Link>\r\n        </header>\r\n    );\r\n}","import {Link} from 'react-router-dom';\r\nimport {button} from './helper';\r\nimport React from \"react\";\r\n\r\nfunction getVideo(embedId, name) {\r\n    return <div>\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allow={`\r\n                accelerometer;\r\n                autoplay;\r\n                clipboard-write;\r\n                encrypted-media;\r\n                gyroscope;\r\n                picture-in-picture\r\n            `}\r\n            allowFullScreen\r\n            title={name}\r\n        />\r\n    </div>;\r\n}\r\n\r\nexport default class Videos extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.id = [\r\n            ['Project Glow DC 2022', 'uoaCbzWmDVk'],\r\n            ['Chicago', 'Ay6w4Fsk8Ec'],\r\n            ['Washington, DC', 'xM4Ttema4cg'],\r\n            ['Firefly 2021', 'nnwVZDGj-SU']\r\n        ];\r\n\r\n        this.change\r\n            = this.change.bind(this);\r\n        this.state = {num: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Videos | Bangyen';\r\n    }\r\n\r\n    change(val) {\r\n        const len = this.id.length;\r\n        const {num} = this.state;\r\n        val = num + val + len;\r\n\r\n        return () => {\r\n            this.setState({\r\n                num: val % len\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {num} = this.state;\r\n        const [name, id] = this.id[num];\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1>\r\n                    <code>\r\n                        {name}\r\n                    </code>\r\n                </h1>\r\n                {getVideo(id, name)}\r\n                <div>\r\n                    {button('\\xa0❮\\xa0',\r\n                        this.change(-1))}\r\n                    <Link to='/'>\r\n                        <button className='custom'\r\n                                type='button'>\r\n                            🏠&#xfe0e;\r\n                        </button>\r\n                    </Link>\r\n                    {button('\\xa0❯\\xa0',\r\n                        this.change(1))}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport WII2D from './Components/Interpreters/WII2D';\r\n\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\nimport Videos from './Components/Videos';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\nimport './Button.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/WII2D\">\r\n                        <WII2D />\r\n                    </Route>\r\n                    <Route exact path=\"/videos\">\r\n                        <Videos />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}