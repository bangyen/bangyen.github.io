{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Interpreters/WII2D.js","Components/Snake.js","Components/Home.js","Components/Error.js","Components/Videos.js","index.js"],"names":["getDim","width","window","innerWidth","innerHeight","button","sym","title","func","max","min","n","calc","m","mode","className","type","onClick","style","height","maxWidth","maxHeight","fontSize","lineHeight","home","to","resize","str","arr","split","map","val","length","col","Math","move","obj","pos","vel","old","size","wrap","quo","mod","floor","bind","num","lim","Grid","props","changeColor","changeText","changeSize","stack","setState","state","start","grid","repeat","select","breaks","text","edit","document","this","name","addEventListener","clearInterval","timerID","removeEventListener","clean","run","temp","setInterval","end","includes","e","value","key","toLowerCase","filter","p","push","substring","cell","v","trimEnd","Array","fill","len","join","css","empty","keys","i","row","changeGrid","target","placeholder","onChange","onPaste","rows","cols","minWidth","minHeight","cellSize","table","x","j","bgcolor","chooseColor","toString","link","margin","padding","textAlign","href","runCode","tape","ind","color","out","reg","acc","left","getInfo","getButtons","getTape","getOutput","getRegister","getTable","marginTop","React","Component","Back","code","alert","back","c","a","b","outer","reset","handleChange","event","prog","ptr","right","getProgram","getLeft","input","Suffolk","inp","prompt","charCodeAt","String","fromCharCode","StunStep","error","res","dist","y","diff","abs","close","warp","k","sort","comp","dir","indexOf","rnd","random","WII2D","createArr","_","Snake","updateDim","changeDir","buff","s","randomPos","overflow","borderSpacing","cursor","borderRadius","position","bottom","Home","action","display","Error","paddingBottom","getVideo","embedId","src","frameBorder","allowFullScreen","Videos","id","changeNum","changeWidth","getWidth","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAEO,SAASA,IACZ,IAAMC,EAASC,OAAOC,WAEtB,OADeD,OAAOE,YACN,KAAOH,EAGpB,SAASI,EAAOC,EAAKC,EAAOC,GAAoB,IAAdC,EAAa,wDAC5CC,EAAO,SAACC,GAAD,oBAAkB,IAAJA,EAAd,eAAgC,GAAJA,EAA5B,QACPC,EAAO,SAACC,EAAGF,GAAJ,qBAAkBE,EAAlB,cAAyBF,EAAzB,MACPG,EAAOd,IACP,eACA,oBAEN,OAAO,wBAAQe,UAAU,SACjBC,KAAK,SACLC,QAAST,EACTD,MAAOA,EACPW,MAAO,CACHjB,MAAOW,EAAKE,EAAM,GAClBK,OAAQP,EAAKE,EAAM,MACnBM,SAAWX,EAAMC,EAAI,GAAK,GAC1BW,UAAWZ,EAAMC,EAAI,GAAK,IAR/B,SAUH,qBAAKQ,MAAO,CACJI,SAAUb,EAAG,cACFG,EAAKE,EAAM,IADT,kCAEPJ,EAAI,GAFG,KAEK,GAClBa,WAAY,OAJpB,SAMKjB,MAKN,SAASkB,EAAKf,GACjB,OAAO,cAAC,IAAD,CAAMgB,GAAG,IAAT,SACFpB,EAAO,qBAAY,OAAQ,KAAMI,KAInC,SAASiB,EAAOC,GACnB,IAAMC,EAAMD,EAAIE,MAAM,MACjBC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,EAAMC,KAAKzB,IAAL,MAAAyB,KAAI,YAAQN,IAGtB,MAAO,CAFGA,EAAII,OAEDC,GAGV,SAASE,EAAKC,GACjB,IACIC,EAGAD,EAHAC,IAAKC,EAGLF,EAHKE,IAAKC,EAGVH,EAHUG,IADd,EAIIH,EAFAI,YAFJ,MAEWD,EAFX,IAIIH,EADAK,YAHJ,SAMA,cAAiBH,EAAjB,GAAKI,EAAL,KAAUC,EAAV,KAYA,OAXAD,GAAOR,KAAKU,MAAMP,EAAME,GACxBI,GAAON,EAAME,EAETE,GACAC,GAAOA,EAAMF,GAAQA,EACrBG,GAAOA,EAAMH,GAAQA,IAErBE,EAAMG,EAAKH,EAAKF,GAChBG,EAAME,EAAKF,EAAKH,IAGbE,EAAMF,EAAOG,EAGxB,SAASE,EAAKC,EAAKC,GAMf,OALID,GAAOC,EACPD,EAAMC,EAAM,EACPD,EAAM,IACXA,EAAM,GAEHA,E,kDCxEUE,E,kDACjB,WAAYC,GAAe,IAAD,uBACtB,cAAMA,IAEDC,YAAc,EAAKA,YAAYL,KAAjB,gBACnB,EAAKM,WAAa,EAAKA,WAAWN,KAAhB,gBAClB,EAAKO,WAAa,EAAKA,WAAWP,KAAhB,gBAClB,EAAKQ,MAAQ,WACT,IAAMA,EAAQrD,IACd,EAAKsD,SAAS,CAACD,WARG,OAatB,EAAKE,MAAL,2BACO,EAAKN,MAAMO,OADlB,IAEIC,KAAM,IAAIC,OAAOlB,IACjBA,KALS,EAMTmB,OAAQ,KACRtB,IAAQ,KACRuB,OAAQ,GACRC,MAAM,EACNC,MAAM,EACNT,MAAOrD,MAtBW,E,qDA0B1B,WACI+D,SAASxD,MAAQyD,KAAKf,MAAMgB,KACtB,yBACNF,SAASG,iBACL,UACAF,KAAKb,YACL,GACJjD,OAAOgE,iBACH,SAAUF,KAAKX,S,kCAGvB,WACIc,cAAcH,KAAKI,SACnBL,SAASM,oBACL,UACAL,KAAKb,YACL,GACJjD,OAAOmE,oBACH,SAAUL,KAAKX,S,qBAGvB,SAAQvC,GACJ,OAAO,WAAY,IAAD,OACd,GAAIkD,KAAKT,MAAMO,KACXE,KAAKM,aAEF,GAAIN,KAAKT,MAAMM,KAClBG,KAAKV,SAAS,CAACO,MAAM,QADlB,CAKP,GAAuB,OAAnBG,KAAKT,MAAMlB,IAAc,CACzB,MAAqB2B,KAAKT,MAAnBE,EAAP,EAAOA,KAAMjB,EAAb,EAAaA,KACb,EAAqBwB,KAAKf,MAAnBsB,EAAP,EAAOA,IAAKf,EAAZ,EAAYA,MAQZ,GAPAQ,KAAKxD,KAAO+D,EAAId,EAAMjB,GAEtBwB,KAAKV,SAAL,2BACOE,GADP,IAEIG,OAAQ,QAGC,QAAT7C,EACA,OAIR,IAAI0D,EAEJ,GAHAL,cAAcH,KAAKI,SAGN,QAATtD,EAAgB,CAUhBkD,KAAKI,QAAUK,aATF,WACT,EAAKnB,SAAS,EAAK9C,QACnB,MACM,EAAK+C,MADJlB,EAAP,EAAOA,IAAKqC,EAAZ,EAAYA,KAAZ,EAAiBd,OAGNe,SAAStC,IAAQqC,IACxBP,cAAc,EAAKC,WAGM,UAEjCI,EADgB,SAAT1D,EACAkD,KAAKxD,OAELwD,KAAKxD,MAAK,GAGrBwD,KAAKV,SAASkB,KAChB3B,KAAKmB,Q,wBAGX,SAAWY,GACP,MAA6BZ,KAAKT,MAA7BI,EAAL,EAAKA,OAAQC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,KAErB,GAAe,OAAXF,IAAoBE,EAAM,CAC1B,IAEIgB,EAFAlD,EAAMqC,KAAKT,MAAME,KACfjB,EAAOb,EAAIK,OAGjB,GAA4B,MAAxB4C,EAAEE,IAAIC,cAQN,OAPInB,EAAOe,SAAShB,GAChBC,EAASA,EAAOoB,QAAO,SAAAC,GAAC,OACpBA,IAAMtB,KAEVC,EAAOsB,KAAKvB,QAEhBK,KAAKV,SAAS,CAACM,WAEZ,GAAqB,IAAjBgB,EAAEE,IAAI9C,OACb6C,EAAQD,EAAEE,QACP,CAIH,IAAIxC,EAJD,GAAc,cAAVsC,EAAEE,KACQ,WAAVF,EAAEE,IAEN,OAAIF,EAAEE,IAAIH,SAAS,UAGlBC,EAAEE,IAAIH,SAAS,QACfrC,EAAM,CAAC,GAAI,GACNsC,EAAEE,IAAIH,SAAS,SACpBrC,EAAM,CAAC,EAAG,GACLsC,EAAEE,IAAIH,SAAS,MACpBrC,EAAM,EAAE,EAAG,GACNsC,EAAEE,IAAIH,SAAS,UACpBrC,EAAM,CAAC,EAAG,IAEdqB,EAASxB,EAAK,CACVE,IAAKsB,EACLpB,IAAKC,EACLF,aAGJ0B,KAAKV,SAAS,CAACK,iBAGf,EAtBAkB,EAAQ,IAyBZlD,EAAMA,EAAIwD,UAAU,EAAGxB,GACjBkB,EACAlD,EAAIwD,UAAUxB,EAAS,GAC7BK,KAAKV,SAAS,CAACG,KAAM9B,O,yBAI7B,SAAYU,GACR,OAAO,WACH,IAAIsB,EAASK,KAAKT,MAAMI,OACxBA,EAASA,IAAWtB,EACd,KAAOA,EACb2B,KAAKV,SAAS,CAACK,YACjBd,KAAKmB,Q,yBAGX,SAAYoB,GACR,MACMpB,KAAKT,MADJI,EAAP,EAAOA,OAAQtB,EAAf,EAAeA,IAAKuB,EAApB,EAAoBA,OAGpB,OAAIwB,IAASzB,EACF,OACFyB,IAAS/C,EACP,MACFuB,EAAOe,SAASS,GACd,SAEJ,U,mBAGX,WACI,MAAqBpB,KAAKT,MAAnBE,EAAP,EAAOA,KAAMjB,EAAb,EAAaA,KACTT,EAAM0B,EACL5B,MAAM,MACNC,KAAI,SAAAuD,GAAC,OAAIA,EAAEC,aACXN,QAAO,SAAAK,GAAC,MAAU,KAANA,KAEZtD,EAAIC,SACLD,EAAMwD,MAAM/C,GACPgD,KAAK,IAAI9B,OAAOlB,KAKzB,IAHA,IAAM/B,EAAMyB,KAAKzB,IAAL,MAAAyB,KAAI,CAAKH,EAAIC,QAAT,mBACTD,EAAID,KAAI,SAAAuD,GAAC,OAAIA,EAAErD,aAEfD,EAAIC,OAASvB,GAChBsB,EAAImD,KAAK,IAEbnD,EAAMA,EAAID,KAAI,SAAAuD,GACV,IAAMI,EAAMJ,EAAErD,OAOd,OALIyD,EAAMhF,EACN4E,GAAK,IAAI3B,OAAOjD,EAAMgF,GAEtBJ,EAAIA,EAAEF,UAAU,EAAG1E,GAEhB4E,KAGXrB,KAAKV,SAAL,2BACOU,KAAKf,MAAMO,OADlB,IAEIC,KAAM1B,EAAI2D,KAAK,IACflD,KAAM/B,EACN4B,IAAK,KACLsB,OAAQ,KACRE,MAAM,EACNC,MAAM,O,sBAId,SAAS6B,GAAM,IAAD,OACV,EAA2B3B,KAAKT,MAAzBE,EAAP,EAAOA,KAAMjB,EAAb,EAAaA,KAAMsB,EAAnB,EAAmBA,KAEnB,GAAIE,KAAKT,MAAMM,KAAM,CACjB,IAAIgB,EAAQ,GAEZ,GAAIf,EACAe,EAAQpB,OAER,GAAIA,IAAS,IAAIC,OAAOlB,EAAOA,GAQ3B,IAPA,IAAMoD,EAAQ,IAAIlC,OAAOlB,GACnBX,EAAQ,YAAI0D,MAAM/C,GAAMqD,QACzB/D,KAAI,SAAAuD,GAAC,OAAI5B,EAAK0B,UACX3C,EAAO6C,EAAG7C,GAAQ6C,EAAI,OACzBL,QAAO,SAAAK,GAAC,OAAIA,IAAMO,KACjBH,EAAM5D,EAAMG,OAET8D,EAAI,EAAGA,EAAIL,EAAKK,IACrBjB,GAAShD,EAAMiE,GAAGR,UAEdQ,EAAI,IAAML,IACVZ,GAAS,MAKzB,MACMnD,EAAOmD,GADb,mBAAOkB,EAAP,KAAY9D,EAAZ,KAEM+D,EAAa,SAACpB,GAAD,OACf,EAAKtB,SAAS,CACVG,KAAMmB,EAAEqB,OAAOpB,MACff,MAAM,KAGd,OAAO,+BACH,gCACI,0BACIe,MAAOA,EACPqB,YAAY,wBACZC,SAAUH,EACVI,QAASJ,EACTK,KAAMN,EAAKO,KAAMrE,EACjBf,MAAO,CACHqF,SAAUZ,EACVa,UAAU,QAAD,OAAUb,EAAV,gBAY7B,IALA,IAGItD,EAHAoE,EAAQ,eAAWd,EAAX,YAAkBnD,GAC1BkE,EAAQ,YAAInB,MAAM/C,IACjBV,KAAI,SAAA6E,GAAC,OAAIpB,MAAM/C,MAGXsD,EAAI,EAAGA,EAAItD,EAAMsD,IACtB,IAAK,IAAIc,EAAI,EAAGA,EAAIpE,EAAMoE,IACtBvE,EAAMG,EAAOsD,EAAIc,EACjBF,EAAMZ,GAAGc,GAAK,oBACN7F,UAAU,cACVE,QAAS+C,KAAKd,YAAYb,GAC1BwE,QAAS7C,KAAK8C,YAAYzE,GAC1BnB,MAAO,CACHG,UAAWoF,EACXrF,SAAUqF,GANR,SAQV,uCACWhD,EAAKpB,GADhB,WARU,UAAYA,IAelC,OAAO,uBAAOtB,UAAU,OAChBG,MAAO,CACHjB,MAAO0F,EACPxE,OAAQwE,GAHb,SAKH,gCACKe,EAAM5E,KAAI,SAACF,EAAKmE,GAAN,OACP,6BACKnE,GADImE,EAAIgB,qB,qBAQ7B,SAAQpB,GACJ,MAAmB3B,KAAKf,MAAnBgB,EAAL,EAAKA,KAAM+C,EAAX,EAAWA,KAIX,OAHAA,EAAO,8BACAA,GAAc/C,GAEd,oBAAI/C,MAAO,CACNI,SAAU,MACVrB,MAAM,QAAD,OAAU0F,EAAV,YACLsB,OAAQ,OACRC,QAAS,MACTC,UAAW,QALhB,SAOC,iCACI,0DACA,8DACA,8DACA,8DACA,sDAEI,mBAAGC,KAAMJ,EAAT,4B,wBAMpB,SAAWlE,GACP,MAGIkB,KAAKT,MAFLE,EADJ,EACIA,KAAMjB,EADV,EACUA,KACNmB,EAFJ,EAEIA,OAAQE,EAFZ,EAEYA,KAGZ,OAAO,WACH,GAAKf,IAAOe,EAAZ,CAGAM,cAAcH,KAAKI,SACnB,IAAIxC,EAAM,GAEK,OAAX+B,IACAA,EAASxB,EAAK,CACVE,IAAKsB,EACLrB,IAAK,CAAC,EAAG,GACTC,IAAKC,EACLA,KAAMM,EACNL,MAAM,KAGd,IAAK,IAAIqD,EAAI,EAAGA,EAAIhD,EAAKgD,IACrB,IAAK,IAAIc,EAAI,EAAGA,EAAI9D,EAAK8D,IAEjBhF,GADAkE,EAAItD,GAAQoE,EAAIpE,EACTiB,EAAKjB,EAAOsD,EAAIc,GAEhB,IAEnB5C,KAAKV,SAAL,2BACOU,KAAKf,MAAMO,OADlB,IAEIC,KAAM7B,EACNY,KAAMM,EACNT,IAAK,KACLsB,cAENd,KAAKmB,Q,wBAGX,WAAc,IAAD,OACT,EAA2BA,KAAKT,MAAzBf,EAAP,EAAOA,KAAMqB,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAEnB,OAAQ,gCACCzD,EAAO,eAAW,MAAO2D,KAAKqD,QAAQ,QACtChH,EAAO,SAAK,WAAY2D,KAAKqD,QAAQ,SACrChH,EAAO,SAAK,OAAQ2D,KAAKqD,QAAQ,SACjChH,EAAO,eAAW,QAAQ,WACnB,EAAKkD,MAAMM,OAGfM,cAAc,EAAKC,SACnB,EAAKd,SAAL,2BACO,EAAKL,MAAMO,OADlB,IAEInB,IAAK,YAGb,uBACChC,EAAO,eAAW,SAAU2D,KAAKZ,WAAWZ,EAAO,IACnDnC,EAAO,eAAW,SAAU2D,KAAKZ,WAAWZ,EAAO,IACnDnC,EAAO,qBAAY,cAChB,WACI8D,cAAc,EAAKC,SAEfN,EACA,EAAKQ,QAEL,EAAKhB,SAAS,CACVK,OAAQ,KACRE,MAAOA,OAEtBrC,S,qBAIb,WAAW,IAAD,OACN,IAAKwC,KAAKf,MAAMqE,KACZ,OAAQ,KAEZ,IACMzD,EADOG,KAAKT,MAAM+D,KACNxF,KAAI,SAACC,EAAKwF,GACxB,IAAMC,EAAQ,EAAKjE,MAAM6B,OAASmC,EAC5B,MAAQ,QACd,OAAO,uBACMrG,MAAO,CAACsG,SADd,iBAEQzF,IAFGwF,EAAIR,eAM1B,OAAO,qBAAKhG,UAAU,SAAf,SACC,yCACU8C,S,uBAKtB,WACI,OAAIG,KAAKf,MAAMwE,IACJ,qBAAK1G,UAAU,SAAf,SACC,2CAEwB,KAAnBiD,KAAKT,MAAMkE,IACN,GAAK,IACVzD,KAAKT,MAAMkE,SAIpB,O,yBAGZ,WACI,OAAIzD,KAAKf,MAAMyE,IACJ,qBAAK3G,UAAU,SAAf,SACC,8CACeiD,KAAKT,MAAMoE,SAI9B,O,oBAGZ,WAAU,IAAD,OACL,EAAsB3D,KAAKT,MAApBM,EAAP,EAAOA,KAAMR,EAAb,EAAaA,MACPtB,EAAMsB,EACN,eACA,oBACAuE,EAAO,SAACpF,GAAD,OACT,sBAAKtB,MAAO,CAACI,SAAUkB,GAAvB,UACI,+BAAO,EAAKS,MAAMgB,OACjB,EAAK4D,QAAQ9F,GACb,EAAK+F,aACN,uBACC,EAAKC,UACL,EAAKC,YACL,EAAKC,kBAId,OAAI5E,EACIQ,EAEI,wBAAQ9C,UAAU,aAAlB,SACI,sBAAKA,UAAU,WAAf,UACK6G,EAAK,QAAD,OAAS7F,EAAT,WACL,uBACCiC,KAAKkE,SAASnG,QAM3B,yBAAQhB,UAAU,aAAlB,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACK6G,EAAK,QAAD,OAAS7F,EAAT,eAGb,qBAAKhB,UAAU,gBAAf,SACI,qBAAKA,UAAU,WACPG,MAAO,CAACiH,UAAW,QAD3B,SAEKnE,KAAKkE,SAASnG,UAQ/B,yBAAQhB,UAAU,aAAlB,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACK6G,EAAK,QAAD,OAAS7F,EAAT,eAGb,qBAAKhB,UAAU,cAAf,SACI,qBAAKA,UAAU,WAAf,SACKiD,KAAKkE,SAASnG,c,GApfLqG,IAAMC,WC0EzB,SAASC,IACpB,IAAIlG,EAAM,CACNC,IAAK,EACLqC,KAAK,EACL4C,KAAM,CAAC,GACPlC,KAAM,GAGNb,EAtFR,SAAenC,GA2EX,OA1EA,SAAamG,EAAM/F,GACV+F,EAAK5D,SAAS,MACf6D,MAAM,iCAEV,IAAIlG,EAAM,CAAC,EAAG,GACVV,EAAM,CAACQ,GACPmF,EAAM,EAEV,SAAS9E,EAAKJ,GACV,OAAOF,EAAK,CACRE,MACAC,MACAC,IAAKC,IAIb,OAAO,WAAwB,IAAfiG,EAAc,wDACtBlF,EAAQ3B,EAAIA,EAAII,OAAS,GAY7B,GAVIyG,EACIlB,IACAA,GAAO,GAEPhE,EAAMmB,IACN9C,EAAM,CAACQ,GAEPmF,GAAO,EAGXA,EAAM3F,EAAII,OACV,OAAOJ,EAAI2F,GAEf,MAA6BhE,EAAxB+D,EAAL,EAAKA,KAAMlC,EAAX,EAAWA,KAAMV,EAAjB,EAAiBA,IAAKrC,EAAtB,EAAsBA,IAClBqG,EAAIH,EAAKlG,GACb,EAAaC,EAAb,mBAAKqG,EAAL,KAAQC,EAAR,KAGA,GAFAtB,EAAI,YAAOA,GAED,OAANoB,EACApG,EAAM,CAACsG,EAAGD,QACP,GAAU,MAAND,EACPpG,EAAM,EAAEsG,GAAID,QACT,GAAU,MAAND,GAAatD,EACpBA,GAAQ,OACL,GAAU,MAANsD,GACPtD,GAAQ,KACKkC,EAAKtF,QACdsF,EAAKpC,KAAK,QACX,GAAU,MAANwD,EACPpB,EAAKlC,IAAS,OACX,GAAU,MAANsD,GAAcpB,EAAKlC,GAKb,MAANsD,IACPhE,GAAM,EACNrC,EAAM,WANN,GACIA,EAAMI,EAAKJ,GACXqG,EAAIH,EAAKlG,UACH,WAAWsC,SAAS+D,IAiBlC,OAXY,OAARrG,IACAA,EAAMI,EAAKJ,IAEfkB,EAAQ,CACJlB,MACAiF,OACAlC,OACAV,OAGJ9C,EAAIsD,KAAK3B,GACFA,IAeLsF,CAAMzG,GAChB,OAAO,cAAC,EAAD,CACH6B,KAAK,OACLT,MAAOpB,EACPmC,IAAKA,EACL+C,MAAM,I,YCxFOtE,E,kDACjB,WAAYC,GAAe,IAAD,8BACtB,cAAMA,IAEDM,MAAL,2BACO,EAAKN,MAAMO,OADlB,IAEIqB,MAAO,GACP0D,KAAM,GACNO,OAAO,EACPpE,KAAK,EACLrB,MAAOrD,MAGX,EAAKQ,KAAO,kBAAM,EAAK+C,OACvB,EAAKwF,aACC,EAAKA,aAAalG,KAAlB,gBACN,EAAKQ,MAAQ,WACT,IAAMA,EAAQrD,IACd,EAAKsD,SAAS,CAACD,WAjBG,E,qDAqB1B,WACIU,SAASxD,MAAQyD,KAAKf,MAAMgB,KACtB,yBACN/D,OAAOgE,iBACH,SAAUF,KAAKX,S,kCAGvB,WACIc,cAAcH,KAAKI,SACnBlE,OAAOmE,oBACH,SAAUL,KAAKX,S,qBAGvB,SAAQvC,GACJ,OAAO,WAAY,IAAD,OACd,EAA4BkD,KAAKT,MAA1BsB,EAAP,EAAOA,MAAOiE,EAAd,EAAcA,MAAOpE,EAArB,EAAqBA,IACrB,EAAqBV,KAAKf,MAAnBO,EAAP,EAAOA,MAAOe,EAAd,EAAcA,IAEd,IAAIG,IACAV,KAAKxD,KAAO+D,EAAIM,GAChBb,KAAKV,SAASE,GAED,QAAT1C,GAAmBgI,GAJ3B,CASA,IAAIvF,EAEJ,GAHAY,cAAcH,KAAKI,SAGN,QAATtD,EAAgB,CAQhBkD,KAAKI,QAAUK,aAPF,WACT,EAAKnB,SAAS,EAAK9C,QAEf,EAAK+C,MAAMmB,KACXP,cAAc,EAAKC,WAGM,UAEjCb,EADgB,SAATzC,EACCkD,KAAKxD,MAAK,GAEVwD,KAAKxD,OAGjBwD,KAAKV,SAAL,aACIwF,OAAO,GACJvF,MAETV,KAAKmB,Q,0BAGX,SAAagF,GACT,IAAMjH,EAAMiH,EAAM/C,OAAOpB,MAEzB,GAAI9C,IAAQiC,KAAKT,MAAMsB,MAAO,CAC1B,IAAM0D,EACAvE,KAAKf,MAAMqB,MAAMvC,GAEvBiC,KAAKV,SAAL,2BACOU,KAAKf,MAAMO,OADlB,IAEIkB,KAAK,EACLG,MAAO9C,EACPwG,a,wBAKZ,WAAc,IAAD,OACHA,EAAOvE,KAAKT,MAAMgF,KAClBU,EAAO,YAAIV,GAAMzG,KAAI,SAACC,EAAKwF,GAC7B,IAAMC,EAAQ,EAAKjE,MAAMgE,MAAQA,EAC3B,MAAQ,QACd,OAAO,sBACMrG,MAAO,CAACsG,SADd,SAEEzF,GAFSwF,EAAIR,eAItBlD,EAAO,WAKX,OAHIoF,EAAKjH,SACL6B,GAAQ,KAEL,qBAAK9C,UAAU,SAAf,SACC,iCACK8C,EAAMoF,S,qBAKvB,WAAW,IAAD,OACN,IAAKjF,KAAKf,MAAMqE,KACZ,OAAQ,KAEZ,IACMzD,EADOG,KAAKT,MAAM+D,KACNxF,KAAI,SAACC,EAAKwF,GACxB,IAAMC,EAAQ,EAAKjE,MAAM2F,MAAQ3B,EAC3B,MAAQ,QACd,OAAO,uBACMrG,MAAO,CAACsG,SADd,iBAEQzF,IAFGwF,EAAIR,eAK1B,OAAO,qBAAKhG,UAAU,SAAf,SACC,yCACU8C,S,uBAKtB,WACI,OAAIG,KAAKf,MAAMwE,IACJ,qBAAK1G,UAAU,SAAf,SACC,2CAEwB,KAAnBiD,KAAKT,MAAMkE,IACN,GAAK,IACVzD,KAAKT,MAAMkE,SAIpB,O,yBAGZ,WACI,OAAIzD,KAAKf,MAAMyE,IACJ,qBAAK3G,UAAU,SAAf,SACC,8CACeiD,KAAKT,MAAMoE,SAI9B,O,qBAGZ,SAAQhC,GAAM,IAAD,OACT,EAAmB3B,KAAKf,MAAnBgB,EAAL,EAAKA,KAAM+C,EAAX,EAAWA,KACXA,EAAO,8BACAA,GAAc/C,GAErB,MACMvC,EAAOsC,KAAKT,MAAMsB,OADxB,mBAAOkB,EAAP,KAAY9D,EAAZ,KAGA,OACI,sBAAKf,MAAO,CAACI,SAAS,QAAD,OACLqE,EADK,WAArB,UAEI,+BACK1B,IAEL,oBAAI/C,MAAO,CACHI,SAAU,MACV2F,OAAQ,OACRC,QAAS,MACTC,UAAW,QAJnB,SAMI,iCACI,8DACA,sDAEI,mBAAGC,KAAMJ,EAAT,0BAIZ,+BACI,gCACI,0BACInC,MAAOb,KAAKT,MAAMsB,MAClBsB,SAAUnC,KAAK+E,aACf3C,QAASpC,KAAK+E,aACd1C,KAAMN,EAAKO,KAAMrE,EACjBf,MAAO,CACHqF,SAAUZ,EACVa,UAAU,QAAD,OAAUb,EAAV,gBAKxBtF,EAAO,eAAW,MAAO2D,KAAKqD,QAAQ,QACtChH,EAAO,SAAK,WAAY2D,KAAKqD,QAAQ,SACrChH,EAAO,SAAK,OAAQ2D,KAAKqD,QAAQ,SACjChH,EAAO,SAAK,QAAQ,WACjB8D,cAAc,EAAKC,SACnB,EAAKd,SAAL,2BACO,EAAKL,MAAMO,OADlB,IAEIsF,OAAO,EACPpE,KAAK,QAGZlD,S,oBAKb,WACI,IAAO6B,EAASW,KAAKT,MAAdF,MACDtB,EAAMsB,EACN,eACA,oBAEA8F,EAAQ,sBAAKjI,MAAO,CAClBI,SAAS,QAAD,OAAUS,EAAV,WADF,UAETiC,KAAKoF,aACLpF,KAAK+D,UACL/D,KAAKgE,YACLhE,KAAKiE,iBAGV,OAAI5E,EACO,wBAAQtC,UAAU,aAAlB,SACH,sBAAKA,UAAU,WAAf,UACKiD,KAAKqF,QAAQtH,GACd,uBACCoH,OAKT,yBAAQpI,UAAU,aAAlB,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACKiD,KAAKqF,QAAQtH,OAGtB,qBAAKhB,UAAU,cAAf,SACI,qBAAKA,UAAU,WAAf,SACKoI,a,GArPSf,IAAMC,WCJxC,SAAS/D,EAAMgF,GACX,IADkB,EACdf,EAAO,GADO,cAGJe,GAHI,IAGlB,gCAASZ,EAAT,QACQ,QAAQ/D,SAAS+D,KACjBH,GAAQG,IALE,8BAOlB,OAAOH,EA2EI,SAASgB,IACpB,IAAInH,EAAM,CACNkF,KAAM,CAAC,GACPK,IAAK,EACLJ,IAAK,EACL2B,IAAK,EACLzB,IAAK,GACL/C,KAAK,GAGLH,EAlFR,SAAenC,GAqEX,OApEA,SAAakH,GACT,IAAMf,EAAOjE,EAAMgF,GACb7D,EAAM8C,EAAKvG,OACbJ,EAAM,CAACQ,GACPU,EAAM,EAEV,OAAO,WAAyB,IAAf2F,EAAc,wDACvBlF,EAAQ3B,EAAIA,EAAII,OAAS,GACzB0G,EAAIH,EAAKzF,EAAM2C,GACdf,EAAOnB,EAAPmB,IAcL,GAZI+D,EACI3F,IACAA,GAAO,IAEXA,GAAO,GAEG2C,IAAQ,EACdf,GAAM,EACDnB,EAAMmB,MACXA,GAAM,GAGV5B,EAAMlB,EAAII,OACV,OAAOJ,EAAIkB,GAEf,MAA4BS,EAAvB+D,EAAL,EAAKA,KAAMK,EAAX,EAAWA,IAAKuB,EAAhB,EAAgBA,IAAKzB,EAArB,EAAqBA,IACjBF,EAAMzE,EAAM2C,EAGhB,GAFA6B,EAAI,YAAOA,GAED,MAANoB,GACAQ,GAAO,KACK5B,EAAKtF,QACbsF,EAAKpC,KAAK,QACX,GAAU,MAANwD,EACPf,GAAOL,EAAK4B,GACZA,EAAM,OACH,GAAU,MAANR,EACPpB,EAAK4B,IAAQvB,EAAM,EAEfL,EAAK4B,GAAO,IACZ5B,EAAK4B,GAAO,GAEhBvB,EAAM,EACNuB,EAAM,OACH,GAAU,MAANR,EAAW,CAGlB,IAFA,IAAIc,EAAM,IAEFA,EAAIxH,QACRwH,EAAMC,OAAO,WAEjB9B,EAAM6B,EAAIE,WAAW,QAEjB/B,EAAM,IACNF,GAAOkC,OACFC,aAAajC,EAAM,IAShC,OANApE,EAAQ,CACJ+D,OAAMK,MAAKJ,MACX2B,MAAMzB,MAAK/C,OAGf9C,EAAIsD,KAAK3B,GACFA,IAiBLsF,CAAMzG,GAChB,OAAO,cAAC,EAAD,CACH6B,KAAK,UACLT,MAAOpB,EACPmC,IAAKA,EACLD,MAAOA,EACPgD,MAAM,EACNG,KAAK,EACLC,KAAK,ICpGb,SAASpD,EAAMgF,GACX,IADkB,EACdf,EAAO,GADO,cAGJe,GAHI,IAGlB,gCAASZ,EAAT,QACQ,OAAO/D,SAAS+D,KAChBH,GAAQG,IALE,8BAOlB,OAAOH,EAqEI,SAASsB,IACpB,IAAIzH,EAAM,CACNkF,KAAM,CAAC,GACPC,IAAK,EACL2B,IAAK,EACLxE,KAAK,GAGLH,EA1ER,SAAenC,GA+DX,OA9DA,SAAakH,GACT,IAAMf,EAAOjE,EAAMgF,GACb7D,EAAM8C,EAAKvG,OACbJ,EAAM,CAACQ,GACPU,EAAM,EAEV,OAAO,WAAyB,IAAf2F,EAAc,wDACvBlF,EAAQ3B,EAAIA,EAAII,OAAS,GAC7B,EAAuBuB,EAAlB+D,EAAL,EAAKA,KAAM4B,EAAX,EAAWA,IAAKxE,EAAhB,EAAgBA,IACZgE,EAAIH,EAAKzF,EAAM2C,GAoBnB,GAlBIgD,EACI3F,IACAA,GAAO,IAEXA,GAAO,GAEG2C,IAAQ,EACdf,GAAM,EACCnB,EAAMmB,MACT4C,EAAK4B,GACLxE,GAAM,GAEN9C,EAAM,CAACQ,GACPU,EAAM,IAKdA,EAAMlB,EAAII,OACV,OAAOJ,EAAIkB,GAEf,IAAIyE,EAAMzE,EAAM2C,EA0BhB,OAzBA6B,EAAI,YAAOA,GAED,MAANoB,EACApB,EAAK4B,IAAQ,EACN5B,EAAK4B,KACF,MAANR,EACApB,EAAK4B,IAAQ,EACA,MAANR,GACPQ,GAAO,KAEK5B,EAAKtF,QACbsF,EAAKpC,KAAK,GACPgE,IACPA,GAAO,IAIf3F,EAAQ,CACJ+D,OACAC,MACA2B,MACAxE,OAGJ9C,EAAIsD,KAAK3B,GACFA,IAeLsF,CAAMzG,GAChB,OAAO,cAAC,EAAD,CACH6B,KAAK,YACL+C,KAAK,YACLxD,MAAOpB,EACPmC,IAAKA,EACLD,MAAOA,EACPgD,MAAM,IC1Fd,SAASuB,EAAMzG,GACX,SAAS0H,EAAMnI,GACX6G,MAAM7G,+BAGN,IAAIoI,EAAM,CAACrF,KAAK,GAGhB,OAFAtC,EAAIC,IAAM,KAEH,kBAAM0H,GAGjB,SAASC,EAAKrD,EAAGsD,EAAGzH,GAChB,IAAI0H,EAAOhI,KAAKiI,IAAIxD,EAAIsD,GAIxB,OAHU/H,KAAKU,MAAMsH,EAAO1H,GAClB0H,EAAO1H,EAWrB,SAAS4H,EAAM/H,EAAKT,GAChB,IAAIY,EAAOZ,EAAII,OACXqI,EAAO,GAEX,IAAK,IAAIC,KAAK1I,EACK,MAAXA,EAAI0I,IACJD,EAAKnF,KAAKoF,GAGlB,OADAD,EAAKE,KAdT,SAAclI,EAAKG,GACf,OAAO,SAACmE,EAAGsD,GAAJ,OACHD,EAAK3H,EAAKsE,EAAGnE,GACbwH,EAAK3H,EAAK4H,EAAGzH,IAWPgI,CAAKnI,EAAKG,IACb6H,EAAKrI,OAAS,EACfqI,EAAK,GAAKhI,EAGpB,IAAIV,EAAM,OACN8I,EAAM,CACN,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,IA0FR,OAvFA,SAAalC,EAAM/F,GACfJ,EAAIC,IAAM,KACV,IAAIC,EAAMmI,EAAI,GACV7I,EAAM,CAACQ,GACPmF,EAAM,EAEV,IAAKgB,EAAK5D,SAAS,KACf,OAAOmF,EAAM,MAGjB,IAAK,IAAIQ,KAAK/B,EACV,GAAgB,MAAZA,EAAK+B,GAAY,CACjB,GAAgB,OAAZlI,EAAIC,IACJ,OAAOyH,EAAM,cAEjB1H,EAAIC,IAAMiI,EAGlB,SAAS7H,EAAKJ,GACV,OAAOF,EAAK,CACRE,MACAC,MACAC,IAAKC,IAIb,OAAO,WAAwB,IAAfiG,EAAc,wDACtBlF,EAAQ3B,EAAIA,EAAII,OAAS,GAY7B,GAVIyG,EACIlB,IACAA,GAAO,GAEPhE,EAAMmB,IACN9C,EAAM,CAACQ,GAEPmF,GAAO,EAGXA,EAAM3F,EAAII,OACV,OAAOJ,EAAI2F,GAEf,MAA2BhE,EAAtBlB,EAAL,EAAKA,IAAKqC,EAAV,EAAUA,IAAK+C,EAAf,EAAeA,IAAKE,EAApB,EAAoBA,IAChBe,EAAIH,EAAKlG,GAEb,GAAIV,EAAIgD,SAAS+D,GACbpG,EAAMmI,EAAI9I,EAAI+I,QAAQhC,SACnB,GAAU,MAANA,EACPpG,EAAM,EAAEA,EAAI,IAAKA,EAAI,SAClB,GAAU,MAANoG,EACPrG,EAAM+H,EAAM/H,EAAKkG,IACjBlG,GAAOG,GAEG,IACNH,GAAOG,EAAOA,QACf,IAAKkG,EACRf,GAAOe,OACJ,GAAU,MAANA,EACPf,GAAO,OACJ,GAAU,MAANe,EACPf,GAAO,OACJ,GAAU,MAANe,EACPf,GAAO,OACJ,GAAU,MAANe,EACPf,GAAYA,OACT,GAAU,MAANe,EACPf,EAAMzF,KAAKU,MAAM+E,EAAM,QACpB,GAAU,MAANe,EACPjB,GAAOkC,OAAOC,aAAajC,QACxB,GAAU,MAANe,EAAW,CAClB,IAAIiC,EAAsB,EAAhBzI,KAAK0I,SACftI,EAAMmI,EAAIvI,KAAKU,MAAM+H,QACR,MAANjC,IACPrG,EAAM,KACNqC,GAAM,GASV,OANY,OAARrC,GAAsB,MAANqG,IAChBrG,EAAMI,EAAKJ,IAEfkB,EAAQ,CAAClB,MAAKqC,MAAK+C,MAAKE,OACxB/F,EAAIsD,KAAK3B,GAEFA,IAOJ,SAASsH,IACpB,IAAIzI,EAAM,CACNC,IAAK,KACLqC,KAAK,EACL+C,IAAK,GACLE,IAAK,GAGLpD,EAAMsE,EAAMzG,GAChB,OAAO,cAAC,EAAD,CACH6B,KAAK,QACLT,MAAOpB,EACPmC,IAAKA,EACLkD,KAAK,EACLC,KAAK,ICtJb,SAASoD,IACL,IAAInE,EAAIzG,OAAOE,YACX6J,EAAI/J,OAAOC,WAEfwG,EAAIzE,KAAKU,MAAM+D,EAAI,IACnBsD,EAAI/H,KAAKU,MAAMqH,EAAI,IACnB,IAAMrI,EAAM,YAAI2D,MAAMoB,IACjB7E,KAAI,SAAAiJ,GAAC,OAAIxF,MAAM0E,GAAGzE,KAAK,MAEtBmD,EAAIzG,KAAKU,MAAMV,KAAK0I,SAAWjE,GAC/BiC,EAAI1G,KAAKU,MAAMV,KAAK0I,SAAWX,GAGrC,OAFArI,EAAI+G,GAAGC,IAAM,EAENhH,E,IAGUoJ,E,kDACjB,WAAY/H,GAAe,IAAD,uBACtB,cAAMA,IAEDgI,UACD,EAAKA,UACApI,KADL,gBAEJ,EAAKqI,UACD,EAAKA,UACArI,KADL,gBAGJ,IAAMjB,EAAMkJ,IAVU,OAWtB,EAAKvH,MAAQ,CACTwC,IAAKnE,EAAII,OACTC,IAAKL,EAAI,GAAGI,OACZyD,IAAK,EACLpD,IAAK,CAAC,EAAG,GACTC,IAAK,CAAC,EAAG,GACTH,MAAM,EACNgJ,KAAM,KACNvJ,OAnBkB,E,6CAuB1B,WACI,IAGI+E,EAAGsD,EAHDrI,EAAG,YAAOoC,KAAKT,MAAM3B,KACrBmE,EAAM/B,KAAKT,MAAMwC,IACjB9D,EAAM+B,KAAKT,MAAMtB,IAGvB,GACI0E,EAAIzE,KAAKU,MAAMV,KAAK0I,SAAW7E,GAC/BkE,EAAI/H,KAAKU,MAAMV,KAAK0I,SAAW3I,SAC1BL,EAAI+E,GAAGsD,IAEhBrI,EAAI+E,GAAGsD,IAAM,EACbjG,KAAKV,SAAS,CAAC1B,U,uBAGnB,WACI,IAAMA,EAAMkJ,IAEZ9G,KAAKV,SAAS,CACVyC,IAAKnE,EAAII,OACTC,IAAKL,EAAI,GAAGI,OACZJ,U,uBAGR,SAAUgD,GACN,IAEItC,EAFE8I,EAAIxG,EAAEE,IAAIC,cACVxC,EAAMyB,KAAKT,MAAMjB,IAGvB,GAAU,cAAN8I,GAA2B,MAANA,EACrB9I,EAAM,CAAC,GAAI,QACV,GAAU,eAAN8I,GAA4B,MAANA,EAC3B9I,EAAM,CAAC,EAAG,QACT,GAAU,YAAN8I,GAAyB,MAANA,EACxB9I,EAAM,EAAE,EAAG,OACV,IAAU,cAAN8I,GAA2B,MAANA,EAG1B,OAFA9I,EAAM,CAAC,EAAG,GAIVC,EAAI,GAAKD,EAAI,IACTC,EAAI,KAAOD,EAAI,KACf0B,KAAKT,MAAMpB,KACX6B,KAAKV,SAAS,CACVnB,MAAM,EACNG,QAEJ0B,KAAKV,SAAS,CACV6H,KAAM7I,O,+BAGtB,WAAqB,IAAD,OAChB0B,KAAKI,QAAUK,aACX,kBAAM,EAAKtC,SAAQ,KACvB4B,SAASxD,MAAQ,kBACjBwD,SAASG,iBACL,UACAF,KAAKkH,WACL,GACJlH,KAAKiH,YACL/K,OAAOgE,iBACH,SAAUF,KAAKiH,a,kCAGvB,WACI9G,cAAcH,KAAKI,SACnBL,SAASM,oBACL,UACAL,KAAKkH,WACL,GACJhL,OAAOmE,oBACH,SAAUL,KAAKiH,a,kBAGvB,WACI,kBAAajH,KAAKT,MAAMlB,IAAxB,GAAKsE,EAAL,KAAQsD,EAAR,KACA,cAAejG,KAAKT,MAAMjB,IAA1B,GAAOqG,EAAP,KAAUC,EAAV,KACA,EAAmB5E,KAAKT,MAAjBwC,EAAP,EAAOA,IAAK9D,EAAZ,EAAYA,IACRL,EAAMoC,KAAKT,MAAM3B,IAChBE,KAAI,SAAA6G,GAAC,OAAIA,EAAE7G,KACR,SAAAnB,GAAC,OAAIA,EAAI,EAAIA,EAAI,EAAIA,QAM7B,GAFAsJ,GAAKA,EAAIrB,EAAI3G,GAAOA,EAEhBL,EAHJ+E,GAAKA,EAAIgC,EAAI5C,GAAOA,GAGTkE,GAAK,EAAG,CACf,IAAMnH,EAAMlB,EAAI+E,GAAGsD,GACnBjG,KAAKV,SAAS,CAACmC,IAAKzB,KAAKT,MAAMkC,IAAM3C,IACrClB,EAAMA,EAAIE,KAAI,SAAA6G,GAAC,OAAIA,EAAE7G,KACjB,SAAAnB,GAAC,OAAIA,EAAImC,EAAMnC,EAAImC,IAAQnC,EAAI,cAC5BiB,EAAI+E,GAAGsD,GAAK,IACnBjG,KAAKV,SAAS,CAACmC,IAAKzB,KAAKT,MAAMkC,IAAM,IACrCzB,KAAKqH,YACLzJ,EAAMoC,KAAKT,MAAM3B,IAAIE,KAAI,SAAA6G,GAAC,OAAIA,EAAE7G,KAC5B,SAAAnB,GAAC,OAAIA,EAAI,EAAIA,EAAI,IAAMA,EAAI,UAGnCiB,EAAI+E,GAAGsD,GAAKjG,KAAKT,MAAMkC,IACvB,IAAM0F,EAAOnH,KAAKT,MAAM4H,KACpBA,GACAnH,KAAKV,SAAS,CACV6H,KAAM,KACN7I,IAAK6I,IAEbnH,KAAKV,SAAS,CACVnB,MAAOgJ,EACP9I,IAAK,CAACsE,EAAGsD,GACTrI,U,oBAIR,WACI,OACI,yBAAQb,UAAU,aACVG,MAAO,CACHoK,SAAU,UAFtB,UAII,uBAAOpK,MAAO,CACFC,OAAQ,QACRlB,MAAQ,QACRsL,cAAe,mBAEnBxK,UAAU,OALlB,SAMI,gCACKiD,KAAKT,MAAM3B,IAAIE,KAAI,SAAC6G,EAAG5C,GAAJ,OACf,6BACG4C,EAAE7G,KAAI,SAACC,EAAKE,GAAN,OACN,oBACQlB,UAAU,cACV8F,QACI9E,EAAM,EAAI,QACVA,EAAM,EAAI,MAAQ,QAEtBb,MAAO,CACHsK,OAAQ,UACRC,aAAc,iBAR1B,SAUI,wCAVJ,UAAY1F,EAAZ,YAAmB9D,QAFb8D,EAAIgB,mBAkB1B,qBAAK7F,MAAO,CACJwK,SAAU,WACVC,OAAQ,OAFhB,SAIKnK,GAAK,Y,GA5KS4G,IAAMC,WChB1B,SAASuD,IACpB7H,SAASxD,MAAQ,iBACjB,IAAMW,EAAQ,CACVgG,QAAS,eACT9F,SAAU,KAGd,OACI,yBAAQL,UAAU,oBAAlB,UACI,gCACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,SACVG,MAAOA,EADf,0BAIA,sBAAKH,UAAU,mBAAf,UACI,cAAC,IAAD,CAAMU,GAAG,QAAT,kBAGA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBAGA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBAGA,cAAC,IAAD,CAAMA,GAAG,SAAT,yBAKR,cAAC,IAAD,CAAMA,GAAG,UAAT,SACI,wBAAQV,UAAU,SACVC,KAAK,SACLE,MAAOA,EAFf,sBAMJ,cAAC,IAAD,CAAMO,GAAG,SAAT,SACI,wBAAQV,UAAU,SACVC,KAAK,SACLE,MAAOA,EAFf,qBAMJ,sBAAM2K,OAAO,6BACL3K,MAAO,CAAC4K,QAAS,gBADzB,SAEI,uBAAO9K,KAAK,SACR6D,MAAM,SACN9D,UAAU,SACVG,MAAOA,SAGnB,oBAAIH,UAAU,OAAd,wBCpDG,SAASgL,IAEpB,OADAhI,SAASxD,MAAQ,2BAEb,yBAAQQ,UAAU,aAAlB,UACI,wBAAQG,MAAO,CACPI,SAAU,MACV0K,cAAe,OAFvB,SAGI,gEAIJ,8BACKxK,GAAK,QCZtB,SAASyK,EAASC,EAASjI,EAAMhE,GAC7B,OAAO,8BACH,wBACIA,MAAOA,EACPkB,OAAQlB,EAAQ,GAAK,EACrBkM,IAAG,wCAAmCD,GACtCE,YAAY,IACZC,iBAAe,EACf9L,MAAO0D,M,IAKEqI,E,kDACjB,WAAYrJ,GAAe,IAAD,8BACtB,cAAMA,IAEDsJ,GAAK,CACN,CAAC,uBAAwB,eACzB,CAAC,UAAW,eACZ,CAAC,iBAAkB,eACnB,CAAC,eAAgB,gBAGrB,EAAKC,UACC,EAAKA,UAAU3J,KAAf,gBACN,EAAK4J,YACC,EAAKA,YAAY5J,KAAjB,gBAEN,EAAKU,MAAQ,CACTtD,MAAO,EAAKyM,WACZ5J,IAAK,GAjBa,E,qDAqB1B,WACIiB,SAASxD,MAAQ,mBACjBL,OAAOgE,iBACH,SAAUF,KAAKyI,e,kCAGvB,WACIvM,OAAOmE,oBACH,SAAUL,KAAKyI,e,sBAGvB,WACI,IAAMtL,EAASjB,OAAOE,YAClBH,EAAQC,OAAOC,WAOnB,OALI,IAAMgB,EAASlB,EACfA,GAAgB,GAEhBA,GAAgB,EAEbA,I,yBAGX,WACI,IAAMA,EAAQ+D,KAAK0I,WACnB1I,KAAKV,SAAS,CAACrD,Y,uBAGnB,SAAU8B,GAAM,IAAD,OACL0D,EAAMzB,KAAKuI,GAAGvK,OACbc,EAAOkB,KAAKT,MAAZT,IAGP,OAFAf,EAAMe,EAAMf,EAAM0D,EAEX,WACH,EAAKnC,SAAS,CACVR,IAAKf,EAAM0D,O,oBAKvB,WACI,MAAqBzB,KAAKT,MAAnBT,EAAP,EAAOA,IAAK7C,EAAZ,EAAYA,MACZ,cAAmB+D,KAAKuI,GAAGzJ,GAA3B,GAAOmB,EAAP,KAAasI,EAAb,KAEA,OACI,yBAAQxL,UAAU,aAAlB,UACI,oBAAIG,MAAO,CAACI,SAAU,kBAAtB,SACI,iCACI,+BACK2C,QAIZgI,EAASM,EAAItI,EAAMhE,GACpB,gCACKI,EAAO,SAAK,WACT2D,KAAKwI,WAAW,IAAI,GACvBhL,GAAK,GACLnB,EAAO,SAAK,OACT2D,KAAKwI,UAAU,IAAI,a,GAjFPpE,IAAMC,W,kBCM1C,SAASsE,IACL,OACI,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAlB,SACI,cAACxE,EAAD,MAEJ,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,aAAlB,SACI,cAACjD,EAAD,MAEJ,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,WAAlB,SACI,cAACvD,EAAD,MAEJ,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,SAAlB,SACI,cAACjC,EAAD,MAEJ,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,UAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAClB,EAAD,MAEJ,cAAC,IAAD,UACI,cAACG,EAAD,aAQxBgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACN,EAAD,MAEJ5I,SAASmJ,eAAe,W","file":"static/js/main.da2c4cb1.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nexport function getDim() {\r\n    const width  = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    return height > 1.25 * width;\r\n}\r\n\r\nexport function button(sym, title, func, max = false) {\r\n    const min  = (n) => `max(${n * 1.1}vh, ${n * 10}px)`;\r\n    const calc = (m, n) => `calc(${m} / ${n})`;\r\n    const mode = getDim()\r\n        ? 'var(--stack)'\r\n        : 'var(--table-size)';\r\n\r\n    return <button className='custom'\r\n            type='button'\r\n            onClick={func}\r\n            title={title}\r\n            style={{\r\n                width: calc(mode, 7),\r\n                height: calc(mode, 10.5),\r\n                maxWidth:  max ? min(6) : '',\r\n                maxHeight: max ? min(4) : ''\r\n            }}>\r\n        <div style={{\r\n                fontSize: max ?\r\n                    `min(${calc(mode, 40)},\r\n                    ${min(1)})` : '',\r\n                lineHeight: '1em'\r\n            }}>\r\n            {sym}\r\n        </div>\r\n    </button>;\r\n}\r\n\r\nexport function home(max) {\r\n    return <Link to='/'>\r\n        {button('🏠\\ufe0e', 'Home', null, max)}\r\n    </Link>;\r\n}\r\n\r\nexport function resize(str) {\r\n    const arr = str.split('\\n')\r\n        .map(val => val.length);\r\n    let col = Math.max(...arr);\r\n    let row = arr.length;\r\n\r\n    return [row, col];\r\n}\r\n\r\nexport function move(obj) {\r\n    const {\r\n        pos, vel, old,\r\n        size = old,\r\n        wrap = true\r\n    } = obj;\r\n\r\n    let [quo, mod] = vel;\r\n    quo += Math.floor(pos / old);\r\n    mod += pos % old;\r\n\r\n    if (wrap) {\r\n        quo = (quo + size) % size;\r\n        mod = (mod + size) % size;\r\n    } else {\r\n        quo = bind(quo, size);\r\n        mod = bind(mod, size);\r\n    }\r\n\r\n    return quo * size + mod;\r\n}\r\n\r\nfunction bind(num, lim) {\r\n    if (num >= lim)\r\n        num = lim - 1;\r\n    else if (num < 0)\r\n        num = 0;\r\n\r\n    return num;\r\n}","import {\r\n    button, home,\r\n    resize, move,\r\n    getDim\r\n} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText = this.changeText.bind(this);\r\n        this.changeSize = this.changeSize.bind(this);\r\n        this.stack = () => {\r\n            const stack = getDim();\r\n            this.setState({stack});\r\n        };\r\n\r\n        const size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: ' '.repeat(size * size),\r\n            size,\r\n            select: null,\r\n            pos:    null,\r\n            breaks: [],\r\n            text: false,\r\n            edit: false,\r\n            stack: getDim()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n        window.addEventListener(\r\n            'resize', this.stack);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.stack);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.edit) {\r\n                this.clean();\r\n                return;\r\n            } else if (this.state.text) {\r\n                this.setState({text: false});\r\n                return;\r\n            }\r\n\r\n            if (this.state.pos === null) {\r\n                const {grid, size} = this.state;\r\n                const {run, start} = this.props;\r\n                this.func = run(grid, size);\r\n\r\n                this.setState({\r\n                    ...start,\r\n                    select: null,\r\n                });\r\n\r\n                if (mode !== 'run')\r\n                    return;\r\n            }\r\n\r\n            clearInterval(this.timerID);\r\n            let temp;\r\n\r\n            if (mode === 'run') {\r\n                const move = () => {\r\n                    this.setState(this.func());\r\n                    const {pos, end, breaks}\r\n                        = this.state;\r\n\r\n                    if (breaks.includes(pos) || end)\r\n                        clearInterval(this.timerID);\r\n                };\r\n\r\n                this.timerID = setInterval(move, 200);\r\n            } else if (mode === 'next') {\r\n                temp = this.func();\r\n            } else {\r\n                temp = this.func(true);\r\n            }\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks, text} = this.state;\r\n\r\n        if (select !== null && !text) {\r\n            let str = this.state.grid;\r\n            const size = str.length;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (breaks.includes(select))\r\n                    breaks = breaks.filter(p =>\r\n                        p !== select);\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                let vel;\r\n\r\n                if (e.key.includes('Left'))\r\n                    vel = [0, -1];\r\n                else if (e.key.includes('Right'))\r\n                    vel = [0, 1];\r\n                else if (e.key.includes('Up'))\r\n                    vel = [-1, 0];\r\n                else if (e.key.includes('Down'))\r\n                    vel = [1, 0];\r\n\r\n                select = move({\r\n                    pos: select,\r\n                    old: size,\r\n                    vel\r\n                });\r\n\r\n                this.setState({select});\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            str = str.substring(0, select)\r\n                + value\r\n                + str.substring(select + 1);\r\n            this.setState({grid: str});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = select === pos\r\n                ? null : pos;\r\n            this.setState({select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        const {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (cell === select)\r\n            return 'grey';\r\n        else if (cell === pos)\r\n            return 'red';\r\n        else if (breaks.includes(cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    clean() {\r\n        const {grid, size} = this.state;\r\n        let val = grid\r\n            .split('\\n')\r\n            .map(v => v.trimEnd())\r\n            .filter(v => v !== '');\r\n\r\n        if (!val.length)\r\n            val = Array(size)\r\n                .fill(' '.repeat(size));\r\n\r\n        const max = Math.max(val.length,\r\n            ...val.map(v => v.length));\r\n\r\n        while (val.length < max)\r\n            val.push('');\r\n\r\n        val = val.map(v => {\r\n            const len = v.length;\r\n\r\n            if (len < max)\r\n                v += ' '.repeat(max - len);\r\n            else\r\n                v = v.substring(0, max);\r\n\r\n            return v;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.props.start,\r\n            grid: val.join(''),\r\n            size: max,\r\n            pos: null,\r\n            select: null,\r\n            text: false,\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    getTable(css) {\r\n        const {grid, size, edit} = this.state;\r\n\r\n        if (this.state.text) {\r\n            let value = '';\r\n\r\n            if (edit) {\r\n                value = grid;\r\n            } else {\r\n                if (grid !== ' '.repeat(size * size)) {\r\n                    const empty = ' '.repeat(size);\r\n                    const split = [...Array(size).keys()]\r\n                        .map(v => grid.substring(\r\n                            size * v, size * (v + 1)))\r\n                        .filter(v => v !== empty);\r\n                    const len = split.length;\r\n\r\n                    for (let i = 0; i < len; i++) {\r\n                        value += split[i].trimEnd();\r\n\r\n                        if (i + 1 !== len)\r\n                            value += '\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            const [row, col]\r\n                = resize(value);\r\n            const changeGrid = (e) =>\r\n                this.setState({\r\n                    grid: e.target.value,\r\n                    edit: true\r\n                });\r\n\r\n            return <form>\r\n                <label>\r\n                    <textarea\r\n                        value={value}\r\n                        placeholder='Input program here...'\r\n                        onChange={changeGrid}\r\n                        onPaste={changeGrid}\r\n                        rows={row} cols={col}\r\n                        style={{\r\n                            minWidth: css,\r\n                            minHeight: `calc(${css} / 3)`\r\n                        }}\r\n                    />\r\n                </label>\r\n            </form>;\r\n        }\r\n\r\n        let cellSize = `calc(${css}/${size}`;\r\n        let table = [...Array(size)]\r\n            .map(x => Array(size));\r\n        let pos;\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                pos = size * i + j;\r\n                table[i][j] = <td key={`${pos}`}\r\n                        className='cell select'\r\n                        onClick={this.changeColor(pos)}\r\n                        bgcolor={this.chooseColor(pos)}\r\n                        style={{\r\n                            maxHeight: cellSize,\r\n                            maxWidth: cellSize\r\n                        }}>\r\n                    <div>\r\n                        &nbsp;{grid[pos]}&nbsp;\r\n                    </div>\r\n                </td>;\r\n            }\r\n        }\r\n\r\n        return <table className='grid'\r\n                style={{\r\n                    width: css,\r\n                    height: css\r\n                }}>\r\n            <tbody>\r\n                {table.map((arr, row) =>\r\n                    <tr key={row.toString()}>\r\n                        {arr}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n\r\n    getInfo(css) {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{\r\n                    fontSize: '75%',\r\n                    width: `calc(${css} / 1.25)`,\r\n                    margin: 'auto',\r\n                    padding: '3vh',\r\n                    textAlign: 'left'\r\n                }}>\r\n                <code>\r\n                    <li>Click to select/unselect</li>\r\n                    <li>Type to change selected cell</li>\r\n                    <li>Press (b) to use breakpoints</li>\r\n                    <li>Hover over buttons for usage</li>\r\n                    <li>\r\n                        Commands located&nbsp;\r\n                        <a href={link}>here</a>\r\n                    </li>\r\n                </code>\r\n            </ul>;\r\n    }\r\n\r\n    changeSize(num) {\r\n        let {\r\n            grid, size,\r\n            select, text\r\n        } = this.state;\r\n\r\n        return function() {\r\n            if (!num || text)\r\n                return;\r\n\r\n            clearInterval(this.timerID);\r\n            let arr = '';\r\n\r\n            if (select !== null)\r\n                select = move({\r\n                    pos: select,\r\n                    vel: [0, 0],\r\n                    old: size,\r\n                    size: num,\r\n                    wrap: false\r\n                });\r\n\r\n            for (let i = 0; i < num; i++)\r\n                for (let j = 0; j < num; j++)\r\n                    if (i < size && j < size)\r\n                        arr += grid[size * i + j];\r\n                    else\r\n                        arr += ' ';\r\n\r\n            this.setState({\r\n                ...this.props.start,\r\n                grid: arr,\r\n                size: num,\r\n                pos: null,\r\n                select\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    getButtons() {\r\n        const {size, text, edit} = this.state;\r\n\r\n        return (<div>\r\n                {button('▶\\ufe0e', 'Run', this.runCode('run'))}\r\n                {button('❮', 'Previous', this.runCode('prev'))}\r\n                {button('❯', 'Next', this.runCode('next'))}\r\n                {button('✖\\ufe0e', 'Stop', () => {\r\n                    if (this.state.text)\r\n                        return;\r\n\r\n                    clearInterval(this.timerID);\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        pos: null\r\n                    });\r\n                })}\r\n                <br />\r\n                {button('➕\\ufe0e', 'Expand', this.changeSize(size + 1))}\r\n                {button('➖\\ufe0e', 'Shrink', this.changeSize(size - 1))}\r\n                {button('📥\\ufe0e', 'Copy/Paste',\r\n                    () => {\r\n                        clearInterval(this.timerID);\r\n\r\n                        if (edit)\r\n                            this.clean();\r\n                        else\r\n                            this.setState({\r\n                                select: null,\r\n                                text: !text\r\n                    })})}\r\n                {home()}\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;\r\n        });\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        const {text, stack} = this.state;\r\n        const val = stack\r\n            ? 'var(--stack)'\r\n            : 'var(--table-size)';\r\n        const left = (size) => (\r\n            <div style={{fontSize: size}}>\r\n                <code>{this.props.name}</code>\r\n                {this.getInfo(val)}\r\n                {this.getButtons()}\r\n                <br />\r\n                {this.getTape()}\r\n                {this.getOutput()}\r\n                {this.getRegister()}\r\n            </div>\r\n        );\r\n\r\n        if (stack) {\r\n            if (text)\r\n                return (\r\n                    <header className='App-header'>\r\n                        <div className='centered'>\r\n                            {left(`calc(${val} / 12)`)}\r\n                            <br />\r\n                            {this.getTable(val)}\r\n                        </div>\r\n                    </header>\r\n                );\r\n\r\n            return (\r\n                <header className='App-header'>\r\n                    <div className='vsplit top'>\r\n                        <div className='centered'>\r\n                            {left(`calc(${val} / 14)`)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='vsplit bottom'>\r\n                        <div className='centered'\r\n                                style={{marginTop: '-5vh'}}>\r\n                            {this.getTable(val)}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        {left(`calc(${val} / 14)`)}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getTable(val)}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code, size) {\r\n        if (!code.includes('*'))\r\n            alert('No halt instruction detected!');\r\n\r\n        let vel = [0, 1];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let c = code[pos];\r\n            let [a, b] = vel;\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                vel = [b, a];\r\n            } else if (c === '/') {\r\n                vel = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                do {\r\n                    pos = wrap(pos);\r\n                    c = code[pos];\r\n                } while (!'\\\\/<>-+*'.includes(c));\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            if (pos !== null)\r\n                pos = wrap(pos);\r\n\r\n            state = {\r\n                pos,\r\n                tape,\r\n                cell,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        pos: 0,\r\n        end: false,\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {\r\n    getDim, button,\r\n    home, resize\r\n} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            reset: true,\r\n            end: true,\r\n            stack: getDim()\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n        this.stack = () => {\r\n            const stack = getDim();\r\n            this.setState({stack});\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n        window.addEventListener(\r\n            'resize', this.stack);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        window.removeEventListener(\r\n            'resize', this.stack);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            const {value, reset, end} = this.state;\r\n            const {start, run} = this.props;\r\n\r\n            if (end) {\r\n                this.func = run(value);\r\n                this.setState(start);\r\n\r\n                if (mode !== 'run' && !reset)\r\n                    return;\r\n            }\r\n\r\n            clearInterval(this.timerID);\r\n            let state;\r\n\r\n            if (mode === 'run') {\r\n                const move = () => {\r\n                    this.setState(this.func());\r\n\r\n                    if (this.state.end)\r\n                        clearInterval(this.timerID);\r\n                };\r\n\r\n                this.timerID = setInterval(move, 200);\r\n            } else if (mode === 'prev') {\r\n                state = this.func(true);\r\n            } else {\r\n                state = this.func();\r\n            }\r\n\r\n            this.setState({\r\n                reset: false,\r\n                ...state\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            const code\r\n                = this.props.clean(val);\r\n\r\n            this.setState({\r\n                ...this.props.start,\r\n                end: true,\r\n                value: val,\r\n                code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        const code = this.state.code;\r\n        const prog = [...code].map((val, ind) => {\r\n            const color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getLeft(css) {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        const [row, col]\r\n            = resize(this.state.value);\r\n\r\n        return (\r\n            <div style={{fontSize:\r\n                    `calc(${css} / 12)`}}>\r\n                <code>\r\n                    {name}\r\n                </code>\r\n                <ul style={{\r\n                        fontSize: '75%',\r\n                        margin: 'auto',\r\n                        padding: '3vh',\r\n                        textAlign: 'left'\r\n                    }}>\r\n                    <code>\r\n                        <li>Hover over buttons for usage</li>\r\n                        <li>\r\n                            Commands located&nbsp;\r\n                            <a href={link}>here</a>\r\n                        </li>\r\n                    </code>\r\n                </ul>\r\n                <form>\r\n                    <label>\r\n                        <textarea\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            onPaste={this.handleChange}\r\n                            rows={row} cols={col}\r\n                            style={{\r\n                                minWidth: css,\r\n                                minHeight: `calc(${css} / 3)`\r\n                            }}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                {button('▶\\ufe0e', 'Run', this.runCode('run'))}\r\n                {button('❮', 'Previous', this.runCode('prev'))}\r\n                {button('❯', 'Next', this.runCode('next'))}\r\n                {button('✖', 'Stop', () => {\r\n                    clearInterval(this.timerID);\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        reset: true,\r\n                        end: true\r\n                    });\r\n                })}\r\n                {home()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {stack} = this.state;\r\n        const val = stack\r\n            ? 'var(--stack)'\r\n            : 'var(--table-size)';\r\n\r\n        const right = <div style={{\r\n                fontSize: `calc(${val} / 12)`}}>\r\n            {this.getProgram()}\r\n            {this.getTape()}\r\n            {this.getOutput()}\r\n            {this.getRegister()}\r\n        </div>;\r\n\r\n        if (stack)\r\n            return <header className='App-header'>\r\n                <div className='centered'>\r\n                    {this.getLeft(val)}\r\n                    <br />\r\n                    {right}\r\n                </div>\r\n            </header>;\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        {this.getLeft(val)}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {right}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction clean(input) {\r\n    let code = '';\r\n\r\n    for (let c of input)\r\n        if ('><!,.'.includes(c))\r\n            code += c;\r\n\r\n    return code;\r\n}\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        const code = clean(input);\r\n        const len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        return function (back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape, acc, ind,\r\n                ptr,  out, end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        clean={clean}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction clean(input) {\r\n    let code = '';\r\n\r\n    for (let c of input)\r\n        if ('+-><'.includes(c))\r\n            code += c;\r\n\r\n    return code;\r\n}\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        const code = clean(input);\r\n        const len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        return function (back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape,\r\n                ind,\r\n                ptr,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        clean={clean}\r\n        tape={true} />;\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function error(str) {\r\n        alert(str + ' start '\r\n            + 'location detected!');\r\n\r\n        let res = {end: true};\r\n        obj.pos = null;\r\n\r\n        return () => res;\r\n    }\r\n\r\n    function dist(x, y, size) {\r\n        let diff = Math.abs(x - y);\r\n        let quo = Math.floor(diff / size);\r\n        let mod = diff % size;\r\n\r\n        return quo + mod;\r\n    }\r\n\r\n    function comp(pos, size) {\r\n        return (x, y) =>\r\n            dist(pos, x, size)\r\n          - dist(pos, y, size);\r\n    }\r\n\r\n    function close(pos, arr) {\r\n        let size = arr.length;\r\n        let warp = [];\r\n\r\n        for (let k in arr)\r\n            if (arr[k] === '@')\r\n                warp.push(k);\r\n\r\n        warp.sort(comp(pos, size));\r\n        return warp.length > 1\r\n            ? warp[1] : pos;\r\n    }\r\n\r\n    let str = '^v<>';\r\n    let dir = [\r\n        [-1, 0],\r\n        [1, 0],\r\n        [0, -1],\r\n        [0, 1]\r\n    ];\r\n\r\n    function run(code, size) {\r\n        obj.pos = null;\r\n        let vel = dir[0];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        if (!code.includes('!')) {\r\n            return error('No');\r\n        }\r\n\r\n        for (let k in code)\r\n            if (code[k] === '!') {\r\n                if (obj.pos !== null)\r\n                    return error('Additional');\r\n\r\n                obj.pos = k;\r\n            }\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {pos, end, out, acc} = state;\r\n            let c = code[pos];\r\n\r\n            if (str.includes(c)) {\r\n                vel = dir[str.indexOf(c)];\r\n            } else if (c === '|') {\r\n                vel = [-vel[0], -vel[1]];\r\n            } else if (c === '@') {\r\n                pos = close(pos, code);\r\n                pos -= size;\r\n\r\n                if (pos < 0)\r\n                    pos += size * size;\r\n            } else if (+c) {\r\n                acc = +c;\r\n            } else if (c === '+') {\r\n                acc += 1;\r\n            } else if (c === '-') {\r\n                acc -= 1;\r\n            } else if (c === '*') {\r\n                acc *= 2;\r\n            } else if (c === 's') {\r\n                acc = acc * acc;\r\n            } else if (c === '/') {\r\n                acc = Math.floor(acc / 2);\r\n            } else if (c === '~') {\r\n                out += String.fromCharCode(acc);\r\n            } else if (c === '?') {\r\n                let rnd = Math.random() * 4;\r\n                vel = dir[Math.floor(rnd)];\r\n            } else if (c === '.') {\r\n                pos = null;\r\n                end = true;\r\n            }\r\n\r\n            if (pos !== null && c !== '@')\r\n                pos = wrap(pos);\r\n\r\n            state = {pos, end, out, acc};\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function WII2D() {\r\n    let obj = {\r\n        pos: null,\r\n        end: false,\r\n        out: '',\r\n        acc: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='WII2D'\r\n        start={obj}\r\n        run={run}\r\n        out={true}\r\n        reg={true} />;\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    const arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    const a = Math.floor(Math.random() * x);\r\n    const b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        const arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            move: true,\r\n            buff: null,\r\n            arr\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        const arr = [...this.state.arr];\r\n        const row = this.state.row;\r\n        const col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr});\r\n    }\r\n\r\n    updateDim() {\r\n        const arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        const s = e.key.toLowerCase();\r\n        const old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    move: false,\r\n                    vel});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        const [a, b] = this.state.vel;\r\n        const {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            const num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        const buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'\r\n                    style={{\r\n                        overflow: 'hidden'\r\n                    }}>\r\n                <table style={{\r\n                            height: '100vh',\r\n                            width:  '100vw',\r\n                            borderSpacing: 'max(0.5vh, 4px)'\r\n                        }}\r\n                        className='grid'>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                        className='cell select'\r\n                                        bgcolor={\r\n                                            val > 0 ? 'white' :\r\n                                            val < 0 ? 'red' : 'black'\r\n                                        }\r\n                                        style={{\r\n                                            cursor: 'default',\r\n                                            borderRadius: 'max(1vh, 8px)'\r\n                                        }}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <div style={{\r\n                        position: 'absolute',\r\n                        bottom: '1vh'\r\n                    }}>\r\n                    {home(true)}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default function Home() {\r\n    document.title = 'Home | Bangyen';\r\n    const style = {\r\n        padding: '0.65em 1.6em',\r\n        maxWidth: 150\r\n    };\r\n\r\n    return (\r\n        <header className='App-header select'>\r\n            <div>\r\n                <div className='dropdown'>\r\n                    <button className='custom'\r\n                            style={style}>\r\n                        Interpreters\r\n                    </button>\r\n                    <div className='dropdown-content'>\r\n                        <Link to='/back'>\r\n                            Back\r\n                        </Link>\r\n                        <Link to='/stun_step'>\r\n                            Stun Step\r\n                        </Link>\r\n                        <Link to='/suffolk'>\r\n                            Suffolk\r\n                        </Link>\r\n                        <Link to='/WII2D'>\r\n                            WII2D\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Link to='/videos'>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            style={style}>\r\n                        Videos\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            style={style}>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom'\r\n                        style={style} />\r\n                </form>\r\n            </div>\r\n            <h1 className='logo'>\r\n                Bangyen\r\n            </h1>\r\n        </header>\r\n    );\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nexport default function Error() {\r\n    document.title = 'Page Not Found | Bangyen';\r\n    return (\r\n        <header className='App-header'>\r\n            <center style={{\r\n                    fontSize: '5vh',\r\n                    paddingBottom: '2vh'}}>\r\n                <code>\r\n                    This page isn't available.\r\n                </code>\r\n            </center>\r\n            <div>\r\n                {home(true)}\r\n            </div>\r\n        </header>\r\n    );\r\n}","import {button, home} from './helper';\r\nimport React from \"react\";\r\n\r\nfunction getVideo(embedId, name, width) {\r\n    return <div>\r\n        <iframe\r\n            width={width}\r\n            height={width / 16 * 9}\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n            title={name}\r\n        />\r\n    </div>;\r\n}\r\n\r\nexport default class Videos extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.id = [\r\n            ['Project Glow DC 2022', 'uoaCbzWmDVk'],\r\n            ['Chicago', 'Ay6w4Fsk8Ec'],\r\n            ['Washington, DC', 'xM4Ttema4cg'],\r\n            ['Firefly 2021', 'nnwVZDGj-SU']\r\n        ];\r\n\r\n        this.changeNum\r\n            = this.changeNum.bind(this);\r\n        this.changeWidth\r\n            = this.changeWidth.bind(this);\r\n\r\n        this.state = {\r\n            width: this.getWidth(),\r\n            num: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Videos | Bangyen';\r\n        window.addEventListener(\r\n            'resize', this.changeWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            'resize', this.changeWidth);\r\n    }\r\n\r\n    getWidth() {\r\n        const height = window.innerHeight;\r\n        let width = window.innerWidth;\r\n\r\n        if (1.1 * height > width)\r\n            width = width * 0.9;\r\n        else\r\n            width = width / 2;\r\n\r\n        return width;\r\n    }\r\n\r\n    changeWidth() {\r\n        const width = this.getWidth();\r\n        this.setState({width});\r\n    }\r\n\r\n    changeNum(val) {\r\n        const len = this.id.length;\r\n        const {num} = this.state;\r\n        val = num + val + len;\r\n\r\n        return () => {\r\n            this.setState({\r\n                num: val % len\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {num, width} = this.state;\r\n        const [name, id] = this.id[num];\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1 style={{fontSize: 'min(10vh, 8vw)'}}>\r\n                    <center>\r\n                        <code>\r\n                            {name}\r\n                        </code>\r\n                    </center>\r\n                </h1>\r\n                {getVideo(id, name, width)}\r\n                <div>\r\n                    {button('❮', 'Previous',\r\n                        this.changeNum(-1), true)}\r\n                    {home(true)}\r\n                    {button('❯', 'Next',\r\n                        this.changeNum(1), true)}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport WII2D from './Components/Interpreters/WII2D';\r\n\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\nimport Videos from './Components/Videos';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\nimport './Button.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/WII2D\">\r\n                        <WII2D />\r\n                    </Route>\r\n                    <Route exact path=\"/videos\">\r\n                        <Videos />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}