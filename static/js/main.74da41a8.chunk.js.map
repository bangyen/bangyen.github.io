{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Interpreters/WII2D.js","Components/Snake.js","Components/Home.js","Components/Error.js","Components/Videos.js","index.js"],"names":["button","sym","func","className","type","onClick","emptyArray","size","arr","Array","fill","map","x","find","ind","len","length","Math","floor","get","move","obj","pos","vel","old","wrap","quo","mod","bind","num","lim","Grid","props","changeColor","changeText","changeSize","state","start","grid","select","breaks","document","title","addEventListener","this","removeEventListener","mode","run","temp","setState","includes","end","e","value","key","toLowerCase","filter","p","push","cell","table","i","j","bgcolor","chooseColor","row","toString","name","link","style","fontSize","textAlign","href","runCode","navigator","clipboard","writeText","join","to","tape","text","val","color","out","reg","acc","getTable","getInfo","getButtons","getTape","getOutput","getRegister","React","Component","Back","code","every","alert","back","c","a","b","outer","handleChange","event","target","prog","ptr","split","col","max","onSubmit","handleSubmit","onChange","onPaste","rows","cols","getProgram","Suffolk","input","inp","prompt","charCodeAt","String","fromCharCode","StunStep","error","str","res","dist","y","diff","abs","close","warp","sort","comp","dir","indexOf","rnd","random","WII2D","createArr","window","innerHeight","innerWidth","_","Snake","updateDim","changeDir","buff","s","timerID","setInterval","clearInterval","n","randomPos","height","width","cursor","marginBottom","Home","class","action","display","Error","YoutubeEmbed","embedId","src","frameBorder","allow","allowFullScreen","Videos","id","change","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74da41a8.chunk.js","sourcesContent":["export function button(sym, func) {\r\n    return <button className='custom'\r\n                type='button'\r\n                onClick={func}>\r\n            {sym}\r\n        </button>;\r\n}\r\n\r\nexport function emptyArray(size) {\r\n    let arr = Array(size).fill(' ');\r\n    return arr.map(x => [...arr]);\r\n}\r\n\r\nexport function find(arr, ind) {\r\n    let len = arr.length;\r\n    let quo = Math.floor(ind / len);\r\n\r\n    return arr[quo];\r\n}\r\n\r\nexport function get(arr, ind) {\r\n    let row = find(arr, ind);\r\n    return row[ind % arr.length];\r\n}\r\n\r\nexport function move(obj) {\r\n    let {\r\n        pos, vel, old,\r\n        size = old,\r\n        wrap = true\r\n    } = obj;\r\n\r\n    let [quo, mod] = vel;\r\n    quo += Math.floor(pos / old);\r\n    mod += pos % old;\r\n\r\n    if (wrap) {\r\n        quo = (quo + size) % size;\r\n        mod = (mod + size) % size;\r\n    } else {\r\n        quo = bind(quo, size);\r\n        mod = bind(mod, size);\r\n    }\r\n\r\n    return quo * size + mod;\r\n}\r\n\r\nfunction bind(num, lim) {\r\n    if (num >= lim)\r\n        num = lim - 1;\r\n    else if (num < 0)\r\n        num = 0;\r\n\r\n    return num;\r\n}","import {button, emptyArray, find, move} from './helper';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText  = this.changeText.bind(this);\r\n        this.changeSize  = this.changeSize.bind(this);\r\n        let size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: emptyArray(size),\r\n            select: null,\r\n            pos:    null,\r\n            breaks: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.pos === null) {\r\n                this.func = this.props.run(\r\n                    this.state.grid);\r\n\r\n                if (mode !== 'run') {\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        select: null,\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.setState({select: null});\r\n            let temp;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(this.state\r\n                               .breaks\r\n                               .includes(temp.pos)\r\n                    || temp.end));\r\n            else if (mode === 'next')\r\n                temp = this.func();\r\n            else if (mode === 'prev')\r\n                temp = this.func(true);\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks} = this.state;\r\n\r\n        if (select !== null) {\r\n            let arr  = this.state.grid;\r\n            let size = arr.length;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (breaks.includes(select))\r\n                    breaks = breaks.filter(p =>\r\n                        p !== select);\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                let vel;\r\n\r\n                if (e.key.includes('Left'))\r\n                    vel = [0, -1];\r\n                else if (e.key.includes('Right'))\r\n                    vel = [0, 1];\r\n                else if (e.key.includes('Up'))\r\n                    vel = [-1, 0];\r\n                else if (e.key.includes('Down'))\r\n                    vel = [1, 0];\r\n\r\n                select = move({\r\n                    pos: select,\r\n                    old: size,\r\n                    vel\r\n                });\r\n\r\n                this.setState({select});\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            find(arr, select)[select % size] = value;\r\n            this.setState({grid: arr});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = select === pos\r\n                ? null : pos;\r\n            this.setState({select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        let {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (cell === select)\r\n            return 'grey';\r\n        else if (cell === pos)\r\n            return 'red';\r\n        else if (breaks.includes(cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    getTable() {\r\n        let grid = this.state.grid;\r\n        let table = emptyArray(grid.length);\r\n        let pos;\r\n\r\n        for (let i in table) {\r\n            for (let j in table) {\r\n                pos = grid.length * +i + +j;\r\n                table[i][j] = <td key={`${i}-${j}`}\r\n                            className='cell select'\r\n                            onClick={this.changeColor(pos)}\r\n                            bgcolor={this.chooseColor(pos)}>\r\n                        <div>\r\n                            &nbsp;{grid[i][j]}&nbsp;\r\n                        </div>\r\n                    </td>;\r\n            }\r\n        }\r\n\r\n        table = table.map((arr, row) =>\r\n                <tr key={row.toString()}>\r\n                    {arr}\r\n                </tr>\r\n            );\r\n\r\n        return <div className='split left'>\r\n                <div className='centered'>\r\n                    <table className='grid'>\r\n                        <tbody>\r\n                            {table}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>;\r\n    }\r\n\r\n    getInfo() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{\r\n                    fontSize: '75%',\r\n                    textAlign: 'left'}}>\r\n                <li>Click to select/unselect</li>\r\n                <li>Type to change selected cell</li>\r\n                <li>Press (b) to use breakpoints</li>\r\n                <li>\r\n                    {name} commands located&nbsp;\r\n                    <a href={link}>here</a>\r\n                </li>\r\n            </ul>;\r\n    }\r\n\r\n    changeSize(num) {\r\n        let {grid, select} = this.state;\r\n\r\n        return function() {\r\n            if (!num)\r\n                return;\r\n\r\n            let arr = emptyArray(num);\r\n            select = move({\r\n                pos: select,\r\n                vel: [0, 0],\r\n                old: grid.length,\r\n                size: num,\r\n                wrap: false\r\n            });\r\n\r\n            for (let i in arr)\r\n                for (let j in arr)\r\n                    if (grid[i])\r\n                        arr[i][j] = grid[i][j];\r\n                    else\r\n                        arr[i][j] = ' ';\r\n\r\n            this.setState({\r\n                grid: arr,\r\n                select\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    getButtons() {\r\n        let {grid} = this.state;\r\n        let size   = grid.length;\r\n\r\n        return (<div>\r\n                {button('▶', this.runCode('run'))}\r\n                {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                {button('✖', () => {\r\n                    let obj = this.props.start;\r\n                    obj.pos = null;\r\n\r\n                    this.setState(obj);\r\n                })}\r\n                <br />\r\n                {button('➕\\ufe0e', this.changeSize(size + 1))}\r\n                {button('➖\\ufe0e', this.changeSize(size - 1))}\r\n                {button('📥\\ufe0e', () => {\r\n                    navigator.clipboard.writeText(\r\n                        grid.map(x => x.join('')).join('\\n')\r\n                )})}\r\n                <Link to='/'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        let tape = this.state.tape;\r\n        let text = tape.map((val, ind) => {\r\n            let color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                {this.getTable()}\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        {this.getInfo()}\r\n                        {this.getButtons()}\r\n                        <br />\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {get, move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code) {\r\n        if (code.every(\r\n                e => !e.includes('*'))) {\r\n            alert('No halt instruction detected!');\r\n        }\r\n\r\n        let size = code.length;\r\n        let vel = [0, 1];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let c = get(code, pos);\r\n            let [a, b] = vel;\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                vel = [b, a];\r\n            } else if (c === '/') {\r\n                vel = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                do {\r\n                    pos = wrap(pos);\r\n                    c = get(code, pos);\r\n                } while (!'\\\\/<>-+*'.includes(c));\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            if (pos !== null)\r\n                pos = wrap(pos);\r\n\r\n            state = {\r\n                pos,\r\n                tape,\r\n                cell,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        pos: 0,\r\n        end: false,\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {Link} from 'react-router-dom';\r\nimport {button} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let state;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    state = this.func();\r\n                } while (!state.end);\r\n            else if (mode === 'prev')\r\n                state = this.func(true);\r\n            else\r\n                state = this.func();\r\n\r\n            this.setState(state);\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            let {run, code}\r\n                = this.props.run(val);\r\n\r\n            this.func = run;\r\n            this.setState({\r\n                ...this.props.start,\r\n                value: val,\r\n                code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        let code = this.state.code;\r\n        let prog = [...code].map((val, ind) => {\r\n            let color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        let tape = this.state.tape;\r\n        let text = tape.map((val, ind) => {\r\n            let color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        let {name, link} = this.props;\r\n        let arr = this.state.value.split('\\n');\r\n        let col = Math.max(...arr.map(val => val.length));\r\n        let row = arr.length;\r\n\r\n        if (row < 3)\r\n            row = 12;\r\n        if (col < 30)\r\n            col = 60;\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name + ' '}\r\n                            (<a href={'https://esolangs.org/wiki/'\r\n                                    + (link ? link : name)}>\r\n                                Commands\r\n                            </a>)\r\n                        </code>\r\n                        <br /><br />\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col} />\r\n                            </label>\r\n                        </form>\r\n                        {button('▶', this.runCode('run'))}\r\n                        {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                        {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                        <Link to='/'>\r\n                            <button className='custom'\r\n                                    type='button'>\r\n                                🏠&#xfe0e;\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getProgram()}\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('><!,.'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape, acc, ind,\r\n                ptr,  out, end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('+-><'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape,\r\n                ind,\r\n                ptr,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {get, move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function error(str) {\r\n        alert(str + ' start '\r\n            + 'location detected!');\r\n\r\n        let res = {end: true};\r\n        obj.pos = null;\r\n\r\n        return () => res;\r\n    }\r\n\r\n    function dist(x, y, size) {\r\n        let diff = Math.abs(x - y);\r\n        let quo = Math.floor(diff / size);\r\n        let mod = diff % size;\r\n\r\n        return quo + mod;\r\n    }\r\n\r\n    function comp(pos, size) {\r\n        return (x, y) =>\r\n            dist(pos, x, size)\r\n          - dist(pos, y, size);\r\n    }\r\n\r\n    function close(pos, arr) {\r\n        let size = arr.length;\r\n        let warp = [];\r\n\r\n        for (let i in arr)\r\n            for (let j in arr)\r\n                if (arr[i][j] === '@')\r\n                    warp.push(size * i + +j);\r\n\r\n        warp.sort(comp(pos, size));\r\n        return warp.length > 1\r\n            ? warp[1] : pos;\r\n    }\r\n\r\n    let str = '^v<>';\r\n    let dir = [\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [0, 1]\r\n        ];\r\n\r\n    function run(code) {\r\n        let size = code.length;\r\n        let vel = dir[0];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        if (code.every(\r\n                e => !e.includes('!'))) {\r\n            return error('No');\r\n        }\r\n\r\n        for (let i in code)\r\n            for (let j in code)\r\n                if (code[i][j] === '!') {\r\n                    if (obj.pos !== null)\r\n                        return error('Additional');\r\n\r\n                    obj.pos = size * i + +j;\r\n                }\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {pos, end, out, acc} = state;\r\n            let c = get(code, pos);\r\n\r\n            if (str.includes(c)) {\r\n                vel = dir[str.indexOf(c)];\r\n            } else if (c === '|') {\r\n                vel = [-vel[0], -vel[1]];\r\n            } else if (c === '@') {\r\n                pos = close(pos, code);\r\n                pos -= size;\r\n\r\n                if (pos < 0)\r\n                    pos += size * size;\r\n            } else if (+c) {\r\n                acc = +c;\r\n            } else if (c === '+') {\r\n                acc += 1;\r\n            } else if (c === '-') {\r\n                acc -= 1;\r\n            } else if (c === '*') {\r\n                acc *= 2;\r\n            } else if (c === 's') {\r\n                acc = acc * acc;\r\n            } else if (c === '/') {\r\n                acc = Math.floor(acc / 2);\r\n            } else if (c === '~') {\r\n                out += String.fromCharCode(acc);\r\n            } else if (c === '?') {\r\n                let rnd = Math.random() * 4;\r\n                vel = dir[Math.floor(rnd)];\r\n            } else if (c === '.') {\r\n                obj.pos = null;\r\n                pos = null;\r\n                end = true;\r\n            }\r\n\r\n            if (pos !== null && c !== '@')\r\n                pos = wrap(pos);\r\n\r\n            state = {pos, end, out, acc};\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function WII2D() {\r\n    let obj = {\r\n        pos: null,\r\n        end: false,\r\n        out: '',\r\n        acc: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='WII2D'\r\n        start={obj}\r\n        run={run}\r\n        out={true}\r\n        reg={true} />;\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    let arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    let a = Math.floor(Math.random() * x);\r\n    let b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        let arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            move: true,\r\n            buff: null,\r\n            arr\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        let arr = [...this.state.arr];\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr});\r\n    }\r\n\r\n    updateDim() {\r\n        let arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        let s = e.key.toLowerCase();\r\n        let old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    move: false,\r\n                    vel});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        let [a, b] = this.state.vel;\r\n        let {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            let num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        let buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}\r\n                        className='grid'>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                    className='cell select'\r\n                                    bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default function Home() {\r\n    document.title = 'Home';\r\n\r\n    return (\r\n        <header className='App-header select'>\r\n            <h1 className='logo'>\r\n                Bangyen\r\n            </h1>\r\n            <div>\r\n                <div class='dropdown'>\r\n                    <button class='custom'>\r\n                        Interpreters\r\n                    </button>\r\n                    <div class='dropdown-content'>\r\n                        <Link to='/back'>\r\n                            Back\r\n                        </Link>\r\n                        <Link to='/stun_step'>\r\n                            Stun Step\r\n                        </Link>\r\n                        <Link to='/suffolk'>\r\n                            Suffolk\r\n                        </Link>\r\n                        <Link to='/WII2D'>\r\n                            WII2D\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Link to='/videos'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Videos\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom' />\r\n                </form>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Error() {\r\n    document.title = '404';\r\n    return (\r\n        <header className='App-header'>\r\n            <h1>404 Error</h1>\r\n            <Link to='/' style={{ marginBottom: '20px' }}>\r\n                <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n            </Link>\r\n        </header>\r\n    );\r\n}","import {Link} from 'react-router-dom';\r\nimport {button} from './helper';\r\nimport React from \"react\";\r\n\r\nconst YoutubeEmbed = ({embedId, name}) => (\r\n    <div className=\"video-responsive\">\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allow={`\r\n                accelerometer;\r\n                autoplay;\r\n                clipboard-write;\r\n                encrypted-media;\r\n                gyroscope;\r\n                picture-in-picture\r\n            `}\r\n            allowFullScreen\r\n            title={name}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default class Videos extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.id = [\r\n            ['Project Glow DC 2022', 'uoaCbzWmDVk'],\r\n            ['Chicago', 'Ay6w4Fsk8Ec'],\r\n            ['Washington, DC', 'xM4Ttema4cg'],\r\n            ['Firefly 2021', 'nnwVZDGj-SU']\r\n        ];\r\n\r\n        this.change\r\n            = this.change.bind(this);\r\n        this.state = {num: 0};\r\n    }\r\n\r\n    change(val) {\r\n        let len = this.id.length;\r\n        let {num} = this.state;\r\n        val = num + val + len;\r\n\r\n        return () => {\r\n            this.setState({\r\n                num: val % len\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let {num} = this.state;\r\n        let [name, id] = this.id[num];\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1>\r\n                    <code>\r\n                        {name}\r\n                    </code>\r\n                </h1>\r\n                <YoutubeEmbed\r\n                    embedId={id}\r\n                    name={name} />\r\n                <div>\r\n                    {button('\\xa0❮\\xa0',\r\n                        this.change(-1))}\r\n                    <Link to='/'>\r\n                        <button className='custom'\r\n                                type='button'>\r\n                            🏠&#xfe0e;\r\n                        </button>\r\n                    </Link>\r\n                    {button('\\xa0❯\\xa0',\r\n                        this.change(1))}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport WII2D from './Components/Interpreters/WII2D';\r\n\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\nimport Videos from './Components/Videos';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\nimport './Button.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/WII2D\">\r\n                        <WII2D />\r\n                    </Route>\r\n                    <Route exact path=\"/videos\">\r\n                        <Videos />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}