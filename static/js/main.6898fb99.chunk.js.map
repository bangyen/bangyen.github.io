{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Snake.js","Components/Home.js","Components/Error.js","index.js"],"names":["button","sym","func","className","type","onClick","emptyArray","size","arr","Array","fill","map","x","pairEquals","y","includes","pair","some","p","Grid","props","changeColor","bind","changeText","state","start","grid","select","pos","breaks","document","title","addEventListener","this","removeEventListener","mode","run","temp","setState","end","e","value","row","col","key","toLowerCase","filter","push","length","cell","table","i","j","Number","bgcolor","chooseColor","toString","name","link","style","fontSize","textAlign","href","obj","change","num","diff","runCode","navigator","clipboard","writeText","join","to","tape","text","val","ind","color","out","reg","acc","getTable","getInfo","getButtons","getTape","getOutput","getRegister","React","Component","Back","vel","code","every","alert","back","a","b","c","outer","handleChange","event","target","prog","ptr","split","Math","max","onSubmit","handleSubmit","onChange","onPaste","rows","cols","getProgram","Suffolk","input","len","inp","prompt","charCodeAt","String","fromCharCode","StunStep","createArr","window","innerHeight","innerWidth","floor","_","random","Snake","updateDim","changeDir","move","buff","s","old","timerID","setInterval","clearInterval","n","randomPos","height","width","cursor","marginBottom","Home","history","action","display","withRouter","Error","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6898fb99.chunk.js","sourcesContent":["export function button(sym, func) {\r\n    return <button className='custom'\r\n                type='button'\r\n                onClick={func}>\r\n            {sym}\r\n        </button>;\r\n}\r\n\r\nexport function emptyArray(size) {\r\n    let arr = Array(size).fill(' ');\r\n    return arr.map(x => [...arr]);\r\n}\r\n\r\nexport function pairEquals(x, y) {\r\n    if (x === null || y === null)\r\n        return x === y;\r\n\r\n    return x[0] === y[0]\r\n        && x[1] === y[1];\r\n}\r\n\r\nexport function includes(arr, pair) {\r\n    return arr.some(p =>\r\n        pairEquals(p, pair));\r\n}\r\n","import {button, emptyArray, pairEquals, includes} from './helper';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText  = this.changeText.bind(this);\r\n        let size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: emptyArray(size),\r\n            select: null,\r\n            pos:    null,\r\n            breaks: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.pos === null) {\r\n                this.func = this.props.run(\r\n                    this.state.grid);\r\n\r\n                if (mode !== 'run') {\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        select: null,\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.setState({select: null});\r\n            let temp;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(includes(\r\n                    this.state.breaks,\r\n                    temp.pos) || temp.end));\r\n            else if (mode === 'next')\r\n                temp = this.func();\r\n            else if (mode === 'prev')\r\n                temp = this.func(true);\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks} = this.state;\r\n\r\n        if (select !== null) {\r\n            let arr = this.state.grid;\r\n            let [row, col] = select;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (includes(breaks, select))\r\n                    breaks = breaks.filter(p =>\r\n                        !pairEquals(p, select));\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks: breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                if (e.key.includes('Left'))\r\n                    col -= 1;\r\n                else if (e.key.includes('Right'))\r\n                    col += 1;\r\n                else if (e.key.includes('Up'))\r\n                    row -= 1;\r\n                else\r\n                    row += 1;\r\n\r\n                let size = this.state.grid.length;\r\n                row = (row + size) % size;\r\n                col = (col + size) % size;\r\n                this.setState({\r\n                    select: [row, col]});\r\n\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            arr[row][col] = value;\r\n            this.setState({grid: arr});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = pairEquals(select, pos)\r\n                ? null : pos;\r\n            this.setState({select: select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        let {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (pairEquals(select, cell))\r\n            return 'grey';\r\n        else if (pairEquals(pos, cell))\r\n            return 'red';\r\n        else if (includes(breaks, cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    getTable() {\r\n        let grid = this.state.grid;\r\n        let table = emptyArray(grid.length);\r\n        let pos;\r\n\r\n        for (let i in table) {\r\n            for (let j in table) {\r\n                pos = [i, j].map(Number);\r\n\r\n                table[i][j] = <td key={`${i}-${j}`}\r\n                            onClick={this.changeColor(pos)}\r\n                            bgcolor={this.chooseColor(pos)}>\r\n                        <div>\r\n                            &nbsp;{grid[i][j]}&nbsp;\r\n                        </div>\r\n                    </td>;\r\n            }\r\n        }\r\n\r\n        table = table.map((arr, row) =>\r\n                <tr key={row.toString()}>\r\n                    {arr}\r\n                </tr>\r\n            );\r\n\r\n        return <div className='split left'>\r\n                <div className='centered'>\r\n                    <table>\r\n                        <tbody>\r\n                            {table}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>;\r\n    }\r\n\r\n    getInfo() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{\r\n                    fontSize: '75%',\r\n                    textAlign: 'left'}}>\r\n                <li>Click to select/unselect</li>\r\n                <li>Type to change selected cell</li>\r\n                <li>Press (b) to use breakpoints</li>\r\n                <li>\r\n                    {name} commands located&nbsp;\r\n                    <a href={link}>here</a>\r\n                </li>\r\n            </ul>;\r\n    }\r\n\r\n    getButtons() {\r\n        let arr = this.state.grid;\r\n        let obj = this.props.start;\r\n\r\n        let change = function (num) {\r\n            return function() {\r\n                if (!num)\r\n                    return;\r\n\r\n                let diff = emptyArray(num);\r\n\r\n                for (let i in diff)\r\n                    for (let j in diff[0])\r\n                        if (arr[i])\r\n                            diff[i][j] = arr[i][j];\r\n                        else\r\n                            diff[i][j] = ' ';\r\n\r\n                this.setState({grid: diff});\r\n            }.bind(this);\r\n        }.bind(this);\r\n\r\n        return (<div>\r\n                {button('▶', this.runCode('run'))}\r\n                {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                {button('✖', () => this.setState({\r\n                    ...obj, pos: null\r\n                }))}\r\n                <br />\r\n                {button('➕\\ufe0e', change(arr.length + 1))}\r\n                {button('➖\\ufe0e', change(arr.length - 1))}\r\n                {button('📥\\ufe0e', () => {\r\n                    navigator.clipboard.writeText(\r\n                        arr.map(x => x.join('')).join('\\n')\r\n                )})}\r\n                <Link to='/'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        let tape = this.state.tape;\r\n        let text = tape.map((val, ind) => {\r\n            let color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color: color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                {this.getTable()}\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        {this.getInfo()}\r\n                        {this.getButtons()}\r\n                        <br />\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code) {\r\n        if (code.every(\r\n                e => !e.includes('*'))) {\r\n            alert('No halt instruction detected!');\r\n        }\r\n\r\n        let row = code.length;\r\n        let col = code[0].length;\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let [x, y] = pos;\r\n            let [a, b] = state.vel;\r\n            let c = code[x][y];\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                [a, b] = [b, a];\r\n            } else if (c === '/') {\r\n                [a, b] = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                [x, y] = [x + a, y + b];\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            x = (x + a + row) % row;\r\n            y = (y + b + col) % col;\r\n            state = {\r\n                pos: pos ? [x, y] : pos,\r\n                vel: [a, b],\r\n                tape: tape,\r\n                cell: cell,\r\n                end: end\r\n            };\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        end: false,\r\n        pos: [0, 0],\r\n        vel: [0, 1],\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {Link} from 'react-router-dom';\r\nimport {button} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let state;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    state = this.func();\r\n                } while (!state.end);\r\n            else if (mode === 'prev')\r\n                state = this.func(true);\r\n            else\r\n                state = this.func();\r\n\r\n            this.setState(state);\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            let {run, code}\r\n                = this.props.run(val);\r\n\r\n            this.func = run;\r\n            this.setState({\r\n                ...this.props.start,\r\n                value: val,\r\n                code: code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        let code = this.state.code;\r\n        let prog = [...code].map((val, ind) => {\r\n            let color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color: color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        let tape = this.state.tape;\r\n        let text = tape.map((val, ind) => {\r\n            let color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color: color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        let {name, link} = this.props;\r\n        let arr = this.state.value.split('\\n');\r\n        let col = Math.max(...arr.map(val => val.length));\r\n        let row = arr.length;\r\n\r\n        if (row < 3)\r\n            row = 12;\r\n        if (col < 30)\r\n            col = 60;\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name + ' '}\r\n                            (<a href={'https://esolangs.org/wiki/'\r\n                                    + (link ? link : name)}>\r\n                                Commands\r\n                            </a>)\r\n                        </code>\r\n                        <br /><br />\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col} />\r\n                            </label>\r\n                        </form>\r\n                        {button('▶', this.runCode('run'))}\r\n                        {button('\\xa0❮\\xa0', this.runCode('prev'))}\r\n                        {button('\\xa0❯\\xa0', this.runCode('next'))}\r\n                        <Link to='/'>\r\n                            <button className='custom'\r\n                                    type='button'>\r\n                                🏠&#xfe0e;\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getProgram()}\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('><!,.'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape: tape,\r\n                acc: acc,\r\n                ind: ind,\r\n                ptr: ptr,\r\n                out: out,\r\n                end: end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code: code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('+-><'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape: tape,\r\n                ind: ind,\r\n                ptr: ptr,\r\n                end: end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code: code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    let arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    let a = Math.floor(Math.random() * x);\r\n    let b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        let arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            arr: arr,\r\n            move: true,\r\n            buff: null\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        let arr = [...this.state.arr];\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr: arr});\r\n    }\r\n\r\n    updateDim() {\r\n        let arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr: arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        let s = e.key.toLowerCase();\r\n        let old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    vel: vel,\r\n                    move: false});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        let [a, b] = this.state.vel;\r\n        let {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            let num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        let buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr: arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                    bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            select: false,\r\n            value: 'back'\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Home';\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props\r\n            .history\r\n            .push(`/${this.state.value}`);\r\n    }\r\n\r\n    render() {\r\n        let select;\r\n\r\n        if (this.state.select)\r\n            select = (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        <select\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}>\r\n                            <option value=\"back\">Back</option>\r\n                            <option value=\"stun_step\">Stun Step</option>\r\n                            <option value=\"suffolk\">Suffolk</option>\r\n                        </select>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>);\r\n        else\r\n            select = (null);\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1 className='logo'>\r\n                    Bangyen\r\n                </h1>\r\n                <div>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            onClick={() => this.setState({\r\n                                select: true})}>\r\n                        Interpreter\r\n                    </button>\r\n                    <Link to='/snake'>\r\n                        <button className='custom'\r\n                                type='button'>\r\n                            Snake\r\n                        </button>\r\n                    </Link>\r\n                    <form action='https://github.com/bangyen'\r\n                            style={{display: 'inline-block'}}>\r\n                        <input type='submit'\r\n                            value='GitHub'\r\n                            className='custom' />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    {select}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Error() {\r\n    document.title = '404';\r\n    return (\r\n        <header className='App-header'>\r\n            <h1>404 Error</h1>\r\n            <Link to='/' style={{ marginBottom: '20px' }}>\r\n                <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n            </Link>\r\n        </header>\r\n    );\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}