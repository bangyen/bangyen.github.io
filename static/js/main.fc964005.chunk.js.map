{"version":3,"sources":["Components/helper.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Interpreters/StunStep.js","Components/Interpreters/WII2D.js","Components/Snake.js","Components/Home.js","Components/Error.js","Components/Videos.js","index.js"],"names":["button","sym","func","title","className","type","onClick","home","to","resize","str","arr","split","map","val","length","col","Math","max","row","move","obj","pos","vel","old","size","wrap","quo","mod","floor","bind","num","lim","Grid","props","changeColor","changeText","changeSize","changeGrid","message","state","start","grid","repeat","select","breaks","text","edit","document","this","name","addEventListener","removeEventListener","mode","clean","run","setState","temp","includes","end","e","value","key","toLowerCase","filter","p","push","substring","cell","event","target","v","trimEnd","Array","fill","len","join","empty","keys","i","onChange","onPaste","rows","cols","table","x","j","bgcolor","chooseColor","toString","link","style","fontSize","textAlign","href","console","log","runCode","tape","ind","color","out","reg","acc","getTable","getInfo","getButtons","getTape","getOutput","getRegister","React","Component","Back","code","alert","back","c","a","b","outer","handleChange","prog","ptr","getProgram","Suffolk","input","inp","prompt","charCodeAt","String","fromCharCode","StunStep","error","res","dist","y","diff","abs","close","warp","k","sort","comp","dir","indexOf","rnd","random","WII2D","createArr","window","innerHeight","innerWidth","_","Snake","updateDim","changeDir","buff","s","timerID","setInterval","clearInterval","n","randomPos","height","width","cursor","marginBottom","Home","action","display","Error","padding","getVideo","embedId","src","frameBorder","allowFullScreen","Videos","id","change","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc964005.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nexport function button(sym, func, title) {\r\n    return <button className='custom'\r\n                type='button'\r\n                onClick={func}\r\n                title={title}>\r\n            {sym}\r\n        </button>;\r\n}\r\n\r\nexport function home() {\r\n    return <Link to='/'>\r\n        <button className='custom'\r\n                type='button'\r\n                title='Home'>\r\n            🏠&#xfe0e;\r\n        </button>\r\n    </Link>;\r\n}\r\n\r\nexport function resize(str) {\r\n    const arr = str.split('\\n')\r\n        .map(val => val.length);\r\n    let col = Math.max(...arr);\r\n    let row = arr.length;\r\n\r\n    if (row < 15)\r\n        row = 15;\r\n    if (col < 65)\r\n        col = 65;\r\n\r\n    return [row, col];\r\n}\r\n\r\nexport function move(obj) {\r\n    const {\r\n        pos, vel, old,\r\n        size = old,\r\n        wrap = true\r\n    } = obj;\r\n\r\n    let [quo, mod] = vel;\r\n    quo += Math.floor(pos / old);\r\n    mod += pos % old;\r\n\r\n    if (wrap) {\r\n        quo = (quo + size) % size;\r\n        mod = (mod + size) % size;\r\n    } else {\r\n        quo = bind(quo, size);\r\n        mod = bind(mod, size);\r\n    }\r\n\r\n    return quo * size + mod;\r\n}\r\n\r\nfunction bind(num, lim) {\r\n    if (num >= lim)\r\n        num = lim - 1;\r\n    else if (num < 0)\r\n        num = 0;\r\n\r\n    return num;\r\n}","import {\r\n    button, home,\r\n    resize, move\r\n} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeText = this.changeText.bind(this);\r\n        this.changeSize = this.changeSize.bind(this);\r\n        this.changeGrid = this.changeGrid.bind(this);\r\n        this.message = 'Input program here...';\r\n        const size = 5;\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            grid: ' '.repeat(size * size),\r\n            size,\r\n            select: null,\r\n            pos:    null,\r\n            breaks: [],\r\n            text: false,\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.edit)\r\n                this.clean();\r\n\r\n            if (this.state.pos === null) {\r\n                const {grid, size} = this.state;\r\n                const {run, start} = this.props;\r\n                this.func = run(grid, size);\r\n\r\n                if (mode !== 'run') {\r\n                    this.setState({\r\n                        ...start,\r\n                        select: null,\r\n                    });\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.setState({select: null});\r\n            let temp;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(this.state\r\n                               .breaks\r\n                               .includes(temp.pos)\r\n                    || temp.end));\r\n            else if (mode === 'next')\r\n                temp = this.func();\r\n            else if (mode === 'prev')\r\n                temp = this.func(true);\r\n\r\n            this.setState(temp);\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks, text} = this.state;\r\n\r\n        if (select !== null && !text) {\r\n            let str = this.state.grid;\r\n            const size = str.length;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (breaks.includes(select))\r\n                    breaks = breaks.filter(p =>\r\n                        p !== select);\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                let vel;\r\n\r\n                if (e.key.includes('Left'))\r\n                    vel = [0, -1];\r\n                else if (e.key.includes('Right'))\r\n                    vel = [0, 1];\r\n                else if (e.key.includes('Up'))\r\n                    vel = [-1, 0];\r\n                else if (e.key.includes('Down'))\r\n                    vel = [1, 0];\r\n\r\n                select = move({\r\n                    pos: select,\r\n                    old: size,\r\n                    vel\r\n                });\r\n\r\n                this.setState({select});\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            str = str.substring(0, select)\r\n                + value\r\n                + str.substring(select + 1);\r\n            this.setState({grid: str});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = select === pos\r\n                ? null : pos;\r\n            this.setState({select});\r\n        }.bind(this);\r\n    }\r\n\r\n    chooseColor(cell) {\r\n        const {select, pos, breaks}\r\n            = this.state;\r\n\r\n        if (cell === select)\r\n            return 'grey';\r\n        else if (cell === pos)\r\n            return 'red';\r\n        else if (breaks.includes(cell))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    changeGrid(event) {\r\n        const val = event.target.value;\r\n        this.setState({\r\n            grid: val,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    clean() {\r\n        const {grid, size} = this.state;\r\n        let val = grid\r\n            .split('\\n')\r\n            .map(v => v.trimEnd())\r\n            .filter(v => v !== '');\r\n\r\n        if (!val.length || val[0] === this.message)\r\n            val = Array(size).fill(' '.repeat(size));\r\n\r\n        const max = Math.max(val.length,\r\n            ...val.map(v => v.length));\r\n\r\n        while (val.length < max)\r\n            val.push('');\r\n\r\n        val = val.map(v => {\r\n            const len = v.length;\r\n\r\n            if (len < max)\r\n                v += ' '.repeat(max - len);\r\n            else\r\n                v = v.substring(0, max);\r\n\r\n            return v;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.props.start,\r\n            grid: val.join(''),\r\n            size: max,\r\n            pos: null,\r\n            select: null,\r\n            text: false,\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    getTable() {\r\n        const {grid, size, edit} = this.state;\r\n\r\n        if (this.state.text) {\r\n            let value = '';\r\n\r\n            if (edit) {\r\n                value = grid;\r\n            } else {\r\n                if (grid === ' '.repeat(size * size)) {\r\n                    value = this.message;\r\n                } else {\r\n                    const empty = ' '.repeat(size);\r\n                    const split = [...Array(size).keys()]\r\n                        .map(v => grid.substring(\r\n                            size * v, size * (v + 1)))\r\n                        .filter(v => v !== empty);\r\n                    const len = split.length;\r\n\r\n                    for (let i = 0; i < len; i++) {\r\n                        value += split[i].trimEnd();\r\n\r\n                        if (i + 1 !== len)\r\n                            value += '\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            const [row, col]\r\n                = resize(value);\r\n\r\n            return <form>\r\n                <label>\r\n                    <textarea\r\n                        value={value}\r\n                        onChange={this.changeGrid}\r\n                        onPaste={this.changeGrid}\r\n                        rows={row} cols={col} />\r\n                </label>\r\n            </form>;\r\n        }\r\n\r\n        let table = [...Array(size)]\r\n            .map(x => Array(size));\r\n        let pos;\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                pos = size * i + j;\r\n                table[i][j] = <td key={`${pos}`}\r\n                        className='cell select'\r\n                        onClick={this.changeColor(pos)}\r\n                        bgcolor={this.chooseColor(pos)}>\r\n                    <div>\r\n                        &nbsp;{grid[pos]}&nbsp;\r\n                    </div>\r\n                </td>;\r\n            }\r\n        }\r\n\r\n        return <table className='grid'>\r\n            <tbody>\r\n                {table.map((arr, row) =>\r\n                    <tr key={row.toString()}>\r\n                        {arr}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n\r\n    getInfo() {\r\n        let {name, link} = this.props;\r\n        link = 'https://esolangs.org/wiki/'\r\n            + (link ? link : name);\r\n\r\n        return <ul style={{\r\n                    fontSize: '75%',\r\n                    textAlign: 'left'}}>\r\n                <li>Click to select/unselect</li>\r\n                <li>Type to change selected cell</li>\r\n                <li>Press (b) to use breakpoints</li>\r\n                <li>Hover over buttons for usage</li>\r\n                <li>\r\n                    {name} commands located&nbsp;\r\n                    <a href={link}>here</a>\r\n                </li>\r\n            </ul>;\r\n    }\r\n\r\n    changeSize(num) {\r\n        let {\r\n            grid, size,\r\n            select, text\r\n        } = this.state;\r\n\r\n        return function() {\r\n            if (!num || text)\r\n                return;\r\n\r\n            let arr = '';\r\n\r\n            if (select !== null)\r\n                select = move({\r\n                    pos: select,\r\n                    vel: [0, 0],\r\n                    old: size,\r\n                    size: num,\r\n                    wrap: false\r\n                });\r\n\r\n            for (let i = 0; i < num; i++)\r\n                for (let j = 0; j < num; j++)\r\n                    if (i < size && j < size)\r\n                        arr += grid[size * i + j];\r\n                    else\r\n                        arr += ' ';\r\n\r\n            console.log(arr);\r\n            this.setState({\r\n                ...this.props.start,\r\n                grid: arr,\r\n                size: num,\r\n                pos: null,\r\n                select\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    getButtons() {\r\n        const {size, text, edit} = this.state;\r\n\r\n        return (<div>\r\n                {button('▶', this.runCode('run'), 'Run')}\r\n                {button('\\xa0❮\\xa0', this.runCode('prev'), 'Previous')}\r\n                {button('\\xa0❯\\xa0', this.runCode('next'), 'Next')}\r\n                {button('✖', () => {\r\n                    if (this.state.text)\r\n                        return;\r\n\r\n                    this.setState({\r\n                        ...this.props.start,\r\n                        pos: null\r\n                    });\r\n                }, 'Stop')}\r\n                <br />\r\n                {button('➕\\ufe0e', this.changeSize(size + 1), 'Expand')}\r\n                {button('➖\\ufe0e', this.changeSize(size - 1), 'Shrink')}\r\n                {button('📥\\ufe0e',\r\n                    () => {\r\n                        if (edit)\r\n                            this.clean();\r\n                         else\r\n                            this.setState({\r\n                                select: null,\r\n                                text: !text\r\n                    })}, 'Copy/Paste')}\r\n                {home()}\r\n            </div>);\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.cell === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;\r\n        });\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        {this.getTable()}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        {this.getInfo()}\r\n                        {this.getButtons()}\r\n                        <br />\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function run(code, size) {\r\n        if (!code.includes('*'))\r\n            alert('No halt instruction detected!');\r\n\r\n        let vel = [0, 1];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {tape, cell, end, pos} = state;\r\n            let c = code[pos];\r\n            let [a, b] = vel;\r\n            tape = [...tape];\r\n\r\n            if (c === '\\\\') {\r\n                vel = [b, a];\r\n            } else if (c === '/') {\r\n                vel = [-b, -a];\r\n            } else if (c === '<' && cell) {\r\n                cell -= 1;\r\n            } else if (c === '>') {\r\n                cell += 1;\r\n                if (cell === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '-') {\r\n                tape[cell] ^= 1;\r\n            } else if (c === '+' && !tape[cell]) {\r\n                do {\r\n                    pos = wrap(pos);\r\n                    c = code[pos];\r\n                } while (!'\\\\/<>-+*'.includes(c));\r\n            } else if (c === '*') {\r\n                end = true;\r\n                pos = null;\r\n            }\r\n\r\n            if (pos !== null)\r\n                pos = wrap(pos);\r\n\r\n            state = {\r\n                pos,\r\n                tape,\r\n                cell,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Back() {\r\n    let obj = {\r\n        pos: 0,\r\n        end: false,\r\n        tape: [0],\r\n        cell: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='Back'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {button, home, resize} from './helper';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...this.props.start,\r\n            value: '',\r\n            code: '',\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange\r\n            = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.props.name\r\n            + ' Interpreter | Bangyen';\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            let state;\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    state = this.func();\r\n                } while (!state.end);\r\n            else if (mode === 'prev')\r\n                state = this.func(true);\r\n            else\r\n                state = this.func();\r\n\r\n            this.setState(state);\r\n        }.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const val = event.target.value;\r\n\r\n        if (val !== this.state.value) {\r\n            const {run, code}\r\n                = this.props.run(val);\r\n\r\n            this.func = run;\r\n            this.setState({\r\n                ...this.props.start,\r\n                value: val,\r\n                code\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        const code = this.state.code;\r\n        const prog = [...code].map((val, ind) => {\r\n            const color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    {text}{prog}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getTape() {\r\n        if (!this.props.tape)\r\n            return (null);\r\n\r\n        const tape = this.state.tape;\r\n        const text = tape.map((val, ind) => {\r\n            const color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <div className='output'>\r\n                <code>\r\n                    Tape:{text}\r\n                </code>\r\n            </div>;\r\n    }\r\n\r\n    getOutput() {\r\n        if (this.props.out)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Output:\r\n                        {this.state.out === ''\r\n                            ? '' : ' '}\r\n                        {this.state.out}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    getRegister() {\r\n        if (this.props.reg)\r\n            return <div className='output'>\r\n                    <code>\r\n                        Register: {this.state.acc}\r\n                    </code>\r\n                </div>;\r\n\r\n        return (null);\r\n    }\r\n\r\n    render() {\r\n        const {name, link} = this.props;\r\n        const [row, col]\r\n            = resize(this.state.value);\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name + ' '}\r\n                            (<a href={'https://esolangs.org/wiki/'\r\n                                    + (link ? link : name)}>\r\n                                Commands\r\n                            </a>)\r\n                        </code>\r\n                        <br /><br />\r\n                        <form>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col} />\r\n                            </label>\r\n                        </form>\r\n                        {button('▶', this.runCode('run'), 'Run')}\r\n                        {button('\\xa0❮\\xa0', this.runCode('prev'), 'Previous')}\r\n                        {button('\\xa0❯\\xa0', this.runCode('next'), 'Next')}\r\n                        {home()}\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        {this.getProgram()}\r\n                        {this.getTape()}\r\n                        {this.getOutput()}\r\n                        {this.getRegister()}\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('><!,.'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let c = code[num % len];\r\n            let {end} = state;\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0)\r\n                    end = true;\r\n                else if (state.end)\r\n                    end = false;\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let {tape, acc, ptr, out} = state;\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '>') {\r\n                ptr += 1;\r\n                if (ptr === tape.length)\r\n                    tape.push(0);\r\n            } else if (c === '<') {\r\n                acc += tape[ptr];\r\n                ptr = 0;\r\n            } else if (c === '!') {\r\n                tape[ptr] -= acc - 1;\r\n\r\n                if (tape[ptr] < 0)\r\n                    tape[ptr] = 0;\r\n\r\n                acc = 0;\r\n                ptr = 0;\r\n            } else if (c === ',') {\r\n                let inp = '';\r\n\r\n                while (!inp.length)\r\n                    inp = prompt('Input: ');\r\n\r\n                acc = inp.charCodeAt(0);\r\n            } else {\r\n                if (acc > 0)\r\n                    out += String\r\n                        .fromCharCode(acc - 1);\r\n            }\r\n\r\n            state = {\r\n                tape, acc, ind,\r\n                ptr,  out, end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function Suffolk() {\r\n    let obj = {\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Suffolk'\r\n        start={obj}\r\n        run={run}\r\n        tape={true}\r\n        out={true}\r\n        reg={true} />;\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction outer(obj) {\r\n    function run(input) {\r\n        let code = '';\r\n\r\n        for (let c of input)\r\n            if ('+-><'.includes(c))\r\n                code += c;\r\n\r\n        let len = code.length;\r\n        let arr = [obj];\r\n        let num = 0;\r\n\r\n        function inner(back = false) {\r\n            let state = arr[arr.length - 1];\r\n            let {tape, ptr, end} = state;\r\n            let c = code[num % len];\r\n\r\n            if (back) {\r\n                if (num)\r\n                    num -= 1;\r\n            } else {\r\n                num += 1;\r\n\r\n                if (num % len === 0) {\r\n                    end = true;\r\n                } else if (state.end) {\r\n                    if (tape[ptr]) {\r\n                        end = false;\r\n                    } else {\r\n                        arr = [obj];\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (num < arr.length)\r\n                return arr[num];\r\n\r\n            let ind = num % len;\r\n            tape = [...tape];\r\n\r\n            if (c === '+') {\r\n                tape[ptr] += 1;\r\n            } else if (tape[ptr]) {\r\n                if (c === '-') {\r\n                    tape[ptr] -= 1;\r\n                } else if (c === '>') {\r\n                    ptr += 1;\r\n\r\n                    if (ptr === tape.length)\r\n                        tape.push(1);\r\n                } else if (ptr) {\r\n                    ptr -= 1;\r\n                }\r\n            }\r\n\r\n            state = {\r\n                tape,\r\n                ind,\r\n                ptr,\r\n                end\r\n            };\r\n\r\n            arr.push(state);\r\n            return state;\r\n        };\r\n\r\n        return {\r\n            run: inner,\r\n            code\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function StunStep() {\r\n    let obj = {\r\n        tape: [1],\r\n        ind: 0,\r\n        ptr: 0,\r\n        end: false\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <TextBox\r\n        name='Stun Step'\r\n        link='Stun_Step'\r\n        start={obj}\r\n        run={run}\r\n        tape={true} />;\r\n}","import {move} from '../helper';\r\nimport Grid from '../Grid';\r\n\r\nfunction outer(obj) {\r\n    function error(str) {\r\n        alert(str + ' start '\r\n            + 'location detected!');\r\n\r\n        let res = {end: true};\r\n        obj.pos = null;\r\n\r\n        return () => res;\r\n    }\r\n\r\n    function dist(x, y, size) {\r\n        let diff = Math.abs(x - y);\r\n        let quo = Math.floor(diff / size);\r\n        let mod = diff % size;\r\n\r\n        return quo + mod;\r\n    }\r\n\r\n    function comp(pos, size) {\r\n        return (x, y) =>\r\n            dist(pos, x, size)\r\n          - dist(pos, y, size);\r\n    }\r\n\r\n    function close(pos, arr) {\r\n        let size = arr.length;\r\n        let warp = [];\r\n\r\n        for (let k in arr)\r\n            if (arr[k] === '@')\r\n                warp.push(k);\r\n\r\n        warp.sort(comp(pos, size));\r\n        return warp.length > 1\r\n            ? warp[1] : pos;\r\n    }\r\n\r\n    let str = '^v<>';\r\n    let dir = [\r\n        [-1, 0],\r\n        [1, 0],\r\n        [0, -1],\r\n        [0, 1]\r\n    ];\r\n\r\n    function run(code, size) {\r\n        obj.pos = null;\r\n        let vel = dir[0];\r\n        let arr = [obj];\r\n        let ind = 0;\r\n\r\n        if (!code.includes('!')) {\r\n            return error('No');\r\n        }\r\n\r\n        for (let k in code)\r\n            if (code[k] === '!') {\r\n                if (obj.pos !== null)\r\n                    return error('Additional');\r\n\r\n                obj.pos = k;\r\n            }\r\n\r\n        function wrap(pos) {\r\n            return move({\r\n                pos,\r\n                vel,\r\n                old: size\r\n            });\r\n        }\r\n\r\n        return function(back = false) {\r\n            let state = arr[arr.length - 1];\r\n\r\n            if (back) {\r\n                if (ind)\r\n                    ind -= 1;\r\n            } else {\r\n                if (state.end)\r\n                    arr = [obj];\r\n                else\r\n                    ind += 1;\r\n            }\r\n\r\n            if (ind < arr.length)\r\n                return arr[ind];\r\n\r\n            let {pos, end, out, acc} = state;\r\n            let c = code[pos];\r\n\r\n            if (str.includes(c)) {\r\n                vel = dir[str.indexOf(c)];\r\n            } else if (c === '|') {\r\n                vel = [-vel[0], -vel[1]];\r\n            } else if (c === '@') {\r\n                pos = close(pos, code);\r\n                pos -= size;\r\n\r\n                if (pos < 0)\r\n                    pos += size * size;\r\n            } else if (+c) {\r\n                acc = +c;\r\n            } else if (c === '+') {\r\n                acc += 1;\r\n            } else if (c === '-') {\r\n                acc -= 1;\r\n            } else if (c === '*') {\r\n                acc *= 2;\r\n            } else if (c === 's') {\r\n                acc = acc * acc;\r\n            } else if (c === '/') {\r\n                acc = Math.floor(acc / 2);\r\n            } else if (c === '~') {\r\n                out += String.fromCharCode(acc);\r\n            } else if (c === '?') {\r\n                let rnd = Math.random() * 4;\r\n                vel = dir[Math.floor(rnd)];\r\n            } else if (c === '.') {\r\n                pos = null;\r\n                end = true;\r\n            }\r\n\r\n            if (pos !== null && c !== '@')\r\n                pos = wrap(pos);\r\n\r\n            state = {pos, end, out, acc};\r\n            arr.push(state);\r\n\r\n            return state;\r\n        };\r\n    }\r\n\r\n    return run;\r\n}\r\n\r\nexport default function WII2D() {\r\n    let obj = {\r\n        pos: null,\r\n        end: false,\r\n        out: '',\r\n        acc: 0\r\n    };\r\n\r\n    let run = outer(obj);\r\n    return <Grid\r\n        name='WII2D'\r\n        start={obj}\r\n        run={run}\r\n        out={true}\r\n        reg={true} />;\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    const arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    const a = Math.floor(Math.random() * x);\r\n    const b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        const arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            move: true,\r\n            buff: null,\r\n            arr\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        const arr = [...this.state.arr];\r\n        const row = this.state.row;\r\n        const col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr});\r\n    }\r\n\r\n    updateDim() {\r\n        const arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        const s = e.key.toLowerCase();\r\n        const old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    move: false,\r\n                    vel});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake | Bangyen';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        const [a, b] = this.state.vel;\r\n        const {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            const num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        const buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}\r\n                        className='grid'>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                    className='cell select'\r\n                                    bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <div style={{marginBottom: '20px'}}>\r\n                    {home()}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default function Home() {\r\n    document.title = 'Home | Bangyen';\r\n\r\n    return (\r\n        <header className='App-header select'>\r\n            <h1 className='logo'>\r\n                Bangyen\r\n            </h1>\r\n            <div>\r\n                <div className='dropdown'>\r\n                    <button className='custom'>\r\n                        Interpreters\r\n                    </button>\r\n                    <div className='dropdown-content'>\r\n                        <Link to='/back'>\r\n                            Back\r\n                        </Link>\r\n                        <Link to='/stun_step'>\r\n                            Stun Step\r\n                        </Link>\r\n                        <Link to='/suffolk'>\r\n                            Suffolk\r\n                        </Link>\r\n                        <Link to='/WII2D'>\r\n                            WII2D\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Link to='/videos'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Videos\r\n                    </button>\r\n                </Link>\r\n                <Link to='/snake'>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        Snake\r\n                    </button>\r\n                </Link>\r\n                <form action='https://github.com/bangyen'\r\n                        style={{display: 'inline-block'}}>\r\n                    <input type='submit'\r\n                        value='GitHub'\r\n                        className='custom' />\r\n                </form>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import {home} from './helper';\r\nimport React from 'react';\r\n\r\nexport default function Error() {\r\n    document.title = 'Page Not Found | Bangyen';\r\n    return (\r\n        <header className='App-header'>\r\n            <code style={{padding: '10px'}}>\r\n                This page isn't available.\r\n            </code>\r\n            {home()}\r\n        </header>\r\n    );\r\n}","import {button, home} from './helper';\r\nimport React from \"react\";\r\n\r\nfunction getVideo(embedId, name) {\r\n    return <div>\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n            title={name}\r\n        />\r\n    </div>;\r\n}\r\n\r\nexport default class Videos extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.id = [\r\n            ['Project Glow DC 2022', 'uoaCbzWmDVk'],\r\n            ['Chicago', 'Ay6w4Fsk8Ec'],\r\n            ['Washington, DC', 'xM4Ttema4cg'],\r\n            ['Firefly 2021', 'nnwVZDGj-SU']\r\n        ];\r\n\r\n        this.change\r\n            = this.change.bind(this);\r\n        this.state = {num: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Videos | Bangyen';\r\n    }\r\n\r\n    change(val) {\r\n        const len = this.id.length;\r\n        const {num} = this.state;\r\n        val = num + val + len;\r\n\r\n        return () => {\r\n            this.setState({\r\n                num: val % len\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {num} = this.state;\r\n        const [name, id] = this.id[num];\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1>\r\n                    <code>\r\n                        {name}\r\n                    </code>\r\n                </h1>\r\n                {getVideo(id, name)}\r\n                <div>\r\n                    {button('\\xa0❮\\xa0',\r\n                        this.change(-1),\r\n                        'Previous')}\r\n                    {home()}\r\n                    {button('\\xa0❯\\xa0',\r\n                        this.change(1),\r\n                        'Next')}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport StunStep from './Components/Interpreters/StunStep';\r\nimport WII2D from './Components/Interpreters/WII2D';\r\n\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\nimport Videos from './Components/Videos';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\nimport './Button.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/stun_step\">\r\n                        <StunStep />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/WII2D\">\r\n                        <WII2D />\r\n                    </Route>\r\n                    <Route exact path=\"/videos\">\r\n                        <Videos />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}