{"version":3,"file":"static/js/201.8bb92112.chunk.js","mappings":"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","sources":["hooks.ts","components/Layout.tsx","Pages/Home.tsx","Pages/Error.tsx","Pages/Snake.tsx","Pages/Board.tsx","Pages/Lights/boardHandlers.ts","Pages/Lights/matrices.ts","Pages/Lights/chaseHandlers.ts","Pages/Lights/Example.tsx","Pages/Lights/Info.tsx","Pages/Lights/LightsOut.tsx","components/ResearchDemo.tsx","Pages/ZSharp.tsx","Pages/Oligopoly.tsx","Pages/Interpreters.tsx","Pages/index.ts"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\nimport { useMediaQuery } from './components/mui';\nimport { PROCESSING } from './config/constants';\n\ninterface Size {\n    width: number;\n    height: number;\n}\n\ninterface RefObject<T> {\n    current: T | null;\n}\n\nfunction getWindow(): Size {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return { width, height };\n}\n\nfunction getContainer(container: RefObject<HTMLElement> | null): Size {\n    if (!container || !container.current) return getWindow();\n\n    const { offsetHeight: height, offsetWidth: width } = container.current;\n\n    return { width, height };\n}\n\nfunction useSize(getSize: () => Size) {\n    const [size, setSize] = useState<Size>(getSize());\n\n    const { addEventListener: addEvent, removeEventListener: removeEvent } =\n        window;\n\n    useEffect(() => {\n        function handleResize() {\n            setSize(getSize());\n        }\n\n        addEvent('resize', handleResize);\n\n        return () => removeEvent('resize', handleResize);\n    }, [getSize, addEvent, removeEvent]);\n\n    return { size, setSize };\n}\n\nexport function useContainer(container: RefObject<HTMLElement> | null): Size {\n    const initialSize = getContainer(container);\n    const [size, setSize] = useState<Size>(initialSize);\n    const prevSizeRef = useRef<Size>(initialSize);\n\n    useEffect(() => {\n        const newSize = getContainer(container);\n        // Only update if values actually changed\n        if (\n            newSize.width !== prevSizeRef.current.width ||\n            newSize.height !== prevSizeRef.current.height\n        ) {\n            prevSizeRef.current = newSize;\n            setSize(newSize);\n        }\n    }, [container]);\n\n    useEffect(() => {\n        function handleResize() {\n            const newSize = getContainer(container);\n            setSize(prevSize => {\n                // Only update if values actually changed\n                if (\n                    newSize.width !== prevSize.width ||\n                    newSize.height !== prevSize.height\n                ) {\n                    return newSize;\n                }\n                return prevSize;\n            });\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [container]);\n\n    return size;\n}\n\nexport function useWindow(): Size {\n    const { size } = useSize(getWindow);\n\n    return size;\n}\n\nexport function useMobile(size: string): boolean {\n    return useMediaQuery((theme: unknown) => {\n        const muiTheme = theme as {\n            breakpoints: { down: (size: string) => string };\n        };\n        return muiTheme.breakpoints.down(size);\n    });\n}\n\n// Global timer reference to handle React StrictMode multiple instances\nlet globalTimer: NodeJS.Timeout | null = null;\nlet globalRepeat: (() => void) | null = null;\nlet globalSpeed = 200;\n\ninterface TimerConfig {\n    repeat?: (() => void) | null;\n    speed?: number;\n}\n\nexport function useTimer(delay: number) {\n    const repeat = useRef<(() => void) | null>(null);\n    const speed = useRef<number>(delay);\n\n    const create = useCallback(\n        ({ repeat: newRepeat, speed: newSpeed }: TimerConfig) => {\n            // Clear any existing timer first\n            if (globalTimer !== null) {\n                clearInterval(globalTimer);\n            }\n\n            globalRepeat = newRepeat || globalRepeat;\n            globalSpeed = newSpeed || globalSpeed;\n            repeat.current = globalRepeat;\n            speed.current = globalSpeed;\n\n            // Only create timer if we have a valid repeat function\n            if (globalRepeat) {\n                globalTimer = setInterval(globalRepeat, globalSpeed);\n            }\n        },\n        []\n    );\n\n    const clear = useCallback(() => {\n        if (globalTimer !== null) {\n            clearInterval(globalTimer);\n            globalTimer = null;\n        }\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (globalTimer !== null) {\n                clearInterval(globalTimer);\n                globalTimer = null;\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\nexport function useKeys() {\n    const oldHandler = useRef<((event: KeyboardEvent) => void) | null>(null);\n\n    const create = useCallback((handler: (event: KeyboardEvent) => void) => {\n        oldHandler.current = handler;\n\n        document.addEventListener('keydown', handler);\n    }, []);\n\n    const clear = useCallback((handler?: (event: KeyboardEvent) => void) => {\n        const targetHandler = handler || oldHandler.current;\n\n        if (targetHandler) {\n            document.removeEventListener('keydown', targetHandler);\n        }\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            if (oldHandler.current) {\n                document.removeEventListener('keydown', oldHandler.current);\n            }\n        };\n    }, []);\n\n    return { create, clear };\n}\n\ninterface CacheAction {\n    type: 'next' | 'prev' | 'clear';\n    payload: unknown;\n}\n\nexport function useCache(getState: (state: unknown) => unknown) {\n    const cache = useRef<unknown[]>([]);\n    const index = useRef<number>(0);\n    const processingRef = useRef<boolean>(false);\n    const getStateRef = useRef(getState);\n\n    // Update the ref whenever getState changes\n    useEffect(() => {\n        getStateRef.current = getState;\n    }, [getState]);\n\n    return useCallback(({ type, payload }: CacheAction): unknown => {\n        const states = cache.current;\n\n        switch (type) {\n            case 'next':\n                // Prevent double processing in React StrictMode\n                if (\n                    PROCESSING.doubleProcessingPrevention &&\n                    processingRef.current\n                ) {\n                    return { ...(states[index.current] as object) };\n                }\n\n                if (PROCESSING.doubleProcessingPrevention) {\n                    processingRef.current = true;\n                }\n\n                const curr = index.current;\n\n                if (curr + 1 === states.length) {\n                    const state = states[curr];\n                    const next = getStateRef.current(state);\n\n                    if (next === state) {\n                        // No change, stay at current position\n                    } else {\n                        // Add new state and move to it\n                        states.push(next);\n                        index.current++;\n                    }\n                } else {\n                    index.current++;\n                }\n\n                const result = { ...(states[index.current] as object) };\n\n                // Reset processing flag after a short delay\n                if (PROCESSING.doubleProcessingPrevention) {\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, PROCESSING.resetDelay);\n                }\n\n                return result;\n            case 'prev':\n                // Prevent double processing in React StrictMode\n                if (\n                    PROCESSING.doubleProcessingPrevention &&\n                    processingRef.current\n                ) {\n                    return { ...(states[index.current] as object) };\n                }\n\n                if (PROCESSING.doubleProcessingPrevention) {\n                    processingRef.current = true;\n                }\n\n                if (index.current) index.current--;\n\n                const prevResult = { ...(states[index.current] as object) };\n\n                // Reset processing flag after a short delay\n                if (PROCESSING.doubleProcessingPrevention) {\n                    setTimeout(() => {\n                        processingRef.current = false;\n                    }, PROCESSING.resetDelay);\n                }\n\n                return prevResult;\n            case 'clear':\n                cache.current = [{ ...(payload as object) }];\n                index.current = 0;\n\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }, []);\n}\n","import React from 'react';\nimport { Container, Box } from '../components/mui';\nimport { SPACING, COMPONENT_VARIANTS, COLORS } from '../config/theme';\n\ninterface SectionProps {\n    children: React.ReactNode;\n    id?: string;\n    paddingY?: string;\n    paddingX?: string;\n    maxWidth?: string;\n    sx?: Record<string, unknown>;\n    [key: string]: unknown;\n}\n\ninterface BackgroundBoxProps {\n    children: React.ReactNode;\n    sx?: Record<string, unknown>;\n    [key: string]: unknown;\n}\n\ninterface HeroContainerProps {\n    children: React.ReactNode;\n    paddingBottom?: string;\n    maxWidth?: string;\n    sx?: Record<string, unknown>;\n    [key: string]: unknown;\n}\n\ninterface PageLayoutProps {\n    children: React.ReactNode;\n    sx?: Record<string, unknown>;\n    [key: string]: unknown;\n}\n\n/**\n * Section component provides consistent section layout with proper spacing\n * and responsive padding for improved maintainability.\n */\nexport function Section({\n    children,\n    id,\n    paddingY = SPACING.padding.lg,\n    paddingX = SPACING.padding.lg,\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}: SectionProps) {\n    return (\n        <Container\n            maxWidth={false}\n            id={id}\n            sx={{\n                paddingY,\n                paddingX,\n                ...(props.sx as Record<string, unknown>),\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * BackgroundBox component provides consistent background positioning\n * for page background elements.\n */\nexport function BackgroundBox({ children, ...props }: BackgroundBoxProps) {\n    return (\n        <Box\n            sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                background: COLORS.surface.background,\n                zIndex: -1,\n                ...(props.sx as Record<string, unknown>),\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n\n/**\n * HeroContainer component provides consistent hero section layout\n * with centered content and responsive padding.\n */\nexport function HeroContainer({\n    children,\n    paddingBottom = '4rem',\n    maxWidth = SPACING.maxWidth.lg,\n    ...props\n}: HeroContainerProps) {\n    return (\n        <Container\n            maxWidth={false}\n            sx={{\n                flex: 1,\n                ...COMPONENT_VARIANTS.flexCenter,\n                paddingTop: 0,\n                paddingBottom,\n                paddingX: {\n                    xs: SPACING.padding.sm,\n                    md: SPACING.padding.lg,\n                },\n                maxWidth: '100%',\n                overflowX: 'hidden',\n                ...(props.sx as Record<string, unknown>),\n            }}\n            {...props}\n        >\n            <Box sx={{ maxWidth, margin: '0 auto' }}>{children}</Box>\n        </Container>\n    );\n}\n\n/**\n * PageLayout component provides consistent page layout with background,\n * full height, and proper positioning for improved maintainability.\n */\nexport function PageLayout({ children, ...props }: PageLayoutProps) {\n    return (\n        <Box\n            sx={{\n                minHeight: '100vh',\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n                ...(props.sx as Record<string, unknown>),\n            }}\n            {...props}\n        >\n            {children}\n        </Box>\n    );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Grid,\n    Typography,\n    Box,\n    Menu,\n    MenuItem,\n    Fade,\n    Button,\n} from '../components/mui';\n\nimport { TooltipButton, GlassCard, ICON_MAP } from '../helpers';\nimport { Section, HeroContainer } from '../components/Layout';\nimport {\n    PERSONAL_INFO,\n    URLS,\n    SKILLS,\n    PUBLICATIONS,\n    PROJECTS,\n    PAGE_TITLES,\n} from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    ANIMATIONS,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nimport {\n    GitHub,\n    Work,\n    LocationOn,\n    OpenInNew,\n    ArrowForward,\n    Code,\n    Psychology,\n    GamepadRounded,\n    ViewModuleRounded,\n} from '../components/icons';\n\ninterface ProjectInfo {\n    path: string;\n    description: string;\n    technology: string;\n}\n\ninterface ProjectCategory {\n    title: string;\n    icon: React.ElementType;\n    color: string;\n    projects: Record<string, ProjectInfo>;\n}\n\nconst PROJECT_CATEGORIES: Record<string, ProjectCategory> = {\n    research: {\n        title: 'Research',\n        icon: Psychology,\n        color: COLORS.data.green,\n        projects: {\n            ZSharp: {\n                path: '/ZSharp',\n                description: 'ML optimization method',\n                technology: 'PyTorch',\n            },\n            Oligopoly: {\n                path: '/Oligopoly',\n                description: 'Market simulation model',\n                technology: 'FastAPI',\n            },\n        },\n    },\n    games: {\n        title: 'Games',\n        icon: GamepadRounded,\n        color: COLORS.primary.main,\n        projects: {\n            Snake: {\n                path: '/Snake',\n                description: 'Retro arcade gameplay',\n                technology: 'JavaScript',\n            },\n            Lights_Out: {\n                path: '/Lights_Out',\n                description: 'Grid-based logic puzzle',\n                technology: 'JavaScript',\n            },\n        },\n    },\n    tools: {\n        title: 'Tools',\n        icon: Code,\n        color: COLORS.data.amber,\n        projects: {\n            Interpreters: {\n                path: '/Interpreters',\n                description: 'Esoteric language demos',\n                technology: 'JavaScript',\n            },\n        },\n    },\n};\n\nfunction ProjectDropdown(): React.ReactElement {\n    return (\n        <Box sx={{ padding: '16px 16px 0 16px' }}>\n            {Object.entries(PROJECT_CATEGORIES).map(\n                ([categoryKey, category]) => {\n                    const IconComponent = category.icon;\n                    return (\n                        <Box key={categoryKey} sx={{ marginBottom: 2 }}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: 1,\n                                    padding: '8px 0 4px 0',\n                                    marginBottom: 0.5,\n                                    position: 'relative',\n                                    '&::after': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        bottom: 0,\n                                        left: 0,\n                                        right: 0,\n                                        height: '1px',\n                                        backgroundColor:\n                                            'rgba(255, 255, 255, 0.05)',\n                                    },\n                                }}\n                            >\n                                <IconComponent\n                                    sx={{\n                                        color: '#4C78FF',\n                                        fontSize: '14px',\n                                        opacity: 0.7,\n                                    }}\n                                />\n                                <Typography\n                                    sx={{\n                                        color: 'rgba(157, 163, 174, 0.7)',\n                                        fontSize: '10px',\n                                        fontWeight: 500,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.14em',\n                                        fontFamily:\n                                            'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\n                                    }}\n                                >\n                                    {category.title}\n                                </Typography>\n                            </Box>\n\n                            {Object.entries(category.projects).map(\n                                ([projectName, project]) => (\n                                    <MenuItem\n                                        key={projectName}\n                                        component={Link}\n                                        to={project.path}\n                                        sx={{\n                                            padding: '10px 12px',\n                                            borderRadius: '8px',\n                                            margin: '0',\n                                            minHeight: '40px',\n                                            transition: 'all 120ms ease',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            alignItems: 'flex-start',\n                                            gap: '6px',\n                                            '&:hover': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.06)',\n                                                transform: 'translateY(-1px)',\n                                            },\n                                            '&:active': {\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.08)',\n                                            },\n                                            '&:focus-visible': {\n                                                outline: 'none',\n                                                ring: '1px solid rgba(255, 255, 255, 0.2)',\n                                                ringOffset: '0',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                fontWeight: 600,\n                                                fontSize: '15px',\n                                                lineHeight: 1.6,\n                                                color: '#EDEDED',\n                                            }}\n                                        >\n                                            {projectName.replace('_', ' ')}\n                                        </Typography>\n                                        <Typography\n                                            sx={{\n                                                color: 'rgba(157, 163, 174, 0.8)',\n                                                fontSize: '12px',\n                                                lineHeight: 1.4,\n                                            }}\n                                        >\n                                            {project.description}\n                                        </Typography>\n                                    </MenuItem>\n                                )\n                            )}\n                        </Box>\n                    );\n                }\n            )}\n        </Box>\n    );\n}\n\nfunction clickHandler(setAnchor: (anchor: HTMLElement | null) => void) {\n    return (event: React.MouseEvent<HTMLElement>) => {\n        setAnchor(event.currentTarget);\n    };\n}\n\nfunction closeHandler(setAnchor: (anchor: null) => void) {\n    return () => {\n        setAnchor(null);\n    };\n}\n\nfunction MenuButton(): React.ReactElement {\n    const [anchor, setAnchor] = useState<HTMLElement | null>(null);\n    const handleClick = clickHandler(setAnchor);\n    const handleClose = closeHandler(setAnchor);\n    const open = Boolean(anchor);\n\n    const define = (value: string | undefined) => {\n        return open ? value : undefined;\n    };\n\n    return (\n        <Box>\n            <TooltipButton\n                title=\"Projects Menu\"\n                id=\"projects-menu-button\"\n                Icon={ViewModuleRounded}\n                aria-controls={define('projects-menu')}\n                aria-expanded={define('true')}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                    '&:hover': {\n                        backgroundColor: COLORS.interactive.hover,\n                        transform: 'scale(1.05)',\n                    },\n                }}\n            />\n            <Menu\n                id=\"projects-menu\"\n                open={open}\n                anchorEl={anchor}\n                disableAutoFocusItem={true}\n                BackdropProps={{\n                    sx: {\n                        backgroundColor: 'transparent',\n                        backdropFilter: 'none',\n                    },\n                }}\n                sx={{\n                    marginLeft: 1,\n                    marginTop: 1,\n                    '& .MuiPaper-root': {\n                        width: 'auto',\n                        maxWidth: '300px',\n                        height: 'auto !important',\n                        backgroundColor: 'rgba(11, 11, 12, 0.95)',\n                        backdropFilter: 'blur(8px)',\n                        border: '1px solid rgba(255, 255, 255, 0.1)',\n                        borderRadius: '16px',\n                        padding: 0,\n                        boxShadow: '0 8px 30px rgba(0, 0, 0, 0.35)',\n                        transition: 'all 140ms cubic-bezier(0.2, 0.8, 0.2, 1)',\n                        transform: open\n                            ? 'translateY(0) scale(1)'\n                            : 'translateY(8px) scale(0.98)',\n                        opacity: open ? 1 : 0,\n                    },\n                }}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'projects-menu-button',\n                    sx: {\n                        padding: 0,\n                        height: 'auto',\n                    },\n                }}\n                transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n            >\n                <ProjectDropdown />\n            </Menu>\n        </Box>\n    );\n}\n\nexport default function Home(): React.ReactElement {\n    useEffect(() => {\n        document.title = PAGE_TITLES.home;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                background: COLORS.surface.background,\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            <Box\n                sx={{\n                    position: 'relative',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    padding: { xs: '0.5rem', md: '1.5rem' },\n                    zIndex: 1000,\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    maxWidth: '100%',\n                    overflowX: 'hidden',\n                }}\n            >\n                <MenuButton />\n                <TooltipButton\n                    component=\"a\"\n                    href={URLS.githubProfile}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title=\"GitHub Profile\"\n                    Icon={GitHub}\n                />\n            </Box>\n\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n\n            <HeroContainer>\n                <Grid container spacing={{ xs: 4, md: 8 }} alignItems=\"center\">\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={800}>\n                            <Box>\n                                <Typography\n                                    sx={{\n                                        color: COLORS.primary.main,\n                                        fontSize: TYPOGRAPHY.fontSize.body,\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        textTransform: 'uppercase',\n                                        letterSpacing: '0.025em',\n                                        marginBottom: 3,\n                                    }}\n                                >\n                                    Hello, I&apos;m\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.primary,\n                                        fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                        fontSize: {\n                                            xs: 'clamp(2rem, 8vw, 2.5rem)',\n                                            md: 'clamp(3rem, 6vw, 5rem)',\n                                        },\n                                        lineHeight: 1.4,\n                                        letterSpacing: '0',\n                                        marginBottom: 2,\n                                        wordBreak: 'keep-all',\n                                        hyphens: 'none',\n                                    }}\n                                >\n                                    {PERSONAL_INFO.name}\n                                </Typography>\n\n                                <Typography\n                                    sx={{\n                                        color: COLORS.text.secondary,\n                                        fontSize: {\n                                            xs: 'clamp(0.875rem, 4vw, 1.125rem)',\n                                            md: 'clamp(1.125rem, 2.5vw, 1.5rem)',\n                                        },\n                                        fontWeight:\n                                            TYPOGRAPHY.fontWeight.semibold,\n                                        marginBottom: 4,\n                                        lineHeight: 1.4,\n                                        wordBreak: 'keep-all',\n                                        hyphens: 'none',\n                                    }}\n                                >\n                                    {PERSONAL_INFO.title}\n                                </Typography>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 2,\n                                        marginBottom: 4,\n                                    }}\n                                >\n                                    <LocationOn\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                        }}\n                                    >\n                                        {PERSONAL_INFO.location}\n                                    </Typography>\n                                </Box>\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        gap: 2,\n                                        flexWrap: 'wrap',\n                                    }}\n                                >\n                                    <Box\n                                        onClick={() => {\n                                            const element =\n                                                document.getElementById(\n                                                    'featured-work'\n                                                );\n                                            if (element) {\n                                                element.scrollIntoView({\n                                                    behavior: 'smooth',\n                                                    block: 'start',\n                                                    inline: 'nearest',\n                                                });\n                                            }\n                                        }}\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            gap: 1,\n                                            padding: '12px 20px',\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                            borderRadius:\n                                                SPACING.borderRadius.full,\n                                            transition: ANIMATIONS.transition,\n                                            cursor: 'pointer',\n                                            '&:hover': {\n                                                backgroundColor:\n                                                    'hsla(217, 91%, 60%, 0.15)',\n                                                transform:\n                                                    'scale(1.02) translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 20px hsla(0, 0%, 0%, 0.25)',\n                                            },\n                                        }}\n                                    >\n                                        <Typography\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.body,\n                                            }}\n                                        >\n                                            View Work\n                                        </Typography>\n                                        <ArrowForward\n                                            sx={{\n                                                color: COLORS.primary.main,\n                                                fontSize: '1rem',\n                                            }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Fade>\n                    </Grid>\n\n                    <Grid size={{ xs: 12, md: 6 }}>\n                        <Fade in timeout={1000}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    gap: 4,\n                                }}\n                            >\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Tech Stack\n                                    </Typography>\n\n                                    <Box\n                                        sx={{\n                                            display: 'grid',\n                                            gridTemplateColumns: {\n                                                xs: '1fr',\n                                                md: 'repeat(3, 1fr)',\n                                            },\n                                            gap: {\n                                                xs: 1.5,\n                                                md: 2,\n                                            },\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        {SKILLS.map((skill, index) => {\n                                            const IconComponent =\n                                                ICON_MAP[skill.icon] || Work;\n\n                                            return (\n                                                <Fade\n                                                    in\n                                                    timeout={1200 + index * 150}\n                                                    key={skill.name}\n                                                >\n                                                    <Box\n                                                        sx={{\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .selected,\n                                                            border: `1px solid hsla(217, 91%, 60%, 0.2)`,\n                                                            borderRadius:\n                                                                SPACING\n                                                                    .borderRadius\n                                                                    .md,\n                                                            padding: {\n                                                                xs: '12px',\n                                                                md: '16px',\n                                                            },\n                                                            display: 'flex',\n                                                            alignItems:\n                                                                'center',\n                                                            gap: {\n                                                                xs: 1,\n                                                                md: 1.5,\n                                                            },\n                                                            transition:\n                                                                ANIMATIONS.transition,\n                                                            cursor: 'pointer',\n                                                            minWidth: 0,\n                                                            overflow: 'hidden',\n                                                            '&:hover': {\n                                                                backgroundColor:\n                                                                    COLORS\n                                                                        .interactive\n                                                                        .hover,\n                                                                transform:\n                                                                    'translateY(-2px) scale(1.01)',\n                                                            },\n                                                        }}\n                                                    >\n                                                        <IconComponent\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                            }}\n                                                        />\n                                                        <Typography\n                                                            sx={{\n                                                                color: COLORS\n                                                                    .primary\n                                                                    .main,\n                                                                fontSize:\n                                                                    TYPOGRAPHY\n                                                                        .fontSize\n                                                                        .body,\n                                                                fontWeight:\n                                                                    TYPOGRAPHY\n                                                                        .fontWeight\n                                                                        .medium,\n                                                                whiteSpace:\n                                                                    'nowrap',\n                                                                overflow:\n                                                                    'hidden',\n                                                                textOverflow:\n                                                                    'ellipsis',\n                                                                flexShrink: 1,\n                                                            }}\n                                                        >\n                                                            {skill.name}\n                                                        </Typography>\n                                                    </Box>\n                                                </Fade>\n                                            );\n                                        })}\n                                    </Box>\n                                </GlassCard>\n\n                                <GlassCard>\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.primary.main,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            marginBottom: 3,\n                                        }}\n                                    >\n                                        Let&apos;s Connect\n                                    </Typography>\n\n                                    <Typography\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            fontSize: TYPOGRAPHY.fontSize.body,\n                                            lineHeight: 1.5,\n                                            marginBottom: 4,\n                                        }}\n                                    >\n                                        Open to opportunities in backend\n                                        development, ML engineering, and\n                                        research collaboration.\n                                    </Typography>\n\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            gap: 2,\n                                        }}\n                                    >\n                                        <Button\n                                            component=\"a\"\n                                            href={URLS.githubProfile}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            variant=\"outlined\"\n                                            startIcon={<GitHub />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                            }}\n                                        >\n                                            View GitHub\n                                        </Button>\n\n                                        <Button\n                                            component=\"a\"\n                                            href=\"mailto:bangyenp@gmail.com?subject=Project%20Collaboration\"\n                                            variant=\"text\"\n                                            endIcon={<ArrowForward />}\n                                            sx={{\n                                                textDecoration: 'none',\n                                                color: COLORS.text.secondary,\n                                                '&:hover': {\n                                                    color: COLORS.text.primary,\n                                                    backgroundColor:\n                                                        COLORS.interactive\n                                                            .hover,\n                                                },\n                                            }}\n                                        >\n                                            Available for Projects\n                                        </Button>\n                                    </Box>\n                                </GlassCard>\n                            </Box>\n                        </Fade>\n                    </Grid>\n                </Grid>\n            </HeroContainer>\n\n            <Section id=\"featured-work\">\n                <Fade in timeout={1400}>\n                    <Box>\n                        <Typography\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontSize: TYPOGRAPHY.fontSize.h2,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                textAlign: 'center',\n                                marginBottom: 6,\n                            }}\n                        >\n                            Featured Work\n                        </Typography>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridTemplateColumns: {\n                                    xs: '1fr',\n                                    md: 'repeat(2, 1fr)',\n                                },\n                                gap: 4,\n                            }}\n                        >\n                            {PUBLICATIONS.map((publication, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + index * 200}\n                                    key={publication.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={publication.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard\n                                            sx={{\n                                                border: 'none',\n                                                height: '100%',\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Research\n                                                </Typography>\n                                                <OpenInNew\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {publication.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(141, 64%, 49%, 0.1)',\n                                                        color: 'hsl(141, 64%, 49%)',\n                                                        border: '1px solid hsla(141, 64%, 49%, 0.2)',\n                                                    }}\n                                                >\n                                                    {publication.conference}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {publication.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n\n                            {PROJECTS.map((project, index) => (\n                                <Fade\n                                    in\n                                    timeout={1600 + (index + 2) * 200}\n                                    key={project.title}\n                                >\n                                    <Box\n                                        component=\"a\"\n                                        href={project.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        sx={{\n                                            textDecoration: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            ...COMPONENT_VARIANTS.interactiveCard,\n                                            '&:hover .glass-card': {\n                                                backgroundColor:\n                                                    COLORS.interactive.selected,\n                                            },\n                                        }}\n                                    >\n                                        <GlassCard\n                                            sx={{\n                                                border: 'none',\n                                                height: '100%',\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent:\n                                                        'space-between',\n                                                    marginBottom: 3,\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize:\n                                                            TYPOGRAPHY.fontSize\n                                                                .caption,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        textTransform:\n                                                            'uppercase',\n                                                        letterSpacing:\n                                                            '0.025em',\n                                                    }}\n                                                >\n                                                    Project\n                                                </Typography>\n                                                <GitHub\n                                                    sx={{\n                                                        color: COLORS.primary\n                                                            .main,\n                                                    }}\n                                                />\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .subheading,\n                                                    lineHeight: 1.4,\n                                                    marginBottom: 2,\n                                                }}\n                                            >\n                                                {project.title}\n                                            </Typography>\n\n                                            <Box sx={{ marginBottom: 3 }}>\n                                                <Box\n                                                    sx={{\n                                                        borderRadius:\n                                                            SPACING.borderRadius\n                                                                .full,\n                                                        fontSize:\n                                                            'clamp(0.7rem, 0.8vw, 0.75rem)',\n                                                        fontWeight: 500,\n                                                        padding: '4px 12px',\n                                                        minHeight:\n                                                            SPACING.padding.sm,\n                                                        display: 'inline-flex',\n                                                        alignItems: 'center',\n                                                        transition:\n                                                            'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                                        backgroundColor:\n                                                            'hsla(217, 91%, 60%, 0.1)',\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        border: '1px solid hsla(217, 91%, 60%, 0.2)',\n                                                    }}\n                                                >\n                                                    {project.technology}\n                                                </Box>\n                                            </Box>\n\n                                            <Typography\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    lineHeight: 1.5,\n                                                    flex: 1,\n                                                }}\n                                            >\n                                                {project.description}\n                                            </Typography>\n                                        </GlassCard>\n                                    </Box>\n                                </Fade>\n                            ))}\n                        </Box>\n                    </Box>\n                </Fade>\n            </Section>\n\n            <Box\n                sx={{\n                    height: { xs: '2rem', md: '5rem' },\n                }}\n            />\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { Grid, Typography, Box, Fade } from '../components/mui';\nimport { HomeButton } from '../helpers';\nimport { PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\n\nexport default function Error(): React.ReactElement {\n    document.title = PAGE_TITLES.error;\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '0.5rem', md: '1.5rem' },\n                boxSizing: 'border-box',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Fade in timeout={1000}>\n                    <Box\n                        sx={{\n                            textAlign: 'center',\n                            maxWidth: '24rem',\n                            width: '100%',\n                            padding: {\n                                xs: '0 1rem',\n                                md: '0 2rem',\n                            },\n                            boxSizing: 'border-box',\n                        }}\n                    >\n                        <Typography\n                            variant=\"h1\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                marginBottom: 2,\n                                fontSize: TYPOGRAPHY.fontSize.display,\n                            }}\n                        >\n                            404\n                        </Typography>\n\n                        <Typography\n                            variant=\"h3\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                fontWeight: TYPOGRAPHY.fontWeight.medium,\n                                marginBottom: 4,\n                                fontSize: TYPOGRAPHY.fontSize.h2,\n                            }}\n                        >\n                            Page Not Found\n                        </Typography>\n\n                        <Typography\n                            sx={{\n                                color: COLORS.text.secondary,\n                                fontSize: TYPOGRAPHY.fontSize.body,\n                                lineHeight: 1.5,\n                                marginBottom: 4,\n                            }}\n                        >\n                            The page you&apos;re looking for doesn&apos;t exist\n                            or has been moved.\n                        </Typography>\n                    </Box>\n                </Fade>\n            </Grid>\n\n            {/* Navigation */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: { xs: '0.5rem', md: '1.5rem' },\n                    left: { xs: '0.5rem', md: '1.5rem' },\n                }}\n            >\n                <HomeButton />\n            </Box>\n        </Grid>\n    );\n}\n\n","import React, {\n    useMemo,\n    useCallback,\n    useReducer,\n    useEffect,\n    useState,\n    useRef,\n} from 'react';\nimport { Grid } from '../components/mui';\n\nimport { convertPixels, gridMove, getDirection } from '../calculate';\nimport { useWindow, useTimer, useKeys } from '../hooks';\nimport { CustomGrid, Controls, ArrowsButton } from '../helpers';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS, COMPONENT_VARIANTS } from '../config/theme';\n\ninterface Board {\n    [key: number]: number;\n}\n\ninterface SnakeState {\n    velocity: number;\n    buffer: number[];\n    length: number;\n    rows: number;\n    cols: number;\n    head: number;\n    board: Board;\n}\n\ninterface Action {\n    type: string;\n    payload?: any;\n}\n\nfunction getRandom(max: number): number {\n    return Math.floor(Math.random() * max);\n}\n\nfunction addNext(max: number, exclude: Board): Board {\n    let pos = getRandom(max);\n\n    while (pos in exclude) if (++pos >= max) pos = 0;\n\n    return {\n        ...exclude,\n        [pos]: -1,\n    };\n}\n\nfunction mapBoard(board: Board, change: number): Board {\n    const newBoard: Board = {};\n\n    for (const cell in board) {\n        const value = board[cell];\n\n        if (value + change > 0) newBoard[cell] = value + change;\n        else if (value < 0) newBoard[cell] = value;\n    }\n\n    return newBoard;\n}\n\nfunction handleResize(state: SnakeState, rows: number, cols: number): SnakeState {\n    const max = rows * cols;\n    const head = getRandom(max);\n    let next = getRandom(max);\n\n    if (head === next) next = ++next % max;\n\n    return {\n        ...state,\n        rows,\n        cols,\n        head,\n        board: {\n            [head]: state.length,\n            [next]: -1,\n        },\n    };\n}\n\nfunction reduceBoard(state: SnakeState): SnakeState {\n    let { board, length, head, velocity, buffer } = state;\n    const { rows, cols } = state;\n\n    const max = rows * cols;\n\n    board = mapBoard(board, -1);\n    head = gridMove(head, velocity, rows, cols);\n\n    if (head in board) {\n        const value = board[head];\n        board[head] = length;\n\n        if (value > 0) {\n            board = mapBoard(board, -value);\n        } else {\n            board = mapBoard(board, 1);\n            board = addNext(max, board);\n        }\n\n        length = board[head];\n    } else {\n        board[head] = length;\n    }\n\n    if (buffer.length) {\n        const [first, ...rest] = buffer;\n        buffer = rest;\n\n        if (velocity + first) velocity = first;\n    }\n\n    return {\n        ...state,\n        length,\n        board,\n        head,\n        velocity,\n        buffer,\n    };\n}\n\nfunction handleAction(state: SnakeState, action: Action): SnakeState {\n    const { type, payload } = action;\n\n    switch (type) {\n        case 'resize':\n            const { rows, cols } = payload;\n            return handleResize(state, rows, cols);\n        case 'steer':\n            const velocity = getDirection(payload.key);\n            let { buffer } = state;\n\n            if (velocity) buffer = [...buffer, velocity];\n\n            return {\n                ...state,\n                buffer,\n            };\n        case 'move':\n            return reduceBoard(state);\n        default:\n            return state;\n    }\n}\n\nexport default function Snake(): React.ReactElement {\n    const { create: createTimer } = useTimer(0);\n    const { create: createKeys } = useKeys();\n\n    const { height, width } = useWindow();\n    const length = GAME_CONSTANTS.snake.initialLength;\n    const size = GAME_CONSTANTS.snake.segmentSize;\n\n    const [randomMovesEnabled, setRandomMovesEnabled] = useState(false);\n    const randomMovesRef = useRef(false);\n\n    const [showArrows, setShowArrows] = useState(false);\n\n    const { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    const initial = useMemo(\n        () => ({\n            velocity: GAME_CONSTANTS.snake.initialVelocity,\n            buffer: [],\n            length,\n            rows: 0,\n            cols: 0,\n            head: 0,\n            board: {},\n        }),\n        [length]\n    );\n\n    const [state, dispatch] = useReducer(\n        handleAction,\n        handleResize(initial, rows, cols)\n    );\n\n    const controlHandler = useCallback(\n        (event: string) => () => {\n            const key = GAME_CONSTANTS.controls.arrowPrefix + event;\n\n            dispatch({\n                type: 'steer',\n                payload: { key },\n            });\n        },\n        []\n    );\n\n    const chooseColor = useCallback(\n        (row: number, col: number) => {\n            const index = row * cols + col;\n            const board = state.board;\n            let color = 'inherit';\n\n            if (index in board) {\n                if (board[index] > 0)\n                    color = COLORS.primary.main;\n                else color = COLORS.primary.dark;\n            }\n\n            return {\n                backgroundColor: color,\n                boxShadow:\n                    color !== 'inherit' ? `0 0 1.25rem ${color}40` : 'none',\n                border:\n                    color !== 'inherit' ? `0.0625rem solid ${color}` : 'none',\n            };\n        },\n        [state, cols]\n    );\n\n    useEffect(() => {\n        const wrapDispatch = () => {\n            const directions = 'wasd';\n            const index = getRandom(4);\n            const key = directions[index];\n\n            dispatch({\n                type: 'move',\n            });\n\n            if (getRandom(2) && randomMovesRef.current) {\n                dispatch({\n                    type: 'steer',\n                    payload: { key },\n                });\n            }\n        };\n\n        const wrapDirection = (event: any) =>\n            dispatch({\n                type: 'steer',\n                payload: event,\n            });\n\n        createTimer({ repeat: wrapDispatch, speed: 100 });\n        createKeys(wrapDirection);\n    }, [createTimer, createKeys]);\n\n    useEffect(() => {\n        randomMovesRef.current = randomMovesEnabled;\n    }, [randomMovesEnabled]);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            payload: { rows, cols },\n        });\n    }, [rows, cols]);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.snake;\n    }, []);\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            position=\"relative\"\n            sx={{\n                background: COLORS.surface.background,\n                overflow: 'hidden',\n            }}\n        >\n            <Grid\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    zIndex: 1,\n                }}\n            >\n                <CustomGrid\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={chooseColor}\n                />\n            </Grid>\n            <Controls\n                handler={controlHandler}\n                onRandom={() => setRandomMovesEnabled(!randomMovesEnabled)}\n                randomEnabled={randomMovesEnabled}\n                hide={showArrows}\n                size=\"inherit\"\n            >\n                <ArrowsButton\n                    show={showArrows}\n                    setShow={setShowArrows}\n                    handler={controlHandler}\n                />\n            </Controls>\n        </Grid>\n    );\n}\n\n","import React from 'react';\nimport { Grid } from '../components/mui';\n\nimport { useMemo, useCallback } from 'react';\nimport { CustomGrid } from '../helpers';\nimport { COLORS } from '../config/theme';\n\ninterface BoardProps {\n    frontProps: (row: number, col: number) => Record<string, unknown>;\n    backProps: (row: number, col: number) => Record<string, unknown>;\n    size: number;\n    rows: number;\n    cols: number;\n}\n\ninterface CenteredProps {\n    children: React.ReactNode;\n}\n\ninterface Palette {\n    primary: string;\n    secondary: string;\n}\n\ninterface Getters {\n    getColor: (row: number, col: number) => { front: string; back: string };\n    getBorder: (row: number, col: number) => Record<string, unknown>;\n    getFiller: (row: number, col: number) => string;\n}\n\ninterface GridState {\n    grid: number[][];\n    rows: number;\n    cols: number;\n}\n\nexport function Board(props: BoardProps): React.ReactElement {\n    const { frontProps, backProps, size, rows, cols } = props;\n\n    return (\n        <Centered>\n            <CustomGrid\n                space={0}\n                size={size}\n                rows={rows - 1}\n                cols={cols - 1}\n                cellProps={backProps}\n            />\n            <Centered>\n                <CustomGrid\n                    space={0}\n                    size={size}\n                    rows={rows}\n                    cols={cols}\n                    cellProps={frontProps}\n                />\n            </Centered>\n        </Centered>\n    );\n}\n\nfunction Centered({ children }: CenteredProps): React.ReactElement {\n    const style = {\n        transform: 'translate(-50%, -50%)',\n    };\n\n    return (\n        <Grid\n            sx={{\n                top: '50%',\n                left: '50%',\n                width: '100%',\n                position: 'absolute',\n                ...style,\n            }}\n        >\n            {children}\n        </Grid>\n    );\n}\n\nfunction borderHandler(\n    row: number,\n    col: number,\n    getColor: (row: number, col: number) => unknown\n): Record<string, unknown> {\n    const self = getColor(row, col);\n    const up = getColor(row - 1, col);\n    const down = getColor(row + 1, col);\n    const left = getColor(row, col - 1);\n    const right = getColor(row, col + 1);\n    const props: Record<string, unknown> = {};\n\n    const upCheck = self === up;\n    const downCheck = self === down;\n    const leftCheck = self === left;\n    const rightCheck = self === right;\n\n    if (upCheck || leftCheck) props.borderTopLeftRadius = 0;\n    if (upCheck || rightCheck) props.borderTopRightRadius = 0;\n    if (downCheck || leftCheck) props.borderBottomLeftRadius = 0;\n    if (downCheck || rightCheck) props.borderBottomRightRadius = 0;\n\n    return props;\n}\n\nfunction fillerHandler(\n    row: number,\n    col: number,\n    getColor: (row: number, col: number) => unknown\n): boolean {\n    const topLeft = getColor(row, col);\n    const topRight = getColor(row, col + 1);\n    const botLeft = getColor(row + 1, col);\n    const botRight = getColor(row + 1, col + 1);\n    let color = true;\n\n    const total = Number(topLeft) + Number(topRight) + Number(botLeft) + Number(botRight);\n\n    if ((!topLeft || !botRight) && total < 3) color = false;\n\n    return color;\n}\n\nexport function usePalette(score: number): Palette {\n    const palette = useMemo(() => {\n        const primary = COLORS.primary.main;\n        const secondary = COLORS.primary.dark;\n\n        return { primary, secondary };\n    }, []);\n\n    return palette;\n}\n\nexport function useGetters(\n    getTile: (row: number, col: number) => unknown,\n    palette: Palette\n): Getters {\n    const getColor = useCallback(\n        (row: number, col: number) => {\n            const value = getTile(row, col);\n\n            const front = value ? palette.primary : palette.secondary;\n            const back = value ? palette.secondary : palette.primary;\n\n            return { front, back };\n        },\n        [getTile, palette]\n    );\n\n    const getBorder = useCallback(\n        (row: number, col: number) => {\n            return borderHandler(row, col, getTile);\n        },\n        [getTile]\n    );\n\n    const getFiller = useCallback(\n        (row: number, col: number) => {\n            const value = fillerHandler(row, col, getTile);\n\n            return value ? palette.primary : palette.secondary;\n        },\n        [getTile, palette]\n    );\n\n    return {\n        getColor,\n        getBorder,\n        getFiller,\n    };\n}\n\nexport function useHandler(state: GridState, palette: Palette): Getters {\n    const { grid, rows, cols } = state;\n\n    const getTile = useCallback(\n        (row: number, col: number) => {\n            if (row < 0 || col < 0 || row >= rows || col >= cols) return -1;\n\n            return grid[row][col];\n        },\n        [grid, rows, cols]\n    );\n\n    return useGetters(getTile, palette);\n}\n","export function getGrid(rows: number, cols: number): number[][] {\n    return [...Array(rows)].map(() => Array(cols).fill(0));\n}\n\nexport function flipAdj(row: number, col: number, grid: number[][]): number[][] {\n    const cols = grid[0].length;\n    const rows = grid.length;\n\n    const newGrid = grid.map(row => [...row]);\n    newGrid[row][col] ^= 1;\n\n    if (row > 0) newGrid[row - 1][col] ^= 1;\n    if (row < rows - 1) newGrid[row + 1][col] ^= 1;\n\n    if (col > 0) newGrid[row][col - 1] ^= 1;\n    if (col < cols - 1) newGrid[row][col + 1] ^= 1;\n\n    return newGrid;\n}\n\nfunction randomize(rows: number, cols: number): number[][] {\n    let grid = getGrid(rows, cols);\n\n    for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n            const random = Math.random();\n\n            if (random > 0.5) grid = flipAdj(r, c, grid);\n        }\n    }\n\n    return grid;\n}\n\ninterface BoardState {\n    grid: number[][];\n    score: number;\n    rows: number;\n    cols: number;\n}\n\ninterface BoardAction {\n    type: string;\n    row?: number;\n    col?: number;\n    newRows?: number;\n    newCols?: number;\n}\n\nexport function handleBoard(state: BoardState, action: BoardAction): BoardState {\n    const { type, row, col } = action;\n\n    let { grid, score, rows, cols } = state;\n\n    switch (type) {\n        case 'adjacent':\n            if (row !== undefined && col !== undefined) {\n                grid = flipAdj(row, col, grid);\n\n                const flat = grid.flatMap(r => r);\n\n                const done = !flat.includes(1) || !flat.includes(0);\n\n                if (done) {\n                    grid = randomize(rows, cols);\n                    score += 1;\n                }\n            }\n            break;\n        case 'random':\n            grid = randomize(rows, cols);\n            break;\n        case 'randomize':\n            grid = randomize(rows, cols);\n            break;\n        case 'resize':\n            const { newRows, newCols } = action;\n            if (newRows !== undefined && newCols !== undefined) {\n                rows = newRows;\n                cols = newCols;\n                grid = randomize(rows, cols);\n            }\n            break;\n        case 'reset':\n            grid = getGrid(rows, cols);\n            score = 0;\n            break;\n        default:\n            break;\n    }\n\n    return { grid, score, rows, cols };\n}\n\n","function getMatrix(cols: number): number[] {\n    const first = 7 << (cols - 2);\n    const matrix = [first];\n\n    for (let k = 1; k < cols; k++) {\n        const prev = matrix[k - 1];\n        const next = prev >> 1;\n        matrix.push(next);\n    }\n\n    matrix[0] -= 2 ** cols;\n    return matrix;\n}\n\nfunction countBits(num: number): number {\n    let count = 0;\n\n    while (num) {\n        num &= num - 1;\n        count++;\n    }\n\n    return count;\n}\n\nfunction multiplySym(matrixA: number[], matrixB: number[]): number[] {\n    const size = matrixA.length;\n    const output: number[] = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        let outputRow = 0;\n\n        for (let c = 0; c < size; c++) {\n            const colB = matrixB[c];\n            const value = rowA & colB;\n            const count = countBits(value);\n\n            outputRow <<= 1;\n            outputRow += count & 1;\n        }\n\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getIdentity(size: number): number[] {\n    const output = Array(size).fill(1);\n\n    for (let r = 0; r < size; r++) output[r] <<= size - r - 1;\n\n    return output;\n}\n\nfunction symmetricPow(matrix: number[], power: number): number[] {\n    const size = matrix.length;\n    let output = getIdentity(size);\n\n    for (let k = 0; k < power; k++) output = multiplySym(output, matrix);\n\n    return output;\n}\n\nfunction addSym(matrixA: number[], matrixB: number[]): number[] {\n    const size = matrixA.length;\n    const output: number[] = [];\n\n    for (let r = 0; r < size; r++) {\n        const rowA = matrixA[r];\n        const rowB = matrixB[r];\n        const outputRow = rowA ^ rowB;\n        output.push(outputRow);\n    }\n\n    return output;\n}\n\nfunction getPolynomial(index: number): number {\n    const output = [0, 1];\n\n    for (let k = 1; k < index; k++) {\n        const curr = output[k];\n        const prev = output[k - 1];\n        const double = curr << 1;\n\n        output.push(double ^ prev);\n    }\n\n    return output[index];\n}\n\nfunction evalPolynomial(matrix: number[], poly: number): number[] {\n    const size = matrix.length;\n    let output = Array(size).fill(0);\n    let degree = 0;\n\n    while (poly) {\n        if (poly & 1) {\n            const power = symmetricPow(matrix, degree);\n\n            output = addSym(output, power);\n        }\n\n        poly >>= 1;\n        degree++;\n    }\n\n    return output;\n}\n\nfunction sortMatrices(matrix: number[], identity: number[]): [number[], number[]] {\n    const size = matrix.length;\n    const sorted = [...Array(size).keys()].sort(\n        (a, b) => matrix[b] - matrix[a]\n    );\n\n    const original = sorted.map(row => matrix[row]);\n    const inverted = sorted.map(row => identity[row]);\n\n    return [original, inverted];\n}\n\nfunction invertMatrix(matrix: number[]): number[] {\n    const size = matrix.length;\n    const identity = getIdentity(size);\n\n    let original = matrix;\n    let inverted = identity;\n\n    for (let c = 0; c < size; c++) {\n        const pow = 1 << (size - c - 1);\n\n        [original, inverted] = sortMatrices(original, inverted);\n\n        for (let r = 0; r < size; r++) {\n            const alt = original[r];\n\n            if (r === c) continue;\n\n            if (alt & pow) {\n                original[r] ^= original[c];\n                inverted[r] ^= inverted[c];\n            }\n        }\n    }\n\n    return inverted;\n}\n\n/*\n    https://math.stackexchange.com/questions/2237467\n    https://en.wikipedia.org/wiki/Fibonacci_polynomials\n    https://graphics.stanford.edu/~seander/bithacks.html#:~:text=Brian%20Kernighan\n*/\nexport function getProduct(input: number[], rows: number, cols: number): number[] {\n    const matrix = getMatrix(cols);\n    const weights = getPolynomial(rows + 1);\n    const product = evalPolynomial(matrix, weights);\n    const inverse = invertMatrix(product);\n\n    const binary = parseInt(input.join(''), 2);\n\n    const getParity = (row: number): number => {\n        const value = row & binary;\n        const count = countBits(value);\n        return count & 1;\n    };\n\n    return inverse.map(getParity);\n}\n\n","import { getGrid, flipAdj } from './boardHandlers';\nimport { getProduct } from './matrices';\n\nfunction chaseLights(states: number[][][], dims: number): number[][][] {\n    const newStates = [...states];\n    let prev = states.at(-1);\n\n    if (!prev) return newStates;\n\n    for (let r = 1; r < dims; r++) {\n        for (let c = 0; c < dims; c++) {\n            if (!prev[r - 1][c]) continue;\n\n            const next = flipAdj(r, c, prev);\n\n            newStates.push(next);\n            prev = next;\n        }\n    }\n\n    return newStates;\n}\n\nfunction fillRow(row: number[], dims: number): {\n    input: number[][];\n    output: number[][];\n} {\n    const blank = Array(dims).fill(0);\n\n    const inputStates: number[][] = [blank];\n    const outputStates: number[][] = [blank];\n    const last = [...blank];\n\n    for (let c = 0; c < dims; c++) {\n        if (!row[c]) continue;\n\n        last[c] = 1;\n\n        const input = [...last];\n        const output = getProduct(input, dims, dims);\n\n        inputStates.push(input);\n        outputStates.push(output);\n    }\n\n    return {\n        input: inputStates,\n        output: outputStates,\n    };\n}\n\nfunction extendBack(states: number[][], size: number): number[][] {\n    const back = states.at(-1);\n    if (!back) return states;\n    \n    const extend = [...states];\n    \n    while (extend.length < size) extend.push([...back]);\n    \n    return extend;\n}\n\nfunction extendFront(states: number[][], size: number): number[][] {\n    const extend = [...states];\n    const front = states[0];\n    \n    while (extend.length < size) extend.unshift([...front]);\n    \n    return extend;\n}\n\nexport function getStates(grid: number[], dims: number): { boardStates: number[][][]; inputStates: number[][]; outputStates: number[][]; } {\n    let board = getGrid(dims, dims);\n    \n    for (const index of grid) {\n        const row = Math.floor(index / dims);\n        const col = index % dims;\n        \n        board = flipAdj(row, col, board);\n    }\n    \n    let states = chaseLights([board], dims);\n    const last = states.at(-1);\n    if (!last) return { boardStates: [], inputStates: [], outputStates: [] };\n    \n    const row = last.at(-1);\n    if (!row) return { boardStates: [], inputStates: [], outputStates: [] };\n    \n    let { input, output } = fillRow(row, dims);\n    \n    const before = states.length + input.length - 1;\n    \n    const top = output.at(-1);\n    if (!top) return { boardStates: [], inputStates: [], outputStates: [] };\n    \n    let state = [...last];\n    \n    for (let i = 0; i < before - states.length; i++) {\n        states.push([...last]);\n    }\n    for (let i = 0; i < before - input.length; i++) {\n        input.unshift([...input[0]]);\n    }\n    for (let i = 0; i < before - output.length; i++) {\n        output.unshift([...output[0]]);\n    }\n    \n    for (let k = 0; k < dims; k++) {\n        if (top[k]) {\n            state = flipAdj(0, k, state);\n            states.push([...state]);\n        }\n    }\n    \n    const boardStates = chaseLights(states, dims);\n    const after = boardStates.length;\n    \n    const inputStates = extendBack(input, after);\n    const outputStates = extendBack(output, after);\n    \n    return {\n        boardStates,\n        inputStates,\n        outputStates,\n    };\n}\n\nexport function handleChase(state: unknown, action: unknown): unknown {\n    const { type, dims, grid } = action as { type: string; dims: number; grid: number[] };\n\n    if (type === 'chase') {\n        return getStates(grid, dims);\n    }\n\n    return state;\n}\n\nexport function getCalculator(rows: number, cols: number, dims: number) {\n    return (row: number[]): { boardStates: number[][][]; inputStates: number[][]; outputStates: number[][]; } => {\n        const { input, output } = fillRow(row, dims);\n\n        const inputStates = extendBack(input, rows);\n        const outputStates = extendBack(output, rows);\n\n        const states = getStates(outputStates.flat(), dims);\n\n        return states;\n    };\n}\n\n","import React from 'react';\nimport { Typography, Grid } from '../../components/mui';\n\nimport { getStates } from './chaseHandlers';\nimport { CustomGrid } from '../../helpers';\nimport { useMobile } from '../../hooks';\nimport { TYPOGRAPHY } from '../../config/theme';\n\ninterface Frame {\n    backgroundColor: string;\n}\n\ninterface GetStatesResult {\n    [key: number]: unknown;\n}\n\ninterface Palette {\n    primary: string;\n    secondary: string;\n}\n\nfunction getFrames(states: unknown[], palette: Palette): Record<string, Frame> {\n    const newStates = [-1, ...states, -1];\n    const length = states.length;\n    const frames: Record<string, Frame> = {};\n\n    for (let k = 0; k < length + 1; k++) {\n        const state = newStates[k];\n        const next = newStates[k + 1];\n\n        const value = (state as number) + 1 ? state : next;\n        const color = value ? palette.primary : palette.secondary;\n\n        const percent = (100 * k) / length;\n        const floor = Math.floor(percent);\n\n        frames[`${floor}%`] = {\n            backgroundColor: color,\n        };\n    }\n\n    return frames;\n}\n\nfunction propHandler(\n    states: unknown[],\n    getter: (states: unknown[], row: number, col: number) => unknown[],\n    palette: Palette,\n    id: string\n) {\n    return (row: number, col: number): Record<string, unknown> => {\n        const state = getter(states, row, col);\n        const frames = getFrames(state as unknown[], palette);\n        const length = states.length;\n\n        const name = `${id}-${row}-${col}`;\n        const index = `@keyframes ${name}`;\n\n        const animation = `\n            ${name}\n            ${length * 2}s\n            steps(1, start)\n            infinite\n        `;\n\n        const style: Record<string, unknown> = {\n            [index]: frames,\n            animation,\n        };\n\n        return { sx: style };\n    };\n}\n\ninterface ExampleProps {\n    states?: unknown[];\n    getter?: (states: unknown[], row: number, col: number) => unknown[];\n    palette: Palette;\n    id?: string;\n    rows?: number;\n    cols?: number;\n    size: number;\n    dims?: number;\n    start?: unknown[];\n}\n\nfunction getRange(dims: number): number[] {\n    const keys = Array(dims).keys();\n    return [...keys];\n}\n\nfunction gridTiles(states: number[][][], dims: number): number[][][] {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n    \n    return dRange.map(r => dRange.map(c => lRange.map(k => states[k][r][c])));\n}\n\nfunction rowTiles(states: number[][], dims: number): number[][] {\n    const length = states.length;\n    const dRange = getRange(dims);\n    const lRange = getRange(length);\n    \n    return dRange.map(r => lRange.map(k => states[k][r]));\n}\n\nfunction Bifold({ children }: { children: React.ReactNode }) {\n    return <Grid size={6}>{children}</Grid>;\n}\n\nfunction Title({ children }: { children: React.ReactNode }) {\n    return (\n        <Bifold>\n            <Typography\n                variant=\"h6\"\n                sx={{\n                    textAlign: 'center',\n                    fontWeight: 'semibold',\n                    fontSize: TYPOGRAPHY.fontSize.body,\n                    lineHeight: '1.2',\n                    letterSpacing: '-0.025em',\n                }}\n            >\n                {children}\n            </Typography>\n        </Bifold>\n    );\n}\n\nexport default function Example({\n    start = [],\n    dims = 3,\n    size,\n    palette,\n}: ExampleProps): React.ReactElement {\n    const mobile = useMobile('lg');\n    const states = getStates(start as number[], dims);\n    const width = mobile ? size / 2 : size;\n    \n    const { boardStates, inputStates, outputStates } = states;\n    \n    const boardTiles = gridTiles(boardStates, dims);\n    const inputTiles = rowTiles(inputStates, dims);\n    const outputTiles = rowTiles(outputStates, dims);\n    \n    const getGrid = (s: unknown[], r: number, c: number) => {\n        const states = s as number[][][];\n        return states.map(state => state[r][c]);\n    };\n    const getRow = (s: unknown[], r: number, c: number) => {\n        const states = s as number[][];\n        return states.map(state => state[c]);\n    };\n    \n    const getBoard = propHandler(boardTiles as unknown[], getGrid, palette, 'board');\n    const getInput = propHandler(inputTiles as unknown[], getRow, palette, 'input');\n    const getOutput = propHandler(outputTiles as unknown[], getRow, palette, 'output');\n    \n    return (\n        <Grid container size={12} spacing={4}>\n            <Grid container size={12}>\n                <Bifold>\n                    <CustomGrid\n                        size={width}\n                        rows={dims}\n                        cols={dims}\n                        cellProps={getBoard}\n                    />\n                </Bifold>\n                <Grid container size={6}>\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getInput}\n                    />\n                    <CustomGrid\n                        rows={1}\n                        cols={dims}\n                        size={width}\n                        cellProps={getOutput}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container size={12}>\n                <Title>Animation Demo</Title>\n                <Title>Pattern Input</Title>\n            </Grid>\n        </Grid>\n    );\n}\n\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Backdrop, Typography, Box, Grid } from '../../components/mui';\nimport {\n    CircleRounded,\n    KeyboardArrowDown,\n    Calculate,\n    Replay,\n} from '../../components/icons';\nimport {\n    SPACING,\n    COLORS,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../../config/theme';\nimport { GlassCard, CustomGrid } from '../../helpers';\nimport { getProduct } from './matrices';\nimport { useGetters } from '../Board';\nimport { useMobile } from '../../hooks';\nimport Example from './Example';\n\n// Type assertion for GlassCard component\nconst TypedGlassCard = GlassCard as React.ComponentType<{\n    children?: React.ReactNode;\n    sx?: Record<string, unknown>;\n}>;\n\ninterface Getters {\n    getColor: (row: number, col: number) => { front: string; back: string };\n    getBorder: (row: number, col: number) => Record<string, unknown>;\n}\n\ninterface Palette {\n    primary: string;\n    secondary: string;\n}\n\ninterface InfoProps {\n    rows: number;\n    cols: number;\n    size: number;\n    open: boolean;\n    palette: Palette;\n    toggleOpen: () => void;\n}\n\nfunction getInput(getters: Getters, toggleTile: (col: number) => (event: React.MouseEvent) => void) {\n    const { getColor, getBorder } = getters;\n\n    return (r: number, c: number) => {\n        const { front, back } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n            onClick: toggleTile(c),\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n            color: front,\n            children: <CircleRounded />,\n        };\n    };\n}\n\nfunction getOutput({ getColor, getBorder }: Getters) {\n    return (r: number, c: number) => {\n        const { front } = getColor(r, c);\n\n        return {\n            backgroundColor: front,\n            style: getBorder(r, c),\n        };\n    };\n}\n\nfunction useHandler(row: number[], size: number, palette: Palette) {\n    const getTile = useCallback(\n        (r: number, c: number) => {\n            if (r !== 0 || c < 0 || c >= size) return -1;\n\n            return row[c];\n        },\n        [row, size]\n    );\n\n    return useGetters(getTile, palette);\n}\n\nexport default function Info(props: InfoProps): React.ReactElement {\n    const { rows, cols, size, open, palette, toggleOpen } = props;\n    const isMobile = useMobile('md');\n    const isLargeScreen = useMobile('lg');\n\n    const [row, setRow] = useState<number[]>(Array(cols).fill(0));\n\n    useEffect(() => {\n        const newRow = Array(cols).fill(0);\n\n        setRow(newRow);\n    }, [cols, palette]);\n\n    const res = getProduct(row, rows, cols);\n\n    const toggleTile = (col: number) => (event: React.MouseEvent) => {\n        event.stopPropagation();\n\n        const newRow = [...row];\n        newRow[col] ^= 1;\n        setRow(newRow);\n    };\n\n    const inputGetters = useHandler(row, cols, palette);\n    const outputGetters = useHandler(res, cols, palette);\n    const inputProps = getInput(inputGetters, toggleTile);\n    const outputProps = getOutput(outputGetters);\n\n    return (\n        <Backdrop\n            open={open}\n            onClick={toggleOpen}\n            sx={{\n                ...COMPONENT_VARIANTS.card,\n                backgroundColor: 'hsla(0, 0%, 3%, 0.85)',\n                transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                border: 'none',\n            }}\n        >\n            <Box\n                sx={{\n                    maxWidth: '80vw',\n                    height: 'fit-content',\n                    maxHeight: '90vh',\n                    overflow: 'auto',\n                    mx: 'auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n                    padding: 0,\n                    backgroundColor: 'hsl(0, 0%, 5%)',\n                    borderRadius: SPACING.borderRadius.lg,\n                    border: `1px solid ${COLORS.border.subtle}`,\n                }}\n            >\n                <Box\n                    sx={{\n                        pt: '1rem',\n                        pb: '1rem',\n                        px: '1.25rem',\n                        height: 'fit-content',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        minHeight: 0,\n                    }}\n                >\n                    <Grid\n                        container\n                        spacing={isMobile ? 1.5 : 2}\n                        sx={{ flex: 1, minHeight: 0 }}\n                    >\n                        {/* Top section: Instructions on left, animations on right */}\n                        <Grid\n                            container\n                            size={12}\n                            spacing={2}\n                            sx={{\n                                flex: 1,\n                                minHeight: 0,\n                                maxWidth: {\n                                    xs: '100%',\n                                    lg: SPACING.maxWidth.lg,\n                                },\n                                mx: 'auto',\n                            }}\n                        >\n                            {/* Left half: Algorithm instructions */}\n                            <Grid\n                                size={{ xs: 12, lg: isMobile ? 12 : 6 }}\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    height: isLargeScreen ? '100%' : 'auto',\n                                }}\n                            >\n                                <Box sx={{ flex: 1, overflow: 'auto' }}>\n                                    <TypedGlassCard\n                                        sx={{\n                                            height: !isLargeScreen\n                                                ? '100%'\n                                                : 'auto',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            transition:\n                                                'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                        }}\n                                    >\n                                        <Typography\n                                            variant=\"h5\"\n                                            gutterBottom\n                                            sx={{\n                                                color: COLORS.text.primary,\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .semibold,\n                                                mb: 2,\n                                                textAlign: isMobile\n                                                    ? 'center'\n                                                    : 'left',\n                                                fontSize:\n                                                    TYPOGRAPHY.fontSize.h2,\n                                                lineHeight: 1.4,\n                                                letterSpacing: '0',\n                                            }}\n                                        >\n                                            Chasing Lights Algorithm\n                                        </Typography>\n                                        {/* Step 1 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <KeyboardArrowDown\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.primary\n                                                            .main,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase to Bottom\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Turn off rows from top to bottom\n                                                by clicking lights in each row\n                                                to eliminate all lights above\n                                                the bottom row.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 2 */}\n                                        <Box sx={{ mb: 2 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Calculate\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .amber,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Use the Calculator\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Enter the remaining lights\n                                                pattern in the bottom row using\n                                                the interactive calculator\n                                                below.\n                                            </Typography>\n                                        </Box>\n\n                                        {/* Step 3 */}\n                                        <Box sx={{ mb: 1 }}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{\n                                                    color: COLORS.text.primary,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    mb: 1,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    letterSpacing: '0',\n                                                }}\n                                            >\n                                                <Replay\n                                                    sx={{\n                                                        mr: 1.5,\n                                                        color: COLORS.data\n                                                            .green,\n                                                        fontSize: '1.5rem',\n                                                    }}\n                                                />\n                                                Chase Again\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    color: COLORS.text\n                                                        .secondary,\n                                                    lineHeight: 1.5,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                    ml: 4,\n                                                }}\n                                            >\n                                                Apply the calculated solution\n                                                pattern to the top row, then\n                                                chase downward to solve the\n                                                entire puzzle.\n                                            </Typography>\n                                        </Box>\n                                    </TypedGlassCard>\n                                </Box>\n                            </Grid>\n\n                            {/* Right half: Animations */}\n                            {!isLargeScreen && (\n                                <Grid\n                                    size={{ xs: 12, lg: 6 }}\n                                    sx={{\n                                        ...COMPONENT_VARIANTS.flexCenter,\n                                        }}\n                                    >\n                                        <TypedGlassCard\n                                            sx={{\n                                                width: '100%',\n                                                height: '100%',\n                                                ...COMPONENT_VARIANTS.flexCenter,\n                                                transition:\n                                                    'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n                                            }}\n                                        >\n                                        <Example\n                                            dims={3}\n                                            size={size * 0.6}\n                                            start={[1, 3, 8]}\n                                            palette={palette}\n                                        />\n                                    </TypedGlassCard>\n                                </Grid>\n                            )}\n                        </Grid>\n\n                        {/* Bottom section: Lights Out Calculator (full width) */}\n                        <Grid container size={12} spacing={2}>\n                            <Grid size={12}>\n                                <TypedGlassCard\n                                    sx={{\n                                        textAlign: 'center',\n                                        paddingBottom: '2rem',\n                                    }}\n                                >\n                                    <Typography\n                                        variant=\"h6\"\n                                        sx={{\n                                            color: COLORS.text.primary,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                            fontSize:\n                                                TYPOGRAPHY.fontSize.subheading,\n                                            lineHeight: 1.4,\n                                            letterSpacing: '0',\n                                            mb: 2,\n                                        }}\n                                    >\n                                        Interactive Calculator\n                                    </Typography>\n\n                                    {/* Input Pattern */}\n                                    <Box sx={{ mb: 2 }}>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={inputProps}\n                                        />\n                                    </Box>\n\n                                    {/* Solution Pattern */}\n                                    <Box>\n                                        <CustomGrid\n                                            space={0}\n                                            rows={1}\n                                            cols={cols}\n                                            size={size * 0.7}\n                                            cellProps={outputProps}\n                                        />\n                                    </Box>\n                                </TypedGlassCard>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Backdrop>\n    );\n}\n\n","import React, { useMemo, useEffect, useReducer } from 'react';\nimport { Grid } from '../../components/mui';\nimport { InfoRounded, CircleRounded } from '../../components/icons';\n\nimport { Controls, TooltipButton } from '../../helpers';\nimport { Board, useHandler, usePalette } from '../Board';\nimport { PAGE_TITLES, GAME_CONSTANTS } from '../../config/constants';\nimport { COLORS } from '../../config/theme';\nimport { getGrid, handleBoard } from './boardHandlers';\nimport { useWindow, useMobile } from '../../hooks';\nimport { convertPixels } from '../../calculate';\nimport Info from './Info';\n\ninterface Getters {\n    getColor: (row: number, col: number) => { front: string; back: string };\n    getBorder: (row: number, col: number) => React.CSSProperties;\n    getFiller: (row: number, col: number) => string;\n}\n\ninterface FrontProps {\n    onClick: () => void;\n    children: React.ReactElement;\n    backgroundColor: string;\n    color: string;\n    style: React.CSSProperties;\n    sx: {\n        '&:hover': {\n            cursor: string;\n            color: string;\n        };\n    };\n}\n\nfunction getFrontProps(getters: Getters, dispatch: (action: any) => void) {\n    const { getColor, getBorder } = getters;\n\n    const flipAdj = (row: number, col: number) => {\n        dispatch({\n            type: 'adjacent',\n            row,\n            col,\n        });\n    };\n\n    return (row: number, col: number): FrontProps => {\n        const style = getBorder(row, col);\n        const { front, back } = getColor(row, col);\n\n        return {\n            onClick: () => flipAdj(row, col),\n            children: <CircleRounded />,\n            backgroundColor: front,\n            color: front,\n            style,\n            sx: {\n                '&:hover': {\n                    cursor: 'pointer',\n                    color: back,\n                },\n            },\n        };\n    };\n}\n\nexport default function LightsOut(): React.ReactElement {\n    const { height, width } = useWindow();\n    const mobile = useMobile('sm');\n    const size = mobile\n        ? GAME_CONSTANTS.gridSizes.mobile\n        : GAME_CONSTANTS.gridSizes.desktop;\n\n    let { rows, cols } = useMemo(\n        () => convertPixels(size, height, width),\n        [size, height, width]\n    );\n\n    rows -= 1;\n    cols -= 1;\n\n    if (mobile) rows -= 2;\n\n    const initial = {\n        grid: getGrid(rows, cols),\n        score: 0,\n        rows,\n        cols,\n    };\n\n    const [state, dispatch] = useReducer(handleBoard, initial);\n\n    const [open, toggleOpen] = useReducer((open: boolean) => !open, false);\n\n    const palette = usePalette(state.score);\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.lightsOut;\n    }, []);\n\n    useEffect(() => {\n        dispatch({\n            type: 'resize',\n            newRows: rows,\n            newCols: cols,\n        });\n    }, [rows, cols]);\n\n    const getters = useHandler(state, palette);\n\n    const frontProps = getFrontProps(getters, dispatch);\n\n    const backProps = (row: number, col: number) => {\n        return {\n            backgroundColor: getters.getFiller(row, col),\n        };\n    };\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            sx={{\n                background: COLORS.surface.background,\n                position: 'relative',\n            }}\n        >\n            <Board\n                size={size}\n                rows={rows}\n                cols={cols}\n                frontProps={frontProps as any}\n                backProps={backProps}\n            />\n            <Controls\n                handler={() => () => undefined} // No directional controls for Lights Out\n                onRandom={() => dispatch({ type: 'random' })}\n                size=\"inherit\"\n            >\n                <TooltipButton\n                    title=\"Info\"\n                    Icon={InfoRounded}\n                    onClick={toggleOpen}\n                />\n            </Controls>\n            {(Info as any)({\n                rows,\n                cols,\n                size,\n                open,\n                palette,\n                score: state.score,\n                toggleOpen,\n            })}\n        </Grid>\n    );\n}\n\n","import React from 'react';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Button,\n    Grid,\n    ToggleButton,\n    ToggleButtonGroup,\n} from './mui';\nimport { GitHub, HomeRounded as Home, Refresh, SettingsRounded } from './icons';\nimport { CHART_DIMENSIONS, CHART_FORMATTING } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip as RechartsTooltip,\n    ResponsiveContainer,\n} from 'recharts';\n\ninterface ChartConfig {\n    type: string;\n    lines: Array<{\n        dataKey: string;\n        name: string;\n        color: string;\n        yAxisId?: string;\n    }>;\n    xAxisKey: string;\n    yAxisFormatter: (value: number) => string;\n    yAxisDomain: string[];\n    dualYAxis?: boolean;\n    rightYAxisFormatter?: (value: number) => string;\n    rightYAxisDomain?: string[];\n    tooltipLabelFormatter: (value: number) => string;\n    tooltipFormatter: (value: number, name: string) => [string, string];\n}\n\ninterface ViewType {\n    key: string;\n    label: string;\n    icon: React.ElementType;\n    chartTitle: string;\n    dataProcessor: (data: any[]) => any[];\n    chartConfig: ChartConfig;\n}\n\ninterface ControlOption {\n    value: number;\n    label: string;\n}\n\ninterface Control {\n    label: string;\n    icon?: React.ElementType;\n    color?: string;\n    hoverColor?: string;\n    value: number;\n    onChange: (value: number) => void;\n    options: ControlOption[];\n}\n\ninterface ResearchDemoProps {\n    title: string;\n    subtitle: string;\n    githubUrl: string;\n    chartData?: any[];\n    chartConfig?: ChartConfig;\n    viewTypes?: ViewType[];\n    currentViewType?: string;\n    onViewTypeChange?: (value: string) => void;\n    controls?: Control[];\n    loading?: boolean;\n    loadingMessage?: string;\n    onReset?: () => void;\n    resetLabel?: string;\n    chartTitle?: string | null;\n}\n\nconst ResearchDemo: React.FC<ResearchDemoProps> = ({\n    title,\n    subtitle,\n    githubUrl,\n    chartData = [],\n    chartConfig = {\n        type: 'line',\n        lines: [],\n        xAxisKey: 'x',\n        yAxisFormatter: (value: number) => value.toFixed(2),\n        yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        dualYAxis: false,\n        rightYAxisFormatter: (value: number) => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: (value: number) => `Round ${value}`,\n        tooltipFormatter: (value: number, name: string) => [value.toFixed(2), name],\n    },\n    viewTypes = [],\n    currentViewType = 'default',\n    onViewTypeChange = () => {},\n    controls = [],\n    loading = false,\n    loadingMessage = 'Loading data...',\n    onReset = null,\n    resetLabel = 'Reset',\n    chartTitle = null,\n}) => {\n    const getCurrentChartData = () => {\n        if (!chartData || chartData.length === 0) return [];\n\n        if (!viewTypes.length) return chartData;\n\n        const currentView = viewTypes.find(\n            view => view.key === currentViewType\n        );\n        if (!currentView || !currentView.dataProcessor) return chartData;\n\n        return currentView.dataProcessor(chartData);\n    };\n\n    const currentData = getCurrentChartData();\n    const currentChartConfig =\n        viewTypes.find(view => view.key === currentViewType)?.chartConfig ||\n        chartConfig;\n\n    return (\n        <Grid\n            container={true}\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: SPACING.padding.md,\n                paddingBottom: {\n                    xs: SPACING.padding.md,\n                    md: 0,\n                },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -1,\n                }}\n            />\n\n            <Grid\n                size={12}\n                flex={1}\n                sx={{\n                    ...COMPONENT_VARIANTS.flexCenter,\n                    flexDirection: 'column',\n                    zIndex: 1,\n                    padding: 0,\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: '0 2rem',\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Grid\n                        container={true}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                        sx={{ marginBottom: 2 }}\n                    >\n                        <Grid size=\"auto\">\n                            <Typography\n                                variant=\"h1\"\n                                sx={{\n                                    color: COLORS.text.primary,\n                                    fontWeight: TYPOGRAPHY.fontWeight.bold,\n                                    fontSize: TYPOGRAPHY.fontSize.h2,\n                                }}\n                            >\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid size=\"auto\" sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={githubUrl}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component=\"a\" href=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: {\n                                            xs: TYPOGRAPHY.fontSize.h2,\n                                            md: '2rem',\n                                        },\n                                    }}\n                                />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n\n                    <Typography\n                        variant=\"h5\"\n                        sx={{\n                            color: COLORS.text.secondary,\n                            marginTop: 2,\n                            marginBottom: 4,\n                            fontWeight: TYPOGRAPHY.fontWeight.normal,\n                            fontSize: TYPOGRAPHY.fontSize.subheading,\n                        }}\n                    >\n                        {subtitle}\n                    </Typography>\n\n                    <GlassCard\n                        sx={{\n                            marginBottom: 3,\n                            width: '100%',\n                            boxSizing: 'border-box',\n                            overflow: 'hidden',\n                        }}\n                    >\n                        <Typography\n                            variant=\"subtitle1\"\n                            sx={{\n                                color: COLORS.text.secondary,\n                                marginBottom: 2,\n                                textAlign: 'center',\n                                fontWeight: TYPOGRAPHY.fontWeight.medium,\n                                fontSize: TYPOGRAPHY.fontSize.subheading,\n                            }}\n                        >\n                            {chartTitle ||\n                                (viewTypes.length\n                                    ? viewTypes.find(\n                                          view => view.key === currentViewType\n                                      )?.chartTitle || 'Data Visualization'\n                                    : 'Data Visualization')}\n                        </Typography>\n                        <Box sx={{ height: CHART_DIMENSIONS.height }}>\n                            {loading ? (\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        height: '100%',\n                                        color: COLORS.text.secondary,\n                                    }}\n                                >\n                                    <Typography>{loadingMessage}</Typography>\n                                </Box>\n                            ) : (\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                    <LineChart data={currentData}>\n                                        <CartesianGrid\n                                            strokeDasharray={\n                                                CHART_FORMATTING.lines\n                                                    .strokeDashArray\n                                            }\n                                            stroke={COLORS.border.subtle}\n                                        />\n                                        <XAxis\n                                            dataKey={\n                                                currentChartConfig.xAxisKey\n                                            }\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                        />\n                                        <YAxis\n                                            yAxisId=\"left\"\n                                            stroke={COLORS.text.secondary}\n                                            tick={{\n                                                fill: COLORS.text.secondary,\n                                            }}\n                                            tickFormatter={\n                                                currentChartConfig.yAxisFormatter\n                                            }\n                                            domain={\n                                                currentChartConfig.yAxisDomain\n                                            }\n                                        />\n                                        {currentChartConfig.dualYAxis && (\n                                            <YAxis\n                                                yAxisId=\"right\"\n                                                orientation=\"right\"\n                                                stroke={COLORS.text.secondary}\n                                                tick={{\n                                                    fill: COLORS.text.secondary,\n                                                }}\n                                                tickFormatter={\n                                                    currentChartConfig.rightYAxisFormatter\n                                                }\n                                                domain={\n                                                    currentChartConfig.rightYAxisDomain\n                                                }\n                                            />\n                                        )}\n                                        <RechartsTooltip\n                                            contentStyle={{\n                                                backgroundColor:\n                                                    'hsla(0, 0%, 5%, 0.95)',\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                color: COLORS.text.primary,\n                                            }}\n                                            labelFormatter={\n                                                currentChartConfig.tooltipLabelFormatter\n                                            }\n                                            formatter={\n                                                currentChartConfig.tooltipFormatter as any\n                                            }\n                                        />\n                                        {currentChartConfig.lines.map(\n                                            (line, index) => (\n                                                <Line\n                                                    key={line.dataKey}\n                                                    yAxisId={\n                                                        line.yAxisId || 'left'\n                                                    }\n                                                    type=\"monotone\"\n                                                    dataKey={line.dataKey}\n                                                    stroke={line.color}\n                                                    strokeWidth={\n                                                        CHART_DIMENSIONS.strokeWidth\n                                                    }\n                                                    name={line.name}\n                                                    dot={{\n                                                        fill: line.color,\n                                                        strokeWidth:\n                                                            CHART_FORMATTING\n                                                                .lines\n                                                                .defaultStrokeWidth,\n                                                        r: CHART_DIMENSIONS.dotRadius,\n                                                    }}\n                                                />\n                                            )\n                                        )}\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            )}\n                        </Box>\n                    </GlassCard>\n\n                    {viewTypes.length > 1 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 3,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Chart Views\n                                    </Typography>\n                                </Box>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    display: 'grid',\n                                    gridTemplateColumns: {\n                                        xs: 'repeat(2, minmax(0, 1fr))',\n                                        md: `repeat(${Math.min(viewTypes.length, 4)}, 1fr)`,\n                                    },\n                                    gap: 1.5,\n                                    width: '100%',\n                                    margin: 0,\n                                }}\n                            >\n                                {viewTypes.map(viewType => {\n                                    const IconComponent = viewType.icon;\n                                    return (\n                                        <Button\n                                            key={viewType.key}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            startIcon={\n                                                IconComponent ? (\n                                                    <IconComponent />\n                                                ) : null\n                                            }\n                                            onClick={() =>\n                                                onViewTypeChange(viewType.key)\n                                            }\n                                            sx={{\n                                                width: '100%',\n                                                color:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.text.primary\n                                                        : COLORS.text.secondary,\n                                                backgroundColor:\n                                                    currentViewType ===\n                                                    viewType.key\n                                                        ? COLORS.primary.main\n                                                        : 'transparent',\n                                                borderColor:\n                                                    COLORS.border.subtle,\n                                                borderWidth: '1px',\n                                                borderStyle: 'solid',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                minHeight: '36px',\n                                                padding: '0.4rem 0.8rem',\n                                                fontSize: '0.8rem',\n                                                fontWeight:\n                                                    TYPOGRAPHY.fontWeight\n                                                        .medium,\n                                                transition:\n                                                    'transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease',\n                                                '&:hover': {\n                                                    backgroundColor:\n                                                        currentViewType ===\n                                                        viewType.key\n                                                            ? COLORS.primary\n                                                                  .dark\n                                                            : COLORS.interactive\n                                                                  .hover,\n                                                    transform:\n                                                        'translateY(-1px)',\n                                                    boxShadow:\n                                                        '0 4px 8px rgba(0,0,0,0.1)',\n                                                },\n                                            }}\n                                        >\n                                            {viewType.label}\n                                        </Button>\n                                    );\n                                })}\n                            </Box>\n                        </GlassCard>\n                    )}\n\n                    {controls.length > 0 && (\n                        <GlassCard\n                            sx={{\n                                marginBottom: 0,\n                                width: '100%',\n                                boxSizing: 'border-box',\n                                overflow: 'hidden',\n                                paddingBottom: SPACING.padding.md,\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    marginBottom: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1,\n                                    }}\n                                >\n                                    <SettingsRounded\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontSize: '1.25rem',\n                                        }}\n                                    />\n                                    <Typography\n                                        variant=\"body1\"\n                                        sx={{\n                                            color: COLORS.primary.light,\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.semibold,\n                                        }}\n                                    >\n                                        Parameters\n                                    </Typography>\n                                </Box>\n                                {onReset && (\n                                    <Button\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        startIcon={<Refresh />}\n                                        onClick={onReset}\n                                        sx={{\n                                            color: COLORS.text.secondary,\n                                            borderColor: COLORS.border.subtle,\n                                            borderRadius:\n                                                SPACING.borderRadius.lg,\n                                            padding: '0.25rem 1rem',\n                                            fontSize: '0.875rem',\n                                            fontWeight:\n                                                TYPOGRAPHY.fontWeight.medium,\n                                            transition: 'all 0.2s ease-in-out',\n                                            '&:hover': {\n                                                borderColor:\n                                                    COLORS.primary.main,\n                                                backgroundColor:\n                                                    COLORS.interactive.hover,\n                                                transform: 'translateY(-1px)',\n                                                boxShadow:\n                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                            },\n                                        }}\n                                    >\n                                        {resetLabel}\n                                    </Button>\n                                )}\n                            </Box>\n\n                            <Grid container={true} spacing={2.5}>\n                                {controls.map((control, index) => (\n                                    <Grid key={index} size={{ xs: 12, md: 4 }}>\n                                        <Box\n                                            sx={{\n                                                marginBottom: 0,\n                                                padding: '1rem',\n                                                backgroundColor:\n                                                    'rgba(255, 255, 255, 0.02)',\n                                                borderRadius:\n                                                    SPACING.borderRadius.lg,\n                                                border: `1px solid ${COLORS.border.subtle}`,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    gap: 1,\n                                                    mb: 2,\n                                                }}\n                                            >\n                                                {control.icon && (\n                                                    <control.icon\n                                                        sx={{\n                                                            color:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .light,\n                                                            fontSize: '1.1rem',\n                                                        }}\n                                                    />\n                                                )}\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    sx={{\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                    }}\n                                                >\n                                                    {control.label}\n                                                </Typography>\n                                            </Box>\n                                            <ToggleButtonGroup\n                                                value={control.value}\n                                                exclusive\n                                                onChange={(e, newValue) => {\n                                                    if (newValue !== null) {\n                                                        control.onChange(\n                                                            newValue\n                                                        );\n                                                    }\n                                                }}\n                                                size=\"small\"\n                                                sx={{\n                                                    width: '100%',\n                                                    borderRadius:\n                                                        SPACING.borderRadius.lg,\n                                                    overflow: 'hidden',\n                                                    border: `1px solid ${COLORS.border.subtle}`,\n                                                    '& .MuiToggleButtonGroup-grouped':\n                                                        {\n                                                            margin: 0,\n                                                            border: 0,\n                                                            borderRadius: 0,\n                                                            '&:not(:first-of-type)':\n                                                                {\n                                                                    borderLeft: `1px solid ${COLORS.border.subtle}`,\n                                                                },\n                                                        },\n                                                    '& .MuiToggleButton-root': {\n                                                        color: COLORS.text\n                                                            .secondary,\n                                                        borderColor:\n                                                            COLORS.border\n                                                                .subtle,\n                                                        padding:\n                                                            '0.6rem 0.8rem',\n                                                        flex: 1,\n                                                        fontSize: '0.85rem',\n                                                        fontWeight:\n                                                            TYPOGRAPHY\n                                                                .fontWeight\n                                                                .medium,\n                                                        borderRadius: 0,\n                                                        transition:\n                                                            'all 0.2s ease-in-out',\n                                                        '&.Mui-selected': {\n                                                            backgroundColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            color: COLORS.text\n                                                                .primary,\n                                                            borderColor:\n                                                                control.color ||\n                                                                COLORS.primary\n                                                                    .main,\n                                                            '&:hover': {\n                                                                backgroundColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                borderColor:\n                                                                    control.hoverColor ||\n                                                                    (control.color ===\n                                                                    COLORS\n                                                                        .primary\n                                                                        .main\n                                                                        ? COLORS\n                                                                              .primary\n                                                                              .dark\n                                                                        : control.color ===\n                                                                            COLORS\n                                                                                .data\n                                                                                .green\n                                                                          ? 'hsl(141, 64%, 39%)'\n                                                                          : control.color ===\n                                                                              COLORS\n                                                                                  .data\n                                                                                  .amber\n                                                                            ? 'hsl(34, 95%, 48%)'\n                                                                            : control.color ||\n                                                                              COLORS\n                                                                                  .primary\n                                                                                  .dark),\n                                                                transform:\n                                                                    'translateY(-1px)',\n                                                                boxShadow:\n                                                                    '0 4px 8px rgba(0,0,0,0.1)',\n                                                            },\n                                                        },\n                                                        '&:hover': {\n                                                            backgroundColor:\n                                                                COLORS\n                                                                    .interactive\n                                                                    .hover,\n                                                            transform:\n                                                                'translateY(-1px)',\n                                                        },\n                                                    },\n                                                }}\n                                            >\n                                                {control.options.map(option => (\n                                                    <ToggleButton\n                                                        key={option.value}\n                                                        value={option.value}\n                                                    >\n                                                        {option.label}\n                                                    </ToggleButton>\n                                                ))}\n                                            </ToggleButtonGroup>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </GlassCard>\n                    )}\n                </Box>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ResearchDemo;\n\n","import React, { useState, useEffect } from 'react';\nimport {\n    BarChartRounded,\n    TrendingUpRounded,\n    ShowChartRounded,\n    AnalyticsRounded,\n} from '../components/icons';\nimport {\n    URLS,\n    PAGE_TITLES,\n    ZSHARP_DEFAULTS,\n    PERCENTAGE,\n} from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport ResearchDemo from '../components/ResearchDemo';\n\ninterface DataPoint {\n    epoch: number;\n    sgd: number;\n    zsharp: number;\n    sgdLoss: number;\n    zsharpLoss: number;\n}\n\ninterface ProcessedDataPoint {\n    epoch: number;\n    sgd?: number;\n    zsharp?: number;\n    gap?: number;\n}\n\ninterface RealData {\n    'SGD Baseline'?: {\n        train_accuracies?: number[];\n        train_losses?: number[];\n    };\n    'ZSharp'?: {\n        train_accuracies?: number[];\n        train_losses?: number[];\n    };\n}\n\ninterface ViewType {\n    key: string;\n    label: string;\n    icon: React.ElementType;\n    chartTitle: string;\n    dataProcessor: (data: DataPoint[]) => ProcessedDataPoint[];\n    chartConfig: {\n        type: string;\n        xAxisKey: string;\n        yAxisFormatter: (value: number) => string;\n        yAxisDomain: string[];\n        tooltipLabelFormatter: (value: number) => string;\n        tooltipFormatter: (value: number, name: string) => [string, string];\n        lines: Array<{\n            dataKey: string;\n            name: string;\n            color: string;\n        }>;\n    };\n}\n\nconst loadRealZSharpData = async (): Promise<DataPoint[]> => {\n    try {\n        if (typeof DecompressionStream === 'undefined') {\n            throw new Error('DecompressionStream not supported');\n        }\n\n        const response = await fetch('/zsharp_data.json.gz');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump(): Promise<void> {\n                        return reader.read().then(({ done, value }: { done: boolean; value: Uint8Array | undefined }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const realData: RealData = JSON.parse(decompressedData);\n\n        const data: DataPoint[] = [];\n        const sgdAccuracies = realData['SGD Baseline']?.train_accuracies || [];\n        const zsharpAccuracies = realData['ZSharp']?.train_accuracies || [];\n        const sgdLosses = realData['SGD Baseline']?.train_losses || [];\n        const zsharpLosses = realData['ZSharp']?.train_losses || [];\n\n        const maxEpochs = Math.max(\n            sgdAccuracies.length,\n            zsharpAccuracies.length\n        );\n\n        for (let i = 0; i < maxEpochs; i++) {\n            data.push({\n                epoch: i + 1,\n                sgd: (sgdAccuracies[i] || 0) / PERCENTAGE.divisor,\n                zsharp: (zsharpAccuracies[i] || 0) / PERCENTAGE.divisor,\n                sgdLoss: sgdLosses[i] || 0,\n                zsharpLoss: zsharpLosses[i] || 0,\n            });\n        }\n\n        return data;\n    } catch (error) {\n        return generateFallbackData();\n    }\n};\n\nconst generateFallbackData = (): DataPoint[] => {\n    const data: DataPoint[] = [];\n    for (let i = 0; i <= ZSHARP_DEFAULTS.maxEpochs; i++) {\n        const sgdAccuracy =\n            ZSHARP_DEFAULTS.baseAccuracy +\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.maxAccuracy - ZSHARP_DEFAULTS.baseAccuracy);\n        const zsharpAccuracy = sgdAccuracy + ZSHARP_DEFAULTS.improvement;\n        const sgdLoss =\n            ZSHARP_DEFAULTS.baseLoss -\n            (i / ZSHARP_DEFAULTS.maxEpochs) *\n                (ZSHARP_DEFAULTS.baseLoss - ZSHARP_DEFAULTS.minLoss);\n        const zsharpLoss = sgdLoss - ZSHARP_DEFAULTS.lossReduction;\n\n        data.push({\n            epoch: i + 1,\n            sgd: sgdAccuracy,\n            zsharp: zsharpAccuracy,\n            sgdLoss: sgdLoss,\n            zsharpLoss: zsharpLoss,\n        });\n    }\n    return data;\n};\n\nconst ZSharp: React.FC = () => {\n    const [chartData, setChartData] = useState<DataPoint[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [viewType, setViewType] = useState<string>('accuracy');\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.zsharp;\n\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealZSharpData();\n                setChartData(data);\n            } catch (error) {\n                console.error('Error loading ZSharp data in component:', error);\n                setChartData(generateFallbackData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const viewTypes: ViewType[] = [\n        {\n            key: 'accuracy',\n            label: 'Accuracy',\n            icon: BarChartRounded,\n            chartTitle: 'Performance Comparison',\n            dataProcessor: (data: DataPoint[]) => data,\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: (value: number) =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n                tooltipLabelFormatter: (value: number) => `Epoch ${value}`,\n                tooltipFormatter: (value: number, name: string) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                    name,\n                ],\n                lines: [\n                    { dataKey: 'sgd', name: 'SGD', color: COLORS.primary.main },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'loss',\n            label: 'Loss',\n            icon: TrendingUpRounded,\n            chartTitle: 'Loss Evaluation',\n            dataProcessor: (data: DataPoint[]) =>\n                data.map((point): ProcessedDataPoint => ({\n                    epoch: point.epoch,\n                    sgd: point.sgdLoss,\n                    zsharp: point.zsharpLoss,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: (value: number) => value.toFixed(3),\n                yAxisDomain: ['dataMin - 0.1', 'dataMax + 0.1'],\n                tooltipLabelFormatter: (value: number) => `Epoch ${value}`,\n                tooltipFormatter: (value: number, name: string) => [value.toFixed(3), name],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Loss',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Loss',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'learning_curve',\n            label: 'Learning Gap',\n            icon: ShowChartRounded,\n            chartTitle: 'Learning Progress',\n            dataProcessor: (data: DataPoint[]) =>\n                data.map((point): ProcessedDataPoint => ({\n                    epoch: point.epoch,\n                    gap: point.zsharp - point.sgd,\n                })),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: (value: number) =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: (value: number) => `Epoch ${value}`,\n                tooltipFormatter: (value: number, name: string) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(2)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'gap',\n                        name: 'Accuracy Gap',\n                        color: COLORS.data.amber,\n                    },\n                ],\n            },\n        },\n        {\n            key: 'convergence',\n            label: 'Convergence',\n            icon: AnalyticsRounded,\n            chartTitle: 'Convergence Analysis',\n            dataProcessor: (data: DataPoint[]) =>\n                data.map((point, index): ProcessedDataPoint => {\n                    if (index === 0)\n                        return { epoch: point.epoch, sgd: 0, zsharp: 0 };\n                    const prevPoint = data[index - 1];\n                    return {\n                        epoch: point.epoch,\n                        sgd: point.sgd - prevPoint.sgd,\n                        zsharp: point.zsharp - prevPoint.zsharp,\n                    };\n                }),\n            chartConfig: {\n                type: 'line',\n                xAxisKey: 'epoch',\n                yAxisFormatter: (value: number) =>\n                    `${(value * PERCENTAGE.multiplier).toFixed(1)}%`,\n                yAxisDomain: ['dataMin - 0.005', 'dataMax + 0.005'],\n                tooltipLabelFormatter: (value: number) => `Epoch ${value}`,\n                tooltipFormatter: (value: number, name: string) => [\n                    `${(value * PERCENTAGE.multiplier).toFixed(3)}%`,\n                    name,\n                ],\n                lines: [\n                    {\n                        dataKey: 'sgd',\n                        name: 'SGD Rate',\n                        color: COLORS.primary.main,\n                    },\n                    {\n                        dataKey: 'zsharp',\n                        name: 'ZSharp Rate',\n                        color: COLORS.data.green,\n                    },\n                ],\n            },\n        },\n    ];\n\n    return (\n        <ResearchDemo\n            title=\"ZSharp\"\n            subtitle=\"Neural Network Optimization Research\"\n            githubUrl={URLS.zsharpRepo}\n            chartData={chartData as any}\n            viewTypes={viewTypes as any}\n            currentViewType={viewType}\n            onViewTypeChange={setViewType as any}\n            loading={loading}\n            loadingMessage=\"Loading real experiment data...\"\n        />\n    );\n};\n\nexport default ZSharp;\n\n","import React, { useState, useEffect } from 'react';\nimport { URLS, PAGE_TITLES, GAME_CONSTANTS } from '../config/constants';\nimport { COLORS } from '../config/theme';\nimport {\n    BusinessRounded,\n    TrendingUpRounded,\n    AttachMoneyRounded,\n} from '../components/icons';\nimport ResearchDemo from '../components/ResearchDemo';\n\ninterface MatrixItem {\n    round: number;\n    price: number;\n    hhi: number;\n    collusion?: boolean;\n    num_firms?: number;\n    model_type?: string;\n    demand_elasticity?: number;\n    base_price?: number;\n    collusion_enabled?: boolean;\n}\n\ninterface MarketDataPoint {\n    round: number;\n    price: number;\n    hhi: number;\n    collusion?: boolean;\n}\n\ninterface ControlOption {\n    value: number;\n    label: string;\n}\n\ninterface Control {\n    label: string;\n    icon: React.ElementType;\n    color: string;\n    value: number;\n    onChange: (value: number) => void;\n    options: ControlOption[];\n}\n\nconst loadRealSimulationMatrix = async (): Promise<MatrixItem[]> => {\n    try {\n        const response = await fetch('/oligopoly_data.json.gz');\n        if (!response.ok) {\n            throw new Error(\n                `HTTP error! status: ${response.status} - Failed to load Oligopoly data`\n            );\n        }\n\n        if (typeof DecompressionStream === 'undefined') {\n            throw new Error(\n                'DecompressionStream not supported in this browser'\n            );\n        }\n\n        const compressedData = await response.arrayBuffer();\n        const decompressedData = await new Response(\n            new ReadableStream({\n                start(controller) {\n                    const decompressionStream = new DecompressionStream('gzip');\n                    const writer = decompressionStream.writable.getWriter();\n                    const reader = decompressionStream.readable.getReader();\n\n                    writer.write(compressedData).then(() => writer.close());\n\n                    function pump(): Promise<void> {\n                        return reader.read().then(({ done, value }: { done: boolean; value: Uint8Array | undefined }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            return pump();\n                        });\n                    }\n                    return pump();\n                },\n            })\n        ).text();\n        const matrixData: MatrixItem[] = JSON.parse(decompressedData);\n\n        if (!Array.isArray(matrixData)) {\n            throw new Error('Invalid data format: expected array');\n        }\n\n        return matrixData;\n    } catch (error) {\n        console.error('Error loading Oligopoly data:', error);\n        return [];\n    }\n};\n\nconst filterMatrixData = (\n    matrixData: MatrixItem[],\n    numFirms: number,\n    modelType: string,\n    demandElasticity: number,\n    basePrice: number,\n    collusionEnabled: boolean\n): MarketDataPoint[] => {\n    if (!matrixData || matrixData.length === 0) {\n        return generateFallbackOligopolyData();\n    }\n\n    const filtered = matrixData.filter(\n        item =>\n            item.num_firms === numFirms &&\n            item.model_type === modelType &&\n            item.demand_elasticity === demandElasticity &&\n            item.base_price === basePrice &&\n            item.collusion_enabled === collusionEnabled\n    );\n\n    if (filtered.length === 0) {\n        const closest = matrixData.filter(\n            item => item.num_firms === numFirms && item.model_type === modelType\n        );\n        const sorted = closest.sort((a, b) => a.round - b.round);\n        return sorted.slice(0, GAME_CONSTANTS.oligopoly.maxRounds);\n    }\n\n    const sorted = filtered.sort((a, b) => a.round - b.round);\n    return sorted.slice(0, 15);\n};\n\nconst generateFallbackOligopolyData = (): MarketDataPoint[] => {\n    const data: MarketDataPoint[] = [];\n    for (let i = 1; i <= GAME_CONSTANTS.oligopoly.maxRounds; i++) {\n        const sim = GAME_CONSTANTS.oligopoly.simulation;\n        data.push({\n            round: i,\n            price:\n                sim.fallbackPrice +\n                Math.sin(i * sim.priceFrequency) * sim.priceAmplitude,\n            hhi:\n                sim.fallbackHHI +\n                Math.sin(i * sim.hhiFrequency) * sim.hhiAmplitude,\n            collusion: i > sim.collusionStart && i < sim.collusionEnd,\n        });\n    }\n    return data;\n};\n\nconst Oligopoly: React.FC = () => {\n    const [numFirms, setNumFirms] = useState(\n        GAME_CONSTANTS.oligopoly.defaultFirms\n    );\n    const [demandElasticity, setDemandElasticity] = useState(\n        GAME_CONSTANTS.oligopoly.defaultElasticity\n    );\n    const [basePrice, setBasePrice] = useState(\n        GAME_CONSTANTS.oligopoly.defaultBasePrice\n    );\n    const [marketData, setMarketData] = useState<MarketDataPoint[]>([]);\n    const [matrixData, setMatrixData] = useState<MatrixItem[]>([]);\n    const [loading, setLoading] = useState(true);\n\n    const modelType = GAME_CONSTANTS.modelTypes.cournot;\n    const collusionEnabled = false;\n\n    useEffect(() => {\n        document.title = PAGE_TITLES.oligopoly;\n\n        const loadData = async () => {\n            setLoading(true);\n            try {\n                const data = await loadRealSimulationMatrix();\n                setMatrixData(data);\n                const initialData = filterMatrixData(\n                    data,\n                    numFirms,\n                    modelType,\n                    demandElasticity,\n                    basePrice,\n                    collusionEnabled\n                );\n                setMarketData(initialData);\n            } catch (error) {\n                console.error(\n                    'Error loading Oligopoly data in component:',\n                    error\n                );\n                setMarketData(generateFallbackOligopolyData());\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, [numFirms, demandElasticity, basePrice, collusionEnabled, modelType]);\n\n    useEffect(() => {\n        if (matrixData.length > 0) {\n            const filteredData = filterMatrixData(\n                matrixData,\n                numFirms,\n                modelType,\n                demandElasticity,\n                basePrice,\n                collusionEnabled\n            );\n            setMarketData(filteredData);\n        }\n    }, [\n        numFirms,\n        demandElasticity,\n        basePrice,\n        matrixData,\n        modelType,\n        collusionEnabled,\n    ]);\n\n    const resetToDefaults = () => {\n        setNumFirms(GAME_CONSTANTS.oligopoly.defaultFirms);\n        setDemandElasticity(GAME_CONSTANTS.oligopoly.defaultElasticity);\n        setBasePrice(GAME_CONSTANTS.oligopoly.defaultBasePrice);\n    };\n\n    const controls: Control[] = [\n        {\n            label: 'Number of Firms',\n            icon: BusinessRounded,\n            color: COLORS.primary.main,\n            value: numFirms,\n            onChange: setNumFirms,\n            options: [\n                { value: 2, label: '2' },\n                { value: 3, label: '3' },\n                { value: 4, label: '4' },\n                { value: 5, label: '5' },\n            ],\n        },\n        {\n            label: 'Demand Elasticity',\n            icon: TrendingUpRounded,\n            color: COLORS.data.green,\n            value: demandElasticity,\n            onChange: setDemandElasticity,\n            options: [\n                { value: 1.5, label: '1.5' },\n                { value: 2.0, label: '2.0' },\n                { value: 2.5, label: '2.5' },\n            ],\n        },\n        {\n            label: 'Base Price',\n            icon: AttachMoneyRounded,\n            color: COLORS.data.amber,\n            value: basePrice,\n            onChange: setBasePrice,\n            options: [\n                { value: 30, label: '$30' },\n                { value: 40, label: '$40' },\n                { value: 50, label: '$50' },\n            ],\n        },\n    ];\n\n    const chartConfig = {\n        type: 'line',\n        xAxisKey: 'round',\n        yAxisFormatter: (value: number) => `$${value.toFixed(2)}`,\n        yAxisDomain: ['dataMin - 5', 'dataMax + 5'],\n        dualYAxis: true,\n        rightYAxisFormatter: (value: number) => value.toFixed(2),\n        rightYAxisDomain: ['dataMin - 0.05', 'dataMax + 0.05'],\n        tooltipLabelFormatter: (value: number) => `Round ${value}`,\n        tooltipFormatter: (value: number, name: string) => [\n            name === 'Market Price' ? `$${value.toFixed(2)}` : value.toFixed(2),\n            name,\n        ],\n        lines: [\n            {\n                dataKey: 'price',\n                name: 'Market Price',\n                color: COLORS.primary.main,\n                yAxisId: 'left',\n            },\n            {\n                dataKey: 'hhi',\n                name: 'HHI Concentration',\n                color: COLORS.data.amber,\n                yAxisId: 'right',\n            },\n        ],\n    };\n\n    return (\n        <ResearchDemo\n            title=\"Oligopoly\"\n            subtitle=\"Agent-Based Economic Competition Analysis\"\n            githubUrl={URLS.oligopolyRepo}\n            chartData={marketData as any}\n            chartConfig={chartConfig as any}\n            chartTitle=\"Market Dynamics\"\n            controls={controls as any}\n            loading={loading}\n            loadingMessage=\"Loading Cournot simulation data...\"\n            onReset={resetToDefaults}\n            resetLabel=\"Reset\"\n        />\n    );\n};\n\nexport default Oligopoly;\n\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Typography, Box, IconButton, Fade } from '../components/mui';\nimport {\n    GitHub,\n    HomeRounded as Home,\n    GridView,\n    TextFields,\n} from '../components/icons';\nimport { URLS, PAGE_TITLES } from '../config/constants';\nimport {\n    COLORS,\n    SPACING,\n    TYPOGRAPHY,\n    COMPONENT_VARIANTS,\n} from '../config/theme';\nimport { GlassCard } from '../helpers';\n\ninterface Interpreter {\n    name: string;\n    path: string;\n    description: string;\n    icon: React.ReactElement;\n    category: string;\n}\n\n// Type assertion for GlassCard component\nconst TypedGlassCard = GlassCard as React.ComponentType<{\n    children?: React.ReactNode;\n    sx?: Record<string, unknown>;\n}>;\n\nexport default function Interpreters(): React.ReactElement {\n    useEffect(() => {\n        document.title = PAGE_TITLES.interpreters;\n    }, []);\n\n    const interpreters: Interpreter[] = [\n        {\n            name: 'Stun Step',\n            path: '/Stun_Step',\n            description:\n                'Ultra-minimal tape-based language with only four commands for basic computation',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'Suffolk',\n            path: '/Suffolk',\n            description:\n                'Register-based language with input/output capabilities and looping behavior',\n            icon: <TextFields />,\n            category: 'Text',\n        },\n        {\n            name: 'WII2D',\n            path: '/WII2D',\n            description:\n                '2D grid language with directional movement, arithmetic operations, and teleportation',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n        {\n            name: 'Back',\n            path: '/Back',\n            description:\n                'Grid-based language with mirror reflections, tape manipulation, and conditional logic',\n            icon: <GridView />,\n            category: 'Grid',\n        },\n    ];\n\n    return (\n        <Grid\n            container\n            minHeight=\"100vh\"\n            flexDirection=\"column\"\n            sx={{\n                position: 'relative',\n                padding: { xs: '1rem', md: '2rem' },\n                boxSizing: 'border-box',\n                width: '100%',\n                maxWidth: '100vw',\n                overflowX: 'hidden',\n            }}\n        >\n            {/* Background Elements */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: COLORS.surface.background,\n                    zIndex: -2,\n                }}\n            />\n\n            {/* Main Content */}\n            <Grid\n                flex={1}\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                sx={{\n                    zIndex: 1,\n                    padding: {\n                        xs: '0.5rem 0',\n                        md: `${SPACING.padding.md} 0`,\n                    },\n                    minHeight: 0,\n                }}\n            >\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: SPACING.maxWidth.md,\n                        width: '100%',\n                        padding: {\n                            xs: '0 0.5rem',\n                            md: `0 ${SPACING.padding.md}`,\n                        },\n                        boxSizing: 'border-box',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {/* Header */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        sx={{\n                            marginBottom: 4,\n                        }}\n                    >\n                        <Typography\n                            variant=\"h4\"\n                            sx={{\n                                color: COLORS.text.primary,\n                                fontWeight: TYPOGRAPHY.fontWeight.semibold,\n                                fontSize: {\n                                    xs: TYPOGRAPHY.fontSize.subheading,\n                                    md: TYPOGRAPHY.fontSize.h2,\n                                },\n                            }}\n                        >\n                            Esolang Interpreters\n                        </Typography>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                            <IconButton\n                                href={URLS.esolangsRepo}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <GitHub\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                            <IconButton component={Link} to=\"/\">\n                                <Home\n                                    sx={{\n                                        fontSize: { xs: '1.5rem', md: '2rem' },\n                                    }}\n                                />\n                            </IconButton>\n                        </Box>\n                    </Grid>\n\n                    {/* Interpreters Grid */}\n                    <Box\n                        sx={{\n                            display: 'grid',\n                            gridTemplateColumns: {\n                                xs: '1fr',\n                                md: '1fr 1fr',\n                            },\n                            gap: { xs: 2, md: 3 },\n                            marginTop: 4,\n                        }}\n                    >\n                        {interpreters.map((interpreter, index) => (\n                            <Fade\n                                in\n                                timeout={800 + index * 150}\n                                key={interpreter.name}\n                            >\n                                <Box\n                                    component={Link}\n                                    to={interpreter.path}\n                                    sx={{\n                                        textDecoration: 'none',\n                                        position: 'relative',\n                                        overflow: 'hidden',\n                                        ...COMPONENT_VARIANTS.interactiveCard,\n                                        '&:hover .glass-card': {\n                                            backgroundColor:\n                                                COLORS.interactive.selected,\n                                        },\n                                    }}\n                                >\n                                    <TypedGlassCard sx={{ border: 'none' }}>\n                                        <Box\n                                            sx={{\n                                                ...COMPONENT_VARIANTS.flexCenter,\n                                                gap: 1,\n                                                marginBottom: 2,\n                                            }}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                }}\n                                            >\n                                                {interpreter.icon}\n                                            </Box>\n                                            <Typography\n                                                variant=\"h6\"\n                                                sx={{\n                                                    color: COLORS.primary.main,\n                                                    fontWeight:\n                                                        TYPOGRAPHY.fontWeight\n                                                            .semibold,\n                                                    fontSize:\n                                                        TYPOGRAPHY.fontSize\n                                                            .body,\n                                                }}\n                                            >\n                                                {interpreter.name}\n                                            </Typography>\n                                        </Box>\n                                        <Typography\n                                            variant=\"body2\"\n                                            sx={{\n                                                color: COLORS.text.secondary,\n                                                wordWrap: 'break-word',\n                                                overflowWrap: 'break-word',\n                                                lineHeight: 1.5,\n                                            }}\n                                        >\n                                            {interpreter.description}\n                                        </Typography>\n                                    </TypedGlassCard>\n                                </Box>\n                            </Fade>\n                        ))}\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\n","import { ROUTES } from '../config/constants';\n\nexport { default as Home } from './Home';\nexport { default as Error } from './Error';\nexport { default as Snake } from './Snake';\nexport { default as Lights_Out } from './Lights/LightsOut';\nexport { default as ZSharp } from './ZSharp';\nexport { default as Oligopoly } from './Oligopoly';\nexport { default as Interpreters } from './Interpreters';\n\nexport const pages = ROUTES.pages;\n\n"],"names":["getWindow","innerWidth","width","innerHeight","height","window","getContainer","container","current","offsetHeight","offsetWidth","useContainer","initialSize","size","setSize","useState","prevSizeRef","useRef","useEffect","newSize","handleResize","prevSize","addEventListener","removeEventListener","useWindow","getSize","addEvent","removeEvent","useSize","useMobile","useMediaQuery","theme","breakpoints","down","globalTimer","globalRepeat","globalSpeed","useTimer","delay","repeat","speed","create","useCallback","_ref","newRepeat","newSpeed","clearInterval","setInterval","clear","useKeys","oldHandler","handler","document","targetHandler","useCache","getState","cache","index","processingRef","getStateRef","_ref2","type","payload","states","PROCESSING","doubleProcessingPrevention","_objectSpread","curr","length","state","next","push","result","setTimeout","resetDelay","prevResult","Section","children","id","paddingY","SPACING","padding","lg","paddingX","maxWidth","props","_objectWithoutProperties","_excluded","_jsx","Container","sx","Box","margin","HeroContainer","_ref3","paddingBottom","_excluded3","flex","COMPONENT_VARIANTS","flexCenter","paddingTop","xs","sm","md","overflowX","PROJECT_CATEGORIES","research","title","icon","Psychology","color","COLORS","data","green","projects","ZSharp","path","description","technology","Oligopoly","games","GamepadRounded","primary","main","Snake","Lights_Out","tools","Code","amber","Interpreters","ProjectDropdown","Object","entries","map","categoryKey","category","IconComponent","_jsxs","marginBottom","display","alignItems","gap","position","content","bottom","left","right","backgroundColor","fontSize","opacity","Typography","fontWeight","textTransform","letterSpacing","fontFamily","projectName","project","MenuItem","component","Link","to","borderRadius","minHeight","transition","flexDirection","transform","outline","ring","ringOffset","lineHeight","replace","MenuButton","anchor","setAnchor","handleClick","event","currentTarget","clickHandler","handleClose","closeHandler","open","Boolean","define","value","undefined","TooltipButton","Icon","ViewModuleRounded","onClick","interactive","hover","Menu","anchorEl","disableAutoFocusItem","BackdropProps","backdropFilter","marginLeft","marginTop","border","boxShadow","onClose","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","Home","PAGE_TITLES","home","Grid","background","surface","boxSizing","top","zIndex","justifyContent","href","URLS","githubProfile","target","rel","GitHub","spacing","Fade","in","timeout","TYPOGRAPHY","body","semibold","text","bold","wordBreak","hyphens","PERSONAL_INFO","name","secondary","LocationOn","medium","location","flexWrap","element","getElementById","scrollIntoView","behavior","block","inline","selected","full","ANIMATIONS","cursor","ArrowForward","GlassCard","subheading","gridTemplateColumns","SKILLS","skill","ICON_MAP","Work","minWidth","overflow","whiteSpace","textOverflow","flexShrink","Button","variant","startIcon","textDecoration","endIcon","h2","textAlign","PUBLICATIONS","publication","url","interactiveCard","caption","OpenInNew","conference","PROJECTS","Error","error","concat","HomeButton","getRandom","max","Math","floor","random","mapBoard","board","change","newBoard","cell","rows","cols","head","reduceBoard","velocity","buffer","gridMove","exclude","pos","addNext","first","rest","handleAction","action","getDirection","key","createTimer","createKeys","GAME_CONSTANTS","snake","initialLength","segmentSize","randomMovesEnabled","setRandomMovesEnabled","randomMovesRef","showArrows","setShowArrows","useMemo","convertPixels","initial","initialVelocity","dispatch","useReducer","controlHandler","controls","arrowPrefix","chooseColor","row","col","dark","wrapDispatch","CustomGrid","cellProps","Controls","onRandom","randomEnabled","hide","ArrowsButton","show","setShow","Board","frontProps","backProps","Centered","space","useGetters","getTile","palette","getColor","front","back","getBorder","self","upCheck","downCheck","leftCheck","rightCheck","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderHandler","getFiller","topLeft","topRight","botLeft","botRight","total","Number","fillerHandler","getGrid","Array","fill","flipAdj","grid","newGrid","randomize","r","c","handleBoard","score","flat","flatMap","includes","newRows","newCols","countBits","num","count","multiplySym","matrixA","matrixB","output","rowA","outputRow","getIdentity","symmetricPow","matrix","power","k","addSym","sortMatrices","identity","sorted","keys","sort","a","b","getProduct","input","getMatrix","product","poly","degree","evalPolynomial","prev","double","getPolynomial","inverse","original","inverted","pow","alt","invertMatrix","binary","parseInt","join","chaseLights","dims","newStates","at","fillRow","blank","inputStates","outputStates","last","extendBack","extend","getStates","boardStates","before","i","unshift","after","propHandler","getter","frames","percent","getFrames","animation","getRange","rowTiles","dRange","lRange","Bifold","Title","Example","start","mobile","boardTiles","gridTiles","inputTiles","outputTiles","getRow","s","getBoard","getInput","getOutput","TypedGlassCard","useHandler","Info","toggleOpen","isMobile","isLargeScreen","setRow","newRow","res","inputGetters","outputGetters","inputProps","getters","toggleTile","style","CircleRounded","stopPropagation","outputProps","Backdrop","card","maxHeight","mx","subtle","pt","pb","px","gutterBottom","mb","KeyboardArrowDown","mr","ml","Calculate","Replay","getFrontProps","LightsOut","gridSizes","desktop","lightsOut","InfoRounded","_viewTypes$find","_viewTypes$find2","subtitle","githubUrl","chartData","chartConfig","lines","xAxisKey","yAxisFormatter","toFixed","yAxisDomain","dualYAxis","rightYAxisFormatter","rightYAxisDomain","tooltipLabelFormatter","tooltipFormatter","viewTypes","currentViewType","onViewTypeChange","loading","loadingMessage","onReset","resetLabel","chartTitle","currentData","getCurrentChartData","currentView","find","view","dataProcessor","currentChartConfig","IconButton","normal","CHART_DIMENSIONS","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","CHART_FORMATTING","strokeDashArray","stroke","XAxis","dataKey","tick","YAxis","yAxisId","tickFormatter","domain","orientation","RechartsTooltip","contentStyle","labelFormatter","formatter","line","Line","strokeWidth","dot","defaultStrokeWidth","dotRadius","SettingsRounded","light","min","viewType","borderColor","borderWidth","borderStyle","label","Refresh","control","ToggleButtonGroup","exclusive","onChange","e","newValue","borderLeft","hoverColor","options","option","ToggleButton","generateFallbackData","ZSHARP_DEFAULTS","maxEpochs","sgdAccuracy","baseAccuracy","maxAccuracy","zsharpAccuracy","improvement","sgdLoss","baseLoss","minLoss","zsharpLoss","lossReduction","epoch","sgd","zsharp","setChartData","setLoading","setViewType","async","_realData$SGDBaselin","_realData$ZSharp","_realData$SGDBaselin2","_realData$ZSharp2","DecompressionStream","response","fetch","ok","status","compressedData","arrayBuffer","decompressedData","Response","ReadableStream","controller","decompressionStream","writer","writable","getWriter","reader","readable","getReader","write","then","close","pump","read","done","enqueue","realData","JSON","parse","sgdAccuracies","train_accuracies","zsharpAccuracies","sgdLosses","train_losses","zsharpLosses","PERCENTAGE","divisor","loadRealZSharpData","console","loadData","BarChartRounded","multiplier","TrendingUpRounded","point","ShowChartRounded","AnalyticsRounded","prevPoint","ResearchDemo","zsharpRepo","filterMatrixData","matrixData","numFirms","modelType","demandElasticity","basePrice","collusionEnabled","generateFallbackOligopolyData","filtered","filter","item","num_firms","model_type","demand_elasticity","base_price","collusion_enabled","round","slice","oligopoly","maxRounds","sim","simulation","price","fallbackPrice","sin","priceFrequency","priceAmplitude","hhi","fallbackHHI","hhiFrequency","hhiAmplitude","collusion","collusionStart","collusionEnd","setNumFirms","defaultFirms","setDemandElasticity","defaultElasticity","setBasePrice","defaultBasePrice","marketData","setMarketData","setMatrixData","modelTypes","cournot","isArray","loadRealSimulationMatrix","initialData","filteredData","BusinessRounded","AttachMoneyRounded","oligopolyRepo","resetToDefaults","interpreters","TextFields","GridView","direction","esolangsRepo","interpreter","wordWrap","overflowWrap","ROUTES","pages"],"sourceRoot":""}