{"version":3,"sources":["helpers.js","Components/Buttons.js","Components/Grid.js","Components/Interpreters/Back.js","Components/TextBox.js","Components/Interpreters/Suffolk.js","Components/Snake.js","Components/Home.js","Components/Error.js","index.js"],"names":["emptyArray","size","arr","Array","fill","map","x","pairEquals","y","includes","pair","some","p","Buttons","props","run","set","className","type","onClick","pointer","tape","cell","num","length","forEach","push","grid","pop","navigator","clipboard","writeText","join","to","Grid","changeText","bind","state","select","breaks","mode","this","every","e","alert","setState","func","temp","pos","end","value","row","col","key","toLowerCase","filter","document","title","addEventListener","removeEventListener","val","changeColor","bgcolor","chooseColor","name","tile","toString","style","fontSize","textAlign","href","m","runCode","s","ind","color","React","Component","code","vel","back","a","b","c","Back","acc","ptr","out","handleChange","event","target","prog","text","split","Math","max","onSubmit","handleSubmit","onChange","onPaste","rows","cols","getProgram","getTape","len","inp","prompt","charCodeAt","String","fromCharCode","Suffolk","createArr","window","innerHeight","innerWidth","floor","_","random","Snake","updateDim","changeDir","move","buff","old","timerID","setInterval","clearInterval","n","randomPos","height","width","cursor","marginBottom","Home","history","action","display","withRouter","Error","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a6779a0.chunk.js","sourcesContent":["export function emptyArray(size) {\r\n    let arr = Array(size).fill(' ');\r\n    return arr.map(x => [...arr]);\r\n}\r\n\r\nexport function pairEquals(x, y) {\r\n    if (x === null || y === null)\r\n        return x === y;\r\n\r\n    return x[0] === y[0]\r\n        && x[1] === y[1];\r\n}\r\n\r\nexport function includes(arr, pair) {\r\n    return arr.some(p =>\r\n        pairEquals(p, pair));\r\n}\r\n","import {Link} from 'react-router-dom';\r\n\r\nexport default function Buttons(props) {\r\n    let {run, set, arr} = props;\r\n\r\n    return (<div>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('run')}>\r\n            ▶\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('back')}>\r\n            &nbsp;❮&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={run('fore')}>\r\n            &nbsp;❯&nbsp;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => set({\r\n                    pointer: null,\r\n                    tape: [],\r\n                    cell: 0\r\n                    })}>\r\n            ✖\r\n        </button>\r\n        <br />\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length + 1;\r\n\r\n                    arr.forEach(x => x.push(' '));\r\n                    arr.push(Array(num).fill(' '));\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➕&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    let num = arr.length - 1;\r\n                    if (!num) return;\r\n\r\n                    arr.pop();\r\n                    arr.forEach(x => x.pop());\r\n                    set({size: num, grid: arr});\r\n                }}>\r\n            ➖&#xfe0e;\r\n        </button>\r\n        <button className='custom'\r\n                type='button'\r\n                onClick={() => {\r\n                    navigator.clipboard.writeText(\r\n                        arr.map(x => x.join(''))\r\n                           .join('\\n')\r\n                )}}>\r\n            📥&#xfe0e;\r\n        </button>\r\n        <Link to='/'>\r\n            <button className='custom'\r\n                    type='button'>\r\n                🏠&#xfe0e;\r\n            </button>\r\n        </Link>\r\n    </div>);\r\n}","import {emptyArray, pairEquals, includes} from '../helpers';\r\nimport Buttons from './Buttons';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        let size = 5;\r\n        this.changeText =\r\n            this.changeText\r\n                .bind(this);\r\n\r\n        this.state = {\r\n            grid: emptyArray(size),\r\n            size,\r\n            tape: [],\r\n            cell: 0,\r\n            select: null,\r\n            pointer: null,\r\n            breaks: []\r\n        };\r\n    }\r\n\r\n    runCode(mode) {\r\n        return function() {\r\n            if (this.state.grid.every(\r\n                    e => !e.includes('*'))) {\r\n                alert('No halt instruction detected!');\r\n                this.setState({select: null});\r\n                return;\r\n            }\r\n\r\n            if (this.state.pointer === null) {\r\n                this.func = this.props.run(this.state.grid);\r\n                if (mode !== 'run') {\r\n                    this.setState({\r\n                        pointer: [0, 0],\r\n                        select: null,\r\n                        tape: [0],\r\n                        cell: 0\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let temp;\r\n            this.setState({select: null});\r\n\r\n            if (mode === 'run')\r\n                do {\r\n                    temp = this.func();\r\n                } while (!(includes(\r\n                    this.state.breaks,\r\n                    temp.pos) || temp.end));\r\n            else if (mode === 'fore')\r\n                temp = this.func();\r\n            else if (mode === 'back')\r\n                temp = this.func(true);\r\n\r\n            let {pos, end, tape, cell} = temp;\r\n\r\n            this.setState({\r\n                pointer: end ? null : pos,\r\n                tape: tape,\r\n                cell: cell\r\n            });\r\n        }.bind(this);\r\n    }\r\n\r\n    changeText(e) {\r\n        let {select, breaks} = this.state;\r\n\r\n        if (select !== null) {\r\n            let arr = this.state.grid;\r\n            let [row, col] = select;\r\n            let value;\r\n\r\n            if (e.key.toLowerCase() === 'b') {\r\n                if (includes(breaks, select))\r\n                    breaks = breaks.filter(p =>\r\n                        !pairEquals(p, select));\r\n                else\r\n                    breaks.push(select);\r\n\r\n                this.setState({breaks: breaks});\r\n                return;\r\n            } else if (e.key.length === 1) {\r\n                value = e.key;\r\n            } else if (e.key === 'Backspace'\r\n                    || e.key === 'Delete') {\r\n                value = ' ';\r\n            } else if (e.key.includes('Arrow')) {\r\n                if (e.key.includes('Left'))\r\n                    col -= 1;\r\n                else if (e.key.includes('Right'))\r\n                    col += 1;\r\n                else if (e.key.includes('Up'))\r\n                    row -= 1;\r\n                else\r\n                    row += 1;\r\n\r\n                let size = this.state.size;\r\n                row = (row + size) % size;\r\n                col = (col + size) % size;\r\n                this.setState({\r\n                    select: [row, col]});\r\n\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            arr[row][col] = value;\r\n            this.setState({grid: arr});\r\n        }\r\n    }\r\n\r\n    changeColor(pos) {\r\n        return function() {\r\n            let select = this.state.select;\r\n            select = pairEquals(select, pos)\r\n                ? null : pos;\r\n            this.setState({select: select});\r\n        };\r\n    }\r\n\r\n    chooseColor(pos) {\r\n        let {select, pointer, breaks}\r\n            = this.state;\r\n\r\n        if (pairEquals(select, pos))\r\n            return 'grey';\r\n        else if (pairEquals(pointer, pos))\r\n            return 'red';\r\n        else if (includes(breaks, pos))\r\n            return 'yellow';\r\n\r\n        return 'white';\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeText,\r\n            false);\r\n    }\r\n\r\n    tile(val, row, col) {\r\n        let pos = [row, col];\r\n\r\n        return <td\r\n                key={`${row}-${col}`}\r\n                onClick={this.changeColor(pos).bind(this)}\r\n                bgcolor={this.chooseColor(pos)}>\r\n            <div>&nbsp;{val}&nbsp;</div>\r\n        </td>;\r\n    }\r\n\r\n    render() {\r\n        let name = this.props.name;\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <table>\r\n                            <tbody>\r\n                                {this.state.grid.map((arr, row) =>\r\n                                    (<tr key={row.toString()}>{\r\n                                        arr.map((val, col) =>\r\n                                        this.tile(val, row, col))\r\n                                    }</tr>)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <code>Instructions:</code>\r\n                        <ul style={{fontSize: '75%', textAlign: 'left'}}>\r\n                            <li>Click to select/unselect</li>\r\n                            <li>Type to change selected cell</li>\r\n                            <li>Press (b) to use breakpoints</li>\r\n                            <li>\r\n                                {name} commands located&nbsp;\r\n                                <a href={'https://esolangs.org/wiki/' + name}>here</a>\r\n                            </li>\r\n                        </ul>\r\n                        <Buttons\r\n                            run={(m) => this.runCode(m)}\r\n                            set={(s) => this.setState(s)}\r\n                            arr={this.state.grid}\r\n                        />\r\n                        <br />\r\n                        <code>Output:</code>\r\n                        <br />\r\n                        <div className='output'>\r\n                            <code>&nbsp;</code>\r\n                            {this.state.tape.map((val, ind) => {\r\n                                let color = this.state.cell === ind\r\n                                    ? 'red' : 'white';\r\n                                return <code\r\n                                        key={ind.toString()}\r\n                                        style={{color: color}}>\r\n                                    {val}&nbsp;\r\n                                </code>;})}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import Grid from '../Grid';\r\n\r\nfunction run(code) {\r\n    let row = code.length;\r\n    let col = code[0].length;\r\n    let arr = [{\r\n        end: false,\r\n        pos: [0, 0],\r\n        vel: [0, 1],\r\n        tape: [0],\r\n        cell: 0\r\n    }];\r\n    let ind = 0;\r\n\r\n    return function(back = false) {\r\n        let state = arr[arr.length - 1];\r\n\r\n        if (back && ind)\r\n            ind -= 1;\r\n        else if (!back && !state.end)\r\n            ind += 1;\r\n\r\n        if (ind < arr.length)\r\n            return arr[ind];\r\n\r\n        let {tape, cell, end} = state;\r\n        let [x, y] = state.pos;\r\n        let [a, b] = state.vel;\r\n        let c = code[x][y];\r\n        tape = [...tape];\r\n\r\n        if (c === '\\\\') {\r\n            [a, b] = [b, a];\r\n        } else if (c === '/') {\r\n            [a, b] = [-b, -a];\r\n        } else if (c === '<' && cell) {\r\n            cell -= 1;\r\n        } else if (c === '>') {\r\n            cell += 1;\r\n            if (cell === tape.length)\r\n                tape.push(0);\r\n        } else if (c === '-') {\r\n            tape[cell] ^= 1;\r\n        } else if (c === '+' && !tape[cell]) {\r\n            [x, y] = [x + a, y + b];\r\n        } else if (c === '*') {\r\n            end = true;\r\n        }\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n        state = {\r\n            pos: [x, y],\r\n            vel: [a, b],\r\n            tape: tape,\r\n            cell: cell,\r\n            end: end\r\n        };\r\n        arr.push(state);\r\n\r\n        return state;\r\n    };\r\n}\r\n\r\nexport default function Back() {\r\n    return <Grid\r\n        run={run}\r\n        name='Back' />;\r\n}","import {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            tape: [0],\r\n            code: '',\r\n            acc: 0,\r\n            ind: 0,\r\n            ptr: 0,\r\n            out: '',\r\n            end: true\r\n        };\r\n\r\n        this.func = () => this.state;\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Interpreter';\r\n    }\r\n\r\n    handleChange(event) {\r\n        let val = event.target.value;\r\n        let code = '';\r\n\r\n        if (val !== this.state.value) {\r\n            for (let c of val)\r\n                if ('><!,.'.includes(c))\r\n                    code += c;\r\n\r\n            this.setState({\r\n                value: val,\r\n                code: code\r\n            });\r\n\r\n            this.func = this.props.run(code);\r\n            this.setState({\r\n                tape: [0],\r\n                acc: 0,\r\n                ind: 0,\r\n                ptr: 0,\r\n                out: '',\r\n                end: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getProgram() {\r\n        let code = this.state.code;\r\n        let prog = [...code].map((val, ind) => {\r\n            let color = this.state.ind === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color: color}}>\r\n                    {val}\r\n                </code>;});\r\n        let text = 'Program:';\r\n\r\n        if (prog.length)\r\n            text += ' ';\r\n\r\n        return <code>{text}{prog}</code>;\r\n    }\r\n\r\n    getTape() {\r\n        let tape = this.state.tape;\r\n        let text = tape.map((val, ind) => {\r\n            let color = this.state.ptr === ind\r\n                ? 'red' : 'white';\r\n            return <code key={ind.toString()}\r\n                         style={{color: color}}>\r\n                    &nbsp;{val}\r\n                </code>;});\r\n\r\n        return <code>Tape:{text}</code>;\r\n    }\r\n\r\n    render() {\r\n        let name = this.props.name;\r\n        let arr = this.state.value.split('\\n');\r\n        let col = Math.max(...arr.map(val => val.length));\r\n        let row = arr.length;\r\n\r\n        if (row < 3)\r\n            row = 12;\r\n        if (col < 30)\r\n            col = 60;\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <div className='split left'>\r\n                    <div className='centered'>\r\n                        <code>\r\n                            {name + ' '}\r\n                            (<a href={'https://esolangs.org/wiki/' + name}>\r\n                                Commands\r\n                            </a>)\r\n                        </code>\r\n                        <br /><br />\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                <textarea\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    onPaste={this.handleChange}\r\n                                    rows={row} cols={col} />\r\n                            </label>\r\n                        </form>\r\n                        <button className='custom'\r\n                                type='button'\r\n                                onClick={() => {\r\n                                    let temp = {end: false};\r\n\r\n                                    do {\r\n                                        temp = this.func();\r\n                                    } while (!temp.end);\r\n\r\n                                    this.setState(temp);\r\n                                }}>\r\n                            ▶\r\n                        </button>\r\n                        <button className='custom'\r\n                                type='button'\r\n                                onClick={() => this.setState(\r\n                                    this.func(true))}>\r\n                            &nbsp;❮&nbsp;\r\n                        </button>\r\n                        <button className='custom'\r\n                                type='button'\r\n                                onClick={() => this.setState(\r\n                                    this.func())}>\r\n                            &nbsp;❯&nbsp;\r\n                        </button>\r\n                        <Link to='/'>\r\n                            <button className='custom'\r\n                                    type='button'>\r\n                                🏠&#xfe0e;\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='split right'>\r\n                    <div className='centered'>\r\n                        <div className='output'>\r\n                            {this.getProgram()}\r\n                        </div>\r\n                        <div className='output'>\r\n                            {this.getTape()}\r\n                        </div>\r\n                        <div className='output'>\r\n                            <code>\r\n                                Output:\r\n                                {this.state.out == ''\r\n                                    ? '' : ' '}\r\n                                {this.state.out}\r\n                            </code>\r\n                        </div>\r\n                        <div className='output'>\r\n                            <code>\r\n                                Register: {this.state.acc}\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import TextBox from '../TextBox';\r\n\r\nfunction run(code) {\r\n    let num = 0;\r\n    let len = code.length;\r\n    let arr = [{\r\n        tape: [0],\r\n        acc: 0,\r\n        ind: 0,\r\n        ptr: 0,\r\n        out: '',\r\n        end: false\r\n    }];\r\n\r\n    return function(back = false) {\r\n        let state = arr[arr.length - 1];\r\n        let c = code[num % len];\r\n        let {end} = state;\r\n\r\n        if (back) {\r\n            if (num)\r\n                num -= 1;\r\n        } else {\r\n            num += 1;\r\n\r\n            if (num % len === 0)\r\n                end = true;\r\n            else if (state.end)\r\n                end = false;\r\n        }\r\n\r\n        if (num < arr.length)\r\n            return arr[num];\r\n\r\n        let {tape, acc, ptr, out} = state;\r\n        let ind = num % len;\r\n        tape = [...tape];\r\n\r\n        if (c === '>') {\r\n            ptr += 1;\r\n            if (ptr === tape.length)\r\n                tape.push(0);\r\n        } else if (c === '<') {\r\n            acc += tape[ptr];\r\n            ptr = 0;\r\n        } else if (c === '!') {\r\n            tape[ptr] -= acc - 1;\r\n\r\n            if (tape[ptr] < 0)\r\n                tape[ptr] = 0;\r\n\r\n            acc = 0;\r\n            ptr = 0;\r\n        } else if (c === ',') {\r\n            let inp = '';\r\n\r\n            while (!inp.length)\r\n                inp = prompt('Input: ');\r\n\r\n            acc = inp.charCodeAt(0);\r\n        } else if (c === '.') {\r\n            if (acc > 0)\r\n                out += String\r\n                    .fromCharCode(acc - 1);\r\n        }\r\n\r\n        state = {\r\n            tape: tape,\r\n            acc: acc,\r\n            ind: ind,\r\n            ptr: ptr,\r\n            out: out,\r\n            end: end\r\n        };\r\n\r\n        arr.push(state);\r\n        return state;\r\n    };\r\n}\r\n\r\nexport default function Suffolk() {\r\n    return <TextBox\r\n        run={run}\r\n        name='Suffolk' />;\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction createArr() {\r\n    let x = window.innerHeight;\r\n    let y = window.innerWidth;\r\n\r\n    x = Math.floor(x / 50);\r\n    y = Math.floor(y / 50);\r\n    let arr = [...Array(x)]\r\n        .map(_ => Array(y).fill(0));\r\n\r\n    let a = Math.floor(Math.random() * x);\r\n    let b = Math.floor(Math.random() * y);\r\n    arr[a][b] = -1;\r\n\r\n    return arr;\r\n}\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.updateDim =\r\n            this.updateDim\r\n                .bind(this);\r\n        this.changeDir =\r\n            this.changeDir\r\n                .bind(this);\r\n\r\n        let arr = createArr();\r\n        this.state = {\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            len: 3,\r\n            pos: [0, 0],\r\n            vel: [0, 1],\r\n            arr: arr,\r\n            move: true,\r\n            buff: null\r\n        }\r\n    }\r\n\r\n    randomPos() {\r\n        let arr = [...this.state.arr];\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let x, y;\r\n\r\n        do {\r\n            x = Math.floor(Math.random() * row);\r\n            y = Math.floor(Math.random() * col);\r\n        } while (arr[x][y]);\r\n\r\n        arr[x][y] = -1;\r\n        this.setState({arr: arr});\r\n    }\r\n\r\n    updateDim() {\r\n        let arr = createArr();\r\n\r\n        this.setState({\r\n            row: arr.length,\r\n            col: arr[0].length,\r\n            arr: arr});\r\n    }\r\n\r\n    changeDir(e) {\r\n        let s = e.key.toLowerCase();\r\n        let old = this.state.vel;\r\n        let vel;\r\n\r\n        if (s === 'arrowleft' || s === 'a')\r\n            vel = [0, -1];\r\n        else if (s === 'arrowright' || s === 'd')\r\n            vel = [0, 1];\r\n        else if (s === 'arrowup' || s === 'w')\r\n            vel = [-1, 0];\r\n        else if (s === 'arrowdown' || s === 's')\r\n            vel = [1, 0];\r\n        else\r\n            return;\r\n\r\n        if (old[0] + vel[0] &&\r\n                old[0] !== vel[0])\r\n            if (this.state.move)\r\n                this.setState({\r\n                    vel: vel,\r\n                    move: false});\r\n            else\r\n                this.setState({\r\n                    buff: vel});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.move(), 100);\r\n        document.title = 'Snake';\r\n        document.addEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        this.updateDim();\r\n        window.addEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        document.removeEventListener(\r\n            'keydown',\r\n            this.changeDir,\r\n            false);\r\n        window.removeEventListener(\r\n            'resize', this.updateDim);\r\n    }\r\n\r\n    move() {\r\n        let [x, y] = this.state.pos;\r\n        let [a, b] = this.state.vel;\r\n        let {row, col} = this.state;\r\n        let arr = this.state.arr\r\n            .map(a => a.map(\r\n                n => n > 0 ? n - 1 : n\r\n            ));\r\n\r\n        x = (x + a + row) % row;\r\n        y = (y + b + col) % col;\r\n\r\n        if (arr[x][y] > 0) {\r\n            let num = arr[x][y];\r\n            this.setState({len: this.state.len - num});\r\n            arr = arr.map(a => a.map(\r\n                n => n > num ? n - num : -(n < 0)));\r\n        } else if (arr[x][y] < 0) {\r\n            this.setState({len: this.state.len + 1});\r\n            this.randomPos();\r\n            arr = this.state.arr.map(a => a.map(\r\n                n => n > 0 ? n + 1 : -(n < 0)));\r\n        }\r\n\r\n        arr[x][y] = this.state.len;\r\n        let buff = this.state.buff;\r\n        if (buff)\r\n            this.setState({\r\n                buff: null,\r\n                vel: buff});\r\n\r\n        this.setState({\r\n            move: !buff,\r\n            pos: [x, y],\r\n            arr: arr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className='App-header'>\r\n                <table style={{height: '85vh', width: '95vw'}}>\r\n                    <tbody>\r\n                        {this.state.arr.map((a, row) =>\r\n                            (<tr key={row.toString()}>{\r\n                                a.map((val, col) =>\r\n                                <td key={`${row}-${col}`}\r\n                                    bgcolor={val > 0 ? 'white' :\r\n                                        val < 0 ? 'red' : 'black'}\r\n                                        style={{cursor: 'default'}}>\r\n                                    <div>&nbsp;</div>\r\n                                </td>)\r\n                            }</tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <Link to='/' style={{marginBottom: '20px'}}>\r\n                    <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n                </Link>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            select: false,\r\n            value: 'back'\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Home';\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.history.push(`/${this.state.value}`);\r\n    }\r\n\r\n    render() {\r\n        let select;\r\n\r\n        if (this.state.select)\r\n            select = (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        <select value={this.state.value} onChange={this.handleChange}>\r\n                            <option value=\"back\">Back</option>\r\n                            <option value=\"suffolk\">Suffolk</option>\r\n                        </select>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>);\r\n        else\r\n            select = (null);\r\n\r\n        return (\r\n            <header className='App-header'>\r\n                <h1 className='logo'>\r\n                    Bangyen\r\n                </h1>\r\n                <div>\r\n                    <button className='custom'\r\n                            type='button'\r\n                            onClick={() => this.setState({\r\n                                select: true})}>\r\n                        Interpreter\r\n                    </button>\r\n                    <Link to='/snake'>\r\n                        <button className='custom'\r\n                                type='button'>\r\n                            Snake\r\n                        </button>\r\n                    </Link>\r\n                    <form action='https://github.com/bangyen'\r\n                            style={{display: 'inline-block'}}>\r\n                        <input type='submit'\r\n                            value='GitHub'\r\n                            className='custom' />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    {select}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Error() {\r\n    document.title = '404';\r\n    return (\r\n        <header className='App-header'>\r\n            <h1>404 Error</h1>\r\n            <Link to='/' style={{ marginBottom: '20px' }}>\r\n                <button className='custom'\r\n                            type='button'>\r\n                        🏠&#xfe0e;\r\n                    </button>\r\n            </Link>\r\n        </header>\r\n    );\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Back from './Components/Interpreters/Back';\r\nimport Suffolk from './Components/Interpreters/Suffolk';\r\nimport Snake from './Components/Snake';\r\nimport Home from './Components/Home';\r\nimport Error from './Components/Error';\r\n\r\nimport './index.css';\r\nimport './Grid.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/back\">\r\n                        <Back />\r\n                    </Route>\r\n                    <Route exact path=\"/suffolk\">\r\n                        <Suffolk />\r\n                    </Route>\r\n                    <Route exact path=\"/snake\">\r\n                        <Snake />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route >\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}